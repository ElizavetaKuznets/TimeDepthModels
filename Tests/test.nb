(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    612050,      11914]
NotebookOptionsPosition[    605395,      11799]
NotebookOutlinePosition[    605832,      11816]
CellTagsIndexPosition[    605789,      11813]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["PARAMETRES", "Subsection",
 CellChangeTimes->{{3.8810475040386586`*^9, 3.8810475161383333`*^9}},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"fdadaf8c-a3dc-49e9-be19-ff7f4a92b8ea"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"listH", " ", "=", 
   RowBox[{"{", 
    RowBox[{"100", ",", "10", ",", "100"}], "}"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "\:043c\:043e\:0449\:043d\:043e\:0441\:0442\:0438", " ", 
    "\:0441\:043b\:043e\:0435\:0432"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alpha", " ", "=", " ", 
   RowBox[{"10", " ", "Degree"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "\:043d\:0430\:043a\:043b\:043e\:043d", " ", 
    "\:0441\:043b\:043e\:0435\:0432"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"len", " ", "=", " ", "100"}], 
  RowBox[{"(*", 
   RowBox[{
   "\:0434\:043b\:0438\:043d\:0430", " ", 
    "\:043f\:0440\:043e\:0444\:0438\:043b\:044f"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dx", " ", "=", " ", "3"}], 
  RowBox[{"(*", 
   RowBox[{
   "\:0448\:0430\:0433", " ", "\:043f\:043e", " ", 
    "\:043f\:0440\:043e\:0444\:0438\:043b\:044e"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"anoMaxDisp", " ", "=", " ", "100"}], 
  RowBox[{"(*", 
   RowBox[{
   "\:0441\:0442\:0435\:043f\:0435\:043d\:044c", " ", 
    "\:0441\:043a\:043b\:0430\:0434\:0447\:0430\:0442\:043e\:0441\:0442\:0438\
", " ", "\:043d\:0438\:0436\:043d\:0435\:0433\:043e", " ", 
    "\:0441\:043b\:043e\:044f", " ", "\:0432", " ", 
    "\:043c\:0435\:0442\:0440\:0430\:0445"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hTapering", " ", "=", "5"}], "  ", 
  RowBox[{"(*", 
   RowBox[{
   "\:0441\:0442\:0435\:043f\:0435\:043d\:044c", " ", 
    "\:0432\:043b\:0438\:044f\:043d\:0438\:044f", " ", 
    "\:043d\:0438\:0436\:043d\:0435\:0433\:043e", " ", 
    "\:0433\:043e\:0440\:0438\:0437\:043e\:043d\:0442\:0430", " ", 
    "\:043d\:0430", " ", "\:0432\:0435\:0440\:0445\:043d\:0438\:0435"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listV", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1000", ",", "2000", ",", "3000", ",", " ", "4000"}], "}"}]}], 
  " ", 
  RowBox[{"(*", 
   RowBox[{
   "\:043d\:0430\:0431\:043e\:0440", " ", 
    "\:0441\:043a\:043e\:0440\:043e\:0441\:0442\:0435\:0439"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numOfWells", " ", "=", " ", "10"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "\:043a\:043e\:043b", " ", "\:0441\:043a\:0432\:0430\:0436\:0438\:043d"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"wellsLocation", " ", "=", " ", "\"\<min\>\"", " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\:0440\:0430\:0441\:043f\:043e\:043b\:043e\:0436\:0435\:043d\:0438\:0435\
", " ", "\:0441\:043a\:0432\:0430\:0436\:0438\:043d", " ", "\"\<max\>\""}], 
    ",", "\"\<min\>\"", ",", "\"\<regular\>\"", ",", "\"\<random\>\""}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.880697898568991*^9, 3.8806980115158677`*^9}, {
   3.8806981193818083`*^9, 3.8806981823784804`*^9}, 3.8806998102348595`*^9, 
   3.880699844449418*^9, {3.880699894338462*^9, 3.880699911794651*^9}, {
   3.8807179664835443`*^9, 3.880717998483395*^9}, {3.880718929249283*^9, 
   3.8807189535741167`*^9}, {3.8807192421740303`*^9, 3.880719242487858*^9}, {
   3.8807196310863066`*^9, 3.8807196325897846`*^9}, {3.880766408609705*^9, 
   3.880766446769513*^9}, {3.8807664799168425`*^9, 3.8807664804594693`*^9}, {
   3.8807665256570816`*^9, 3.880766548355693*^9}, {3.880813297168646*^9, 
   3.880813304132747*^9}, {3.8808502565239086`*^9, 3.880850257226227*^9}, {
   3.8808527320367517`*^9, 3.8808527501275454`*^9}, {3.880852797158949*^9, 
   3.880852815366334*^9}, {3.8808556594510336`*^9, 3.8808560702569532`*^9}, 
   3.880856326602418*^9, {3.8808564802626686`*^9, 3.8808564818676558`*^9}, {
   3.88085692950337*^9, 3.880856930112013*^9}, {3.8808733733251424`*^9, 
   3.8808733775612774`*^9}, {3.880873588092989*^9, 3.8808736011151943`*^9}, 
   3.880873825129749*^9, {3.8808739902711363`*^9, 3.8808740244993973`*^9}, {
   3.880875785391431*^9, 3.8808757885736847`*^9}, {3.8808764749228497`*^9, 
   3.8808764751933155`*^9}, {3.880876667310186*^9, 3.8808766675487013`*^9}, {
   3.880876798801983*^9, 3.880876800090851*^9}, {3.880876836340887*^9, 
   3.88087686979753*^9}, {3.8808769964220204`*^9, 3.880877018643011*^9}, 
   3.8808770635973845`*^9, {3.8809002555471196`*^9, 3.880900258171521*^9}, {
   3.881034776671632*^9, 3.8810347922545495`*^9}, {3.881047170649908*^9, 
   3.881047170889962*^9}, {3.8810474325488443`*^9, 3.881047432768524*^9}, 
   3.8811141164559774`*^9, 3.8811214498485985`*^9, {3.882017198678553*^9, 
   3.8820172074829116`*^9}, {3.8820175573086185`*^9, 
   3.8820175618820367`*^9}, {3.882070240968642*^9, 3.882070243671486*^9}, 
   3.8820704013623*^9, {3.8820717686423407`*^9, 3.8820717691441393`*^9}, 
   3.882073719590064*^9, {3.882419910671584*^9, 3.882419930399433*^9}, {
   3.882435426086196*^9, 3.8824354454846935`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"3c94b08d-4619-4281-829e-d71892a01c18"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"100", ",", "10", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8811140887371974`*^9, 3.881114119351175*^9, 3.881121450147975*^9, 
   3.88113250621516*^9, 3.8812367987936344`*^9, 3.88123685890205*^9, 
   3.881984537608718*^9, 3.882008739475864*^9, 3.882010557458281*^9, 
   3.8820172078820057`*^9, {3.8820175580339403`*^9, 3.8820175628065*^9}, {
   3.8820702445277395`*^9, 3.88207025369182*^9}, {3.882070404249897*^9, 
   3.8820704079304314`*^9}, 3.882071769460745*^9, 3.8820737200226817`*^9, 
   3.882075345185561*^9, 3.882075456738248*^9, 3.882075563491373*^9, 
   3.882356659611657*^9, 3.8824110506939983`*^9, 3.882411907694949*^9, 
   3.882412336652483*^9, 3.8824199315237684`*^9, 3.8824241390835114`*^9, {
   3.8824354265408287`*^9, 3.882435447036652*^9}, 3.8824378360868473`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"4d30bd73-15db-4e91-93fb-395f024d7fcd"],

Cell[BoxData[
 RowBox[{"10", " ", "\[Degree]"}]], "Output",
 CellChangeTimes->{
  3.8811140887371974`*^9, 3.881114119351175*^9, 3.881121450147975*^9, 
   3.88113250621516*^9, 3.8812367987936344`*^9, 3.88123685890205*^9, 
   3.881984537608718*^9, 3.882008739475864*^9, 3.882010557458281*^9, 
   3.8820172078820057`*^9, {3.8820175580339403`*^9, 3.8820175628065*^9}, {
   3.8820702445277395`*^9, 3.88207025369182*^9}, {3.882070404249897*^9, 
   3.8820704079304314`*^9}, 3.882071769460745*^9, 3.8820737200226817`*^9, 
   3.882075345185561*^9, 3.882075456738248*^9, 3.882075563491373*^9, 
   3.882356659611657*^9, 3.8824110506939983`*^9, 3.882411907694949*^9, 
   3.882412336652483*^9, 3.8824199315237684`*^9, 3.8824241390835114`*^9, {
   3.8824354265408287`*^9, 3.882435447036652*^9}, 3.8824378360980897`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"d2c81e89-ae48-41c7-be8e-86dce7217670"],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{
  3.8811140887371974`*^9, 3.881114119351175*^9, 3.881121450147975*^9, 
   3.88113250621516*^9, 3.8812367987936344`*^9, 3.88123685890205*^9, 
   3.881984537608718*^9, 3.882008739475864*^9, 3.882010557458281*^9, 
   3.8820172078820057`*^9, {3.8820175580339403`*^9, 3.8820175628065*^9}, {
   3.8820702445277395`*^9, 3.88207025369182*^9}, {3.882070404249897*^9, 
   3.8820704079304314`*^9}, 3.882071769460745*^9, 3.8820737200226817`*^9, 
   3.882075345185561*^9, 3.882075456738248*^9, 3.882075563491373*^9, 
   3.882356659611657*^9, 3.8824110506939983`*^9, 3.882411907694949*^9, 
   3.882412336652483*^9, 3.8824199315237684`*^9, 3.8824241390835114`*^9, {
   3.8824354265408287`*^9, 3.882435447036652*^9}, 3.8824378361081276`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"a1819178-f542-4fe6-9607-041e947e75b2"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.8811140887371974`*^9, 3.881114119351175*^9, 3.881121450147975*^9, 
   3.88113250621516*^9, 3.8812367987936344`*^9, 3.88123685890205*^9, 
   3.881984537608718*^9, 3.882008739475864*^9, 3.882010557458281*^9, 
   3.8820172078820057`*^9, {3.8820175580339403`*^9, 3.8820175628065*^9}, {
   3.8820702445277395`*^9, 3.88207025369182*^9}, {3.882070404249897*^9, 
   3.8820704079304314`*^9}, 3.882071769460745*^9, 3.8820737200226817`*^9, 
   3.882075345185561*^9, 3.882075456738248*^9, 3.882075563491373*^9, 
   3.882356659611657*^9, 3.8824110506939983`*^9, 3.882411907694949*^9, 
   3.882412336652483*^9, 3.8824199315237684`*^9, 3.8824241390835114`*^9, {
   3.8824354265408287`*^9, 3.882435447036652*^9}, 3.882437836117405*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"46a609a9-562f-46bf-a550-d556b2690da4"],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{
  3.8811140887371974`*^9, 3.881114119351175*^9, 3.881121450147975*^9, 
   3.88113250621516*^9, 3.8812367987936344`*^9, 3.88123685890205*^9, 
   3.881984537608718*^9, 3.882008739475864*^9, 3.882010557458281*^9, 
   3.8820172078820057`*^9, {3.8820175580339403`*^9, 3.8820175628065*^9}, {
   3.8820702445277395`*^9, 3.88207025369182*^9}, {3.882070404249897*^9, 
   3.8820704079304314`*^9}, 3.882071769460745*^9, 3.8820737200226817`*^9, 
   3.882075345185561*^9, 3.882075456738248*^9, 3.882075563491373*^9, 
   3.882356659611657*^9, 3.8824110506939983`*^9, 3.882411907694949*^9, 
   3.882412336652483*^9, 3.8824199315237684`*^9, 3.8824241390835114`*^9, {
   3.8824354265408287`*^9, 3.882435447036652*^9}, 3.8824378361270714`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"1a0a8058-8b48-413e-b4c2-00766cdefb82"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{
  3.8811140887371974`*^9, 3.881114119351175*^9, 3.881121450147975*^9, 
   3.88113250621516*^9, 3.8812367987936344`*^9, 3.88123685890205*^9, 
   3.881984537608718*^9, 3.882008739475864*^9, 3.882010557458281*^9, 
   3.8820172078820057`*^9, {3.8820175580339403`*^9, 3.8820175628065*^9}, {
   3.8820702445277395`*^9, 3.88207025369182*^9}, {3.882070404249897*^9, 
   3.8820704079304314`*^9}, 3.882071769460745*^9, 3.8820737200226817`*^9, 
   3.882075345185561*^9, 3.882075456738248*^9, 3.882075563491373*^9, 
   3.882356659611657*^9, 3.8824110506939983`*^9, 3.882411907694949*^9, 
   3.882412336652483*^9, 3.8824199315237684`*^9, 3.8824241390835114`*^9, {
   3.8824354265408287`*^9, 3.882435447036652*^9}, 3.8824378361358695`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"79b4e42a-7616-41cb-a8cd-d32646f337af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1000", ",", "2000", ",", "3000", ",", "4000"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8811140887371974`*^9, 3.881114119351175*^9, 3.881121450147975*^9, 
   3.88113250621516*^9, 3.8812367987936344`*^9, 3.88123685890205*^9, 
   3.881984537608718*^9, 3.882008739475864*^9, 3.882010557458281*^9, 
   3.8820172078820057`*^9, {3.8820175580339403`*^9, 3.8820175628065*^9}, {
   3.8820702445277395`*^9, 3.88207025369182*^9}, {3.882070404249897*^9, 
   3.8820704079304314`*^9}, 3.882071769460745*^9, 3.8820737200226817`*^9, 
   3.882075345185561*^9, 3.882075456738248*^9, 3.882075563491373*^9, 
   3.882356659611657*^9, 3.8824110506939983`*^9, 3.882411907694949*^9, 
   3.882412336652483*^9, 3.8824199315237684`*^9, 3.8824241390835114`*^9, {
   3.8824354265408287`*^9, 3.882435447036652*^9}, 3.8824378361462555`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"3448b70c-5760-4e7d-a8b9-9a8a4d3e2118"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{
  3.8811140887371974`*^9, 3.881114119351175*^9, 3.881121450147975*^9, 
   3.88113250621516*^9, 3.8812367987936344`*^9, 3.88123685890205*^9, 
   3.881984537608718*^9, 3.882008739475864*^9, 3.882010557458281*^9, 
   3.8820172078820057`*^9, {3.8820175580339403`*^9, 3.8820175628065*^9}, {
   3.8820702445277395`*^9, 3.88207025369182*^9}, {3.882070404249897*^9, 
   3.8820704079304314`*^9}, 3.882071769460745*^9, 3.8820737200226817`*^9, 
   3.882075345185561*^9, 3.882075456738248*^9, 3.882075563491373*^9, 
   3.882356659611657*^9, 3.8824110506939983`*^9, 3.882411907694949*^9, 
   3.882412336652483*^9, 3.8824199315237684`*^9, 3.8824241390835114`*^9, {
   3.8824354265408287`*^9, 3.882435447036652*^9}, 3.8824378361559396`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"82e23d09-7e47-4eb6-ac91-9a10fc9c1cc3"],

Cell[BoxData["\<\"min\"\>"], "Output",
 CellChangeTimes->{
  3.8811140887371974`*^9, 3.881114119351175*^9, 3.881121450147975*^9, 
   3.88113250621516*^9, 3.8812367987936344`*^9, 3.88123685890205*^9, 
   3.881984537608718*^9, 3.882008739475864*^9, 3.882010557458281*^9, 
   3.8820172078820057`*^9, {3.8820175580339403`*^9, 3.8820175628065*^9}, {
   3.8820702445277395`*^9, 3.88207025369182*^9}, {3.882070404249897*^9, 
   3.8820704079304314`*^9}, 3.882071769460745*^9, 3.8820737200226817`*^9, 
   3.882075345185561*^9, 3.882075456738248*^9, 3.882075563491373*^9, 
   3.882356659611657*^9, 3.8824110506939983`*^9, 3.882411907694949*^9, 
   3.882412336652483*^9, 3.8824199315237684`*^9, 3.8824241390835114`*^9, {
   3.8824354265408287`*^9, 3.882435447036652*^9}, 3.882437836164934*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"e2859229-038d-400a-a3c5-bdf44accedb6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DEPTH", "Subsection",
 CellChangeTimes->{{3.8810474426788216`*^9, 3.881047451278782*^9}, 
   3.8810475014996696`*^9},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"47d1b9ca-c48c-41af-8ef5-034253305029"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"horNHsorted", " ", "=", " ", 
  RowBox[{
   RowBox[{"BuildDepthSection", "[", 
    RowBox[{
    "listH", ",", "alpha", ",", "len", ",", "dx", ",", "anoMaxDisp", ",", 
     "hTapering"}], "]"}], "[", 
   RowBox[{"[", "\"\<horNHsorted\>\"", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8805335688071136`*^9, 3.88053357332448*^9}, {
  3.880533606127454*^9, 3.880533624705014*^9}, {3.8805336564083033`*^9, 
  3.8805337395533667`*^9}, {3.8805338062762556`*^9, 3.880533840764603*^9}, {
  3.8806978680121145`*^9, 3.8806978825635805`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"d70a71de-02a9-4f88-9fff-a78aa8b64229"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "20"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "29"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "31"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"21", ",", "34"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "35"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"27", ",", "36"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "35"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"33", ",", "35"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"36", ",", "34"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"39", ",", "32"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"42", ",", "30"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"45", ",", "28"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"48", ",", "27"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"51", ",", "25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"54", ",", "24"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"57", ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"60", ",", "22"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"63", ",", "22"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"66", ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"69", ",", "25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"72", ",", "27"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"75", ",", "30"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"78", ",", "34"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"81", ",", "39"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"84", ",", "42"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"87", ",", "47"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"90", ",", "54"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"93", ",", "58"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"96", ",", "63"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"99", ",", "67"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "98"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"-", "91"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", 
       RowBox[{"-", "87"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", 
       RowBox[{"-", "81"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", 
       RowBox[{"-", "77"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", 
       RowBox[{"-", "72"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", 
       RowBox[{"-", "69"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"21", ",", 
       RowBox[{"-", "67"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", 
       RowBox[{"-", "66"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"27", ",", 
       RowBox[{"-", "65"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", 
       RowBox[{"-", "65"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"33", ",", 
       RowBox[{"-", "67"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"36", ",", 
       RowBox[{"-", "68"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"39", ",", 
       RowBox[{"-", "70"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"42", ",", 
       RowBox[{"-", "73"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"45", ",", 
       RowBox[{"-", "75"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"48", ",", 
       RowBox[{"-", "78"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"51", ",", 
       RowBox[{"-", "80"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"54", ",", 
       RowBox[{"-", "82"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"57", ",", 
       RowBox[{"-", "83"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"60", ",", 
       RowBox[{"-", "84"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"63", ",", 
       RowBox[{"-", "84"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"66", ",", 
       RowBox[{"-", "83"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"69", ",", 
       RowBox[{"-", "82"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"72", ",", 
       RowBox[{"-", "79"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"75", ",", 
       RowBox[{"-", "75"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"78", ",", 
       RowBox[{"-", "71"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"81", ",", 
       RowBox[{"-", "67"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"84", ",", 
       RowBox[{"-", "62"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"87", ",", 
       RowBox[{"-", "55"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"90", ",", 
       RowBox[{"-", "50"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"93", ",", 
       RowBox[{"-", "45"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"96", ",", 
       RowBox[{"-", "40"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"99", ",", 
       RowBox[{"-", "34"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "129"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"-", "118"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", 
       RowBox[{"-", "109"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", 
       RowBox[{"-", "101"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", 
       RowBox[{"-", "93"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", 
       RowBox[{"-", "86"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", 
       RowBox[{"-", "80"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"21", ",", 
       RowBox[{"-", "77"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", 
       RowBox[{"-", "76"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"27", ",", 
       RowBox[{"-", "76"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", 
       RowBox[{"-", "77"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"33", ",", 
       RowBox[{"-", "80"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"36", ",", 
       RowBox[{"-", "85"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"39", ",", 
       RowBox[{"-", "91"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"42", ",", 
       RowBox[{"-", "97"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"45", ",", 
       RowBox[{"-", "104"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"48", ",", 
       RowBox[{"-", "111"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"51", ",", 
       RowBox[{"-", "116"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"54", ",", 
       RowBox[{"-", "120"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"57", ",", 
       RowBox[{"-", "126"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"60", ",", 
       RowBox[{"-", "129"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"63", ",", 
       RowBox[{"-", "129"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"66", ",", 
       RowBox[{"-", "130"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"69", ",", 
       RowBox[{"-", "127"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"72", ",", 
       RowBox[{"-", "121"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"75", ",", 
       RowBox[{"-", "116"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"78", ",", 
       RowBox[{"-", "109"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"81", ",", 
       RowBox[{"-", "101"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"84", ",", 
       RowBox[{"-", "91"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"87", ",", 
       RowBox[{"-", "82"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"90", ",", 
       RowBox[{"-", "73"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"93", ",", 
       RowBox[{"-", "66"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"96", ",", 
       RowBox[{"-", "58"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"99", ",", 
       RowBox[{"-", "51"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "266"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"-", "250"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", 
       RowBox[{"-", "231"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", 
       RowBox[{"-", "211"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", 
       RowBox[{"-", "197"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", 
       RowBox[{"-", "188"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", 
       RowBox[{"-", "180"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"21", ",", 
       RowBox[{"-", "177"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", 
       RowBox[{"-", "181"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"27", ",", 
       RowBox[{"-", "185"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", 
       RowBox[{"-", "189"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"33", ",", 
       RowBox[{"-", "196"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"36", ",", 
       RowBox[{"-", "205"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"39", ",", 
       RowBox[{"-", "214"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"42", ",", 
       RowBox[{"-", "222"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"45", ",", 
       RowBox[{"-", "226"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"48", ",", 
       RowBox[{"-", "232"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"51", ",", 
       RowBox[{"-", "244"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"54", ",", 
       RowBox[{"-", "251"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"57", ",", 
       RowBox[{"-", "255"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"60", ",", 
       RowBox[{"-", "263"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"63", ",", 
       RowBox[{"-", "272"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"66", ",", 
       RowBox[{"-", "276"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"69", ",", 
       RowBox[{"-", "272"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"72", ",", 
       RowBox[{"-", "270"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"75", ",", 
       RowBox[{"-", "260"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"78", ",", 
       RowBox[{"-", "248"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"81", ",", 
       RowBox[{"-", "232"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"84", ",", 
       RowBox[{"-", "214"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"87", ",", 
       RowBox[{"-", "199"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"90", ",", 
       RowBox[{"-", "183"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"93", ",", 
       RowBox[{"-", "169"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"96", ",", 
       RowBox[{"-", "159"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"99", ",", 
       RowBox[{"-", "157"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.882010558244711*^9, {3.8820702507067947`*^9, 3.8820702543584733`*^9}, 
   3.882070408585541*^9, 3.8820753460604944`*^9, 3.8820754575007696`*^9, 
   3.882075564146477*^9, 3.8823566606832657`*^9, 3.882411051761327*^9, 
   3.882411908387644*^9, 3.8824123377367897`*^9, {3.882419936754179*^9, 
   3.8824199534227333`*^9}, 3.8824241434794436`*^9, {3.8824354353955345`*^9, 
   3.882435450399539*^9}, 3.8824378367445064`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"c4c7c32c-a870-460d-a04a-0ba0852b9c44"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotDepthSection", "[", "horNHsorted", "]"}]], "Input",
 CellChangeTimes->{
  3.88053366990418*^9, 3.8806109085843143`*^9, {3.8806981356684694`*^9, 
   3.8806981365115757`*^9}, {3.8807212008910885`*^9, 3.880721205989033*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"c3d000c2-a5ba-42f5-b7d6-2bd5c9fde940"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJztls1OFEEURltXPsIsx1kYV8YY8CfoWIwCEkRgUEANONHwo6DgG9Sj9KPU
o/SjGFPnVFK9cuWqe/PxcftW3Xs5VNfdr9fz09tN04xuNc1frZ9RyHoHvRfq
3z9EJ+gSeh99hj5AX6CP0JfoMrqKPs0a9SvoDJ3W8Rh67/ue8Vd43mvWeuus
45+jb+p942avn61enW/xT9B36GPiOz2/W78f9nrrz+v9k9569/H0F97ze/v8
gNJnwscN9KDuIxzit9Gjuu6ET9bNE49S/gE+0gF+5L74iXXi4SPs4+VjjoeP
sIdfdn+8c9czp6Cf1l4+Sv6M/VjfuUX3Y26BeuQjWR98ROovfNgfc414+UjG
5YP5FD70u/X78uF68pHYXz6sTz4S/chH6V8+dsiXjy3y5WOTfPiI6+TDQ/Oa
fP0qcZ7xAg8f8RgPH+EzfoL/iJePQzx8RHny/HAe8FF4go9Gv9Lz0/p9+Sjr
zYj794CPwrd8wH85Pz4Rh49Ef4UP+/f8OCEOH/ELcfhwfvJRPHwEvHwk8+Eh
sH45P9hfPpy/fJT5w4P9Fj7kGT78/yh8yJc8bJPveQJPPu0NHj7CNR4+uiv8
JPvFDzx8tBd4+TjHw0c8w8PHWA8frR4+xubDR4sv3xf3mxH/Tlw+rM9z95I4
fAT78fvykzh8xF/E4WPBPOSjcz7wccP8yvnxGy8f+PJ9wctHR758BNfz+8J+
8mG9hQ/6lY+O+chHd0Y+fIxPyYeH7hv5+BbvY/3G9f8rPtx/iA/3n6zD/SfH
h/tP1uH+k+PD/Ye6yB/uP9kP95+c/+/3nz+1oS9T
    "], {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{1, 143, 144, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 
         23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 
         5, 4, 3, 2}}]]}, {}, 
      {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{35, 141, 142, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58,
          57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 
         40, 39, 38, 37, 36}}]]}, {}, 
      {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{69, 139, 140, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 
         92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 
         75, 74, 73, 72, 71, 70}}]]}, {}, 
      {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{
         PolygonBox[{{125, 138, 136, 135, 134, 133, 132, 131, 130, 129, 128, 
          127, 126}}], 
         PolygonBox[{{103, 137, 125, 124, 123, 122, 121, 120, 119, 118, 117, 
          116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 
          104}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
       LineBox[{35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
        50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 
        67, 68}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
       LineBox[{69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
        84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 
        101, 102}]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
       LineBox[{103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 
        115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 
        129, 130, 131, 132, 133, 134, 135, 136}]}}}], {{{{}, {
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{3, 0}, {99., 67.}], 
            Offset[{3., -3.039666196197683*^-8}, {103.0425, 67.}], 
            Offset[{0, 0}, {105.61777549429843`, 66.99999985372341}], 
            Offset[{5., 1.1102230246251565`*^-15}, {105.61777549429843`, 
             66.99999985372341}], 
            Offset[{10., 2.220446049250313*^-15}, {105.61777549429843`, 
             66.99999985372341}], 
            Offset[{10., 2.220446049250313*^-15}, {105.61777549429843`, 
             66.99999985372341}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{3, 0}, {99., 67.}], 
            Offset[{3., -3.039666196197683*^-8}, {103.0425, 67.}], 
            Offset[{0, 0}, {105.61777549429843`, 66.99999985372341}], 
            Offset[{5., 1.1102230246251565`*^-15}, {105.61777549429843`, 
             66.99999985372341}], 
            Offset[{10., 2.220446049250313*^-15}, {105.61777549429843`, 
             66.99999985372341}], 
            Offset[{10., 2.220446049250313*^-15}, {105.61777549429843`, 
             66.99999985372341}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{50., 8.00000000000001}, {105.61777549429843`, 
             66.99999985372341}], 
            Offset[{50., -7.999999999999989}, {105.61777549429843`, 
             66.99999985372341}], 
            Offset[{10., -7.9999999999999964`}, {105.61777549429843`, 
             66.99999985372341}], 
            Offset[{10., 8.000000000000002}, {105.61777549429843`, 
             66.99999985372341}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Hor 0\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{30., 6.661338147750939*^-15}, \
{105.61777549429843, 66.99999985372341}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{3, 0}, {99., -34.}], 
            Offset[{2.757430451232051, 1.1817687195971156`}, {
             103.0425, -34.}], 
            Offset[{0, 0}, {105.61777549429843`, -27.812742596897035`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {
             105.61777549429843`, -27.812742596897035`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.61777549429843`, -27.812742596897035`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.61777549429843`, -27.812742596897035`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{3, 0}, {99., -34.}], 
            Offset[{2.757430451232051, 1.1817687195971156`}, {
             103.0425, -34.}], 
            Offset[{0, 0}, {105.61777549429843`, -27.812742596897035`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {
             105.61777549429843`, -27.812742596897035`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.61777549429843`, -27.812742596897035`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.61777549429843`, -27.812742596897035`}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{50., 8.00000000000001}, {
             105.61777549429843`, -27.812742596897035`}], 
            Offset[{50., -7.999999999999989}, {
             105.61777549429843`, -27.812742596897035`}], 
            Offset[{10., -7.9999999999999964`}, {
             105.61777549429843`, -27.812742596897035`}], 
            Offset[{10., 8.000000000000002}, {
             105.61777549429843`, -27.812742596897035`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Hor 1\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{30., 6.661338147750939*^-15}, \
{105.61777549429843, -27.812742596897035}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{3, 0}, {99., -51.}], 
            Offset[{2.75743045072499, -1.1817687207802459`}, {
             103.0425, -51.}], 
            Offset[{0, 0}, {105.61777549429843`, -57.18725741043512}], 
            Offset[{5., 1.1102230246251565`*^-15}, {
             105.61777549429843`, -57.18725741043512}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.61777549429843`, -57.18725741043512}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.61777549429843`, -57.18725741043512}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{3, 0}, {99., -51.}], 
            Offset[{2.75743045072499, -1.1817687207802459`}, {
             103.0425, -51.}], 
            Offset[{0, 0}, {105.61777549429843`, -57.18725741043512}], 
            Offset[{5., 1.1102230246251565`*^-15}, {
             105.61777549429843`, -57.18725741043512}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.61777549429843`, -57.18725741043512}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.61777549429843`, -57.18725741043512}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{50., 8.00000000000001}, {
             105.61777549429843`, -57.18725741043512}], 
            Offset[{50., -7.999999999999989}, {
             105.61777549429843`, -57.18725741043512}], 
            Offset[{10., -7.9999999999999964`}, {
             105.61777549429843`, -57.18725741043512}], 
            Offset[{10., 8.000000000000002}, {
             105.61777549429843`, -57.18725741043512}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Hor 2\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{30., 6.661338147750939*^-15}, \
{105.61777549429843, -57.18725741043512}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{3, 0}, {99., -157.}], 
            Offset[{3., -1.5248976890272195`*^-8}, {103.0425, -157.}], 
            Offset[{0, 0}, {105.61777549429843`, -157.000000073382}], 
            Offset[{5., 1.1102230246251565`*^-15}, {
             105.61777549429843`, -157.000000073382}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.61777549429843`, -157.000000073382}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.61777549429843`, -157.000000073382}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{3, 0}, {99., -157.}], 
            Offset[{3., -1.5248976890272195`*^-8}, {103.0425, -157.}], 
            Offset[{0, 0}, {105.61777549429843`, -157.000000073382}], 
            Offset[{5., 1.1102230246251565`*^-15}, {
             105.61777549429843`, -157.000000073382}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.61777549429843`, -157.000000073382}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.61777549429843`, -157.000000073382}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{50., 8.00000000000001}, {
             105.61777549429843`, -157.000000073382}], 
            Offset[{50., -7.999999999999989}, {
             105.61777549429843`, -157.000000073382}], 
            Offset[{10., -7.9999999999999964`}, {
             105.61777549429843`, -157.000000073382}], 
            Offset[{10., 8.000000000000002}, {
             105.61777549429843`, -157.000000073382}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Hor 3\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{30., 6.661338147750939*^-15}, \
{105.61777549429843, -157.000000073382}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Directive[14, 
    GrayLevel[0]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 77.00644189039608}, {All, All}},
  ImageSize->500,
  LabelStyle->Directive[14, 
    GrayLevel[0.5]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Depth Section\"", TraditionalForm],
  PlotRange->{{0, 99.}, {-276., 67.}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8820087562265015`*^9, 3.8820105588808384`*^9, 3.8820702545807133`*^9, 
   3.8820704088329763`*^9, 3.8820753472040215`*^9, 3.8820754576827917`*^9, 
   3.8820755643313465`*^9, 3.882356660840723*^9, 3.8824110546368113`*^9, 
   3.8824119085495305`*^9, 3.882412337961355*^9, {3.8824199391934605`*^9, 
   3.8824199560332694`*^9}, 3.882424151878129*^9, 3.8824354599406853`*^9, 
   3.8824378378953724`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"c704d43a-6f54-498a-ac77-291d50679aa7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["VELOCITY", "Subsection",
 CellChangeTimes->{{3.8810474538586617`*^9, 3.881047455258441*^9}, 
   3.881047496743415*^9},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"389baaba-66a8-47b5-9ca5-dcd19346ac5c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"velModel", "=", 
  RowBox[{
   RowBox[{"BuildVelocitySection", "[", 
    RowBox[{"horNHsorted", ",", "listV"}], "]"}], "[", 
   RowBox[{"[", "\"\<velModel\>\"", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"datasetVelModel", "=", 
  RowBox[{
   RowBox[{"BuildVelocitySection", "[", 
    RowBox[{"horNHsorted", ",", "listV"}], "]"}], "[", 
   RowBox[{"[", "\"\<datasetVelModel\>\"", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.8805338666210403`*^9, {3.8805339020294847`*^9, 3.880533916619543*^9}, {
   3.8805341440632844`*^9, 3.8805341485385203`*^9}, {3.880535707635259*^9, 
   3.88053572280416*^9}, {3.880697905087159*^9, 3.88069790938647*^9}, {
   3.8824128754695225`*^9, 3.8824128931308546`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"9cd5fa28-b50b-4d30-b6af-8a42ca477ee8"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "}"}], Short[#, 5]& ], 
   "line" -> 65, "sessionID" -> 17801562086585284568, "byteCount" -> 1540784, 
   "size" -> 5, "stored" -> False, "expr" -> Missing["NotStored"], "wrap" -> 
   OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{{3.8823566546972923`*^9, 3.8823566618041897`*^9}, 
   3.882356767399227*^9, 3.882411055767417*^9, 3.882411909451026*^9, 
   3.882412339069867*^9, {3.8824128689682536`*^9, 3.8824128949466677`*^9}, 
   3.882419961109403*^9, 3.8824200422772937`*^9, 3.8824241575971174`*^9, 
   3.882435469164199*^9, 3.8824378388941183`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"7bec8f6a-1a34-4b15-a167-33e4a6e4d890"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          6057557681713280728850044620015243815946479248408007028824], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "layer"} -> 
            1, {All, "x"} -> 1, {All, "h"} -> 1, {All, "v"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "layer" -> TypeSystem`PackageScope`AtomShape[34], "x" -> 
                TypeSystem`PackageScope`AtomShape[34], "h" -> 
                TypeSystem`PackageScope`AtomShape[34], "v" -> 
                TypeSystem`PackageScope`AtomShape[34]|>], 
              DirectedInfinity[1], 4, {All}]], 20, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           TypeSystem`Struct[{"layer", "x", "h", "v"}, {
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer]}], 10643], "Meta" -> <||>, "RowTarget" -> 
         20, "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "layer"} -> 
            1, {All, "x"} -> 1, {All, "h"} -> 1, {All, "v"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "layer" -> TypeSystem`PackageScope`AtomShape[34], "x" -> 
                TypeSystem`PackageScope`AtomShape[34], "h" -> 
                TypeSystem`PackageScope`AtomShape[34], "v" -> 
                TypeSystem`PackageScope`AtomShape[34]|>], 
              DirectedInfinity[1], 4, {All}]], 20, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           TypeSystem`Struct[{"layer", "x", "h", "v"}, {
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer]}], 10643], "Path" -> {}, 
         "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 4, 
         "DataRowCount" -> 10643, "DataColumnCount" -> 4, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["layer", 
                    Style[
                    "layer", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "layer"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "layer"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["x", 
                    Style[
                    "x", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "x"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "x"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["h", 
                    Style[
                    "h", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "h"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "h"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["v", 
                    Style[
                    "v", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "v"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "v"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["layer"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["x"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["h"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["v"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["layer"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["x"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["5"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["h"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1100"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["v"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["layer"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["x"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["h"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1141"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["v"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["layer"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["x"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["h"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1173"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["v"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["layer"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["x"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["h"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1200"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["v"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["layer"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["x"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["h"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1224"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["v"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["layer"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["x"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["h"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1245"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["v"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["layer"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["x"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["h"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1265"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["v"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["layer"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["x"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["h"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1283"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["v"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["layer"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["x"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["h"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1300"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["v"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["layer"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["x"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["h"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1316"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["v"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["layer"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["x"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-5"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["h"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1332"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["v"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["layer"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["x"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-6"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["h"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1346"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["v"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["layer"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["x"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-7"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["h"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1361"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["v"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["layer"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["x"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-8"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["h"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1374"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["v"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["layer"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["x"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-9"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["h"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1387"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["v"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["layer"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["x"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-10"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["h"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1400"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["v"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["layer"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["x"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-11"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["h"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1412"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["v"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["layer"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["x"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-12"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["h"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1424"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["v"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["layer"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["x"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-13"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["h"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["1436"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["v"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 10643, 1], {1, 10643 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 10643, 1], {1, 10643 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[10643, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[10643, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 10643, 1], {1, 10643 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 10643, 1], {1, 10643 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                   ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[]], 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), DynamicModuleValues :> {}, 
      BaseStyle -> {LineBreakWithin -> False}, 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 6057557681713280728850044620015243815946479248408007028824,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8823566546972923`*^9, 3.8823566618041897`*^9}, 
   3.882356767399227*^9, 3.882411055767417*^9, 3.882411909451026*^9, 
   3.882412339069867*^9, {3.8824128689682536`*^9, 3.8824128949466677`*^9}, 
   3.882419961109403*^9, 3.8824200422772937`*^9, 3.8824241575971174`*^9, 
   3.882435469164199*^9, 3.882437839970949*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"5850f417-742b-4961-9af5-d8fc7cabdd58"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotVelocity", "[", 
  RowBox[{"velModel", ",", " ", "horNHsorted"}], "]"}]], "Input",
 CellChangeTimes->{
  3.8805338793121967`*^9, 3.8806119570311337`*^9, 3.880885527487486*^9, {
   3.8808862834802804`*^9, 3.8808862869604692`*^9}, {3.8808864868731155`*^9, 
   3.8808864881242127`*^9}, {3.880896893417801*^9, 3.880896896590808*^9}, 
   3.8808978197559395`*^9},
 CellLabel->"In[67]:=",ExpressionUUID->"db0fa117-b1d4-4bd8-b09e-23f3647bf823"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxk3V1ubOuRJuaEr/YlL3jBCxpIEwRBEATB/39ufn1KpVaVVKWj31J3dVV9
brvtsl12yTOIIWgIawiawY4haAhrCBqCYXRGCPkc3Ww8ek9kcG8mM1bkWlz5
P/3Xf//lf/sfNpvN/3iz2fz/f+7/72js+xAf4C94g//8+YMW+/k3/o/k8fEB
PsRH+Bhv8Qk+xWf4HF/gS3yFr/ENvsV3+B4/4Ef8hJ/xC37Fb/gdf+Cv+BOP
fQfe/AdyvPmOHG/+ihxvfkSON39Njjc/Jseb/0iONz8hx5u/IcebvyXHm5+S
483PyPHm78jx5u/J8ebn5Hjz/b4HDpx48wvqceDEm19SjwMn3vyKehw48ebX
1OPAiTe/oR4HTrz5LfU4cOLNP1CPAyfe/I56HOWaK2dj36f4BG/xMT7Ch/gA
++cG13xzDnb+jTx5XHyAD/ERPsZbfIJP8Rk+xxf4El/ha3yDb/EdvscP+BE/
4Wf8gl/xG37HH/gr/sRj34F7vlWOe75Vjnu+VY57vlWOe75Vjnu+VY57vlWO
e75Vjnu+VY57vlWOe75Vjnu+VY57vlWOe75Vjnu+VY57vu08cODEPd+qHgdO
3POt6nHgxD3fqh4HTtzzrepx4MQ936oeB07c863qceCebzUXrse+r/AlvsDn
+Ayf4hO8xcfYPw/xAXbubXDNL/e+zr+RJ4+PD/AhPsLHeItP8Ck+w+f4Al/i
K3yNb/AtvsP3+AE/4if8jF/wK37D7/gDf8WfeOw7cM+vynHPr8pxz6/Kcc+v
ynHPr8pxz6/Kcc+vynHPr8pxz6/Kcc+vynHPr8pxz6/Kcc+vynHPr8pxz6/K
cc+vnQcOnLjnV9XjwIl7flU9Dpy451fV48CJe35VPQ6cuOdX1ePAPb9OdvX3
Y993+Bbf4Gt8hS/xBT7HZ/gU++cWH2Pn3iE+wO55G1zzq/MN+Tfy5PHxAT7E
R/gYb/EJPsVn+Bxf4Et8ha/xDb7Fd/geP+BH/ISf8Qt+xW/4HX/gr/gTj30H
7vlVOe75VTnu+VU57vlVOe75VTnu+VU57vlVOe75VTnu+VU57vlVOe75VTnu
+VU57vlVOe75VTnu+VU57vm188CBE/f8qnocOHHPr6rHgRP3/Kp6HDhxz6+q
L9fr+svY9zN+wo/4Ad/jO3yLb/A1vsKX+AL75xk+xSd4i4+xe90hPsBf8AbX
vOp8Q/6NPHl8fIAP8RE+xlt8gk/xGT7HF/gSX+FrfINv8R2+xw/4ET/hZ/yC
X/Ebfscf+Cv+xGPfgXteVY57XlWOe15VjnteVY57XlWOe15VjnteVY57XlWO
e15VjnteVY57XlWOe15VjnteVY57XlWOe15Vjnte7Txw4MQ9r6oeB07c86rq
ceDEPa+qvlyv4x9j3+/4Db/iF/yMn/AjfsD3+A7f4ht8jf3zEl9g59wZPsUn
eIuPse9bHuID/AVvcM2rzjfk38iTx8cH+BAf4WO8xSf4FJ/hc3yBL/EVvsY3
+Bbf4Xv8gB/xE37GL/gVv+F3/IG/4k889h2451XluOdV5bjnVeW451XluOdV
5bjnVeW451XluOdV5bjnVeW451XluOdV5bjnVeW451XluOdV5bjnVeW459XO
AwdO3POq6nHgxD2v6nX6c+z7K/7A7/gNv+IX/Iyf8CN+wPf4DvvnDb7Gzq1L
fIHdy87wKT7BW3yMj/AhPsBf8AbX/Ol8Q/6NPHl8fIAP8RE+xlt8gk/xGT7H
F/gSX+FrfINv8R2+xw/4ET/hZ/yCX/Ebfscf+Cv+xGPfgXv+VI57/lSOe/5U
jnv+VI57/lSOe/5Ujnv+VI57/lSOe/5Ujnv+VI57/lSOe/5Ujnv+VI57/lSO
e/5Ujnv+7Dxw4MQ9f6q+XK/T/2HsOca+N/oTf8Uf+B2/4Vf8gp/xE37E/nmP
77Bz6wZfY/esS3yBfR/xDJ/iE7zFx/gIH+ID/AVvcM2fzjfk38iTx8cH+BAf
4WO8xSf4FJ/hc3yBL/EVvsY3+Bbf4Xv8gB/xE37GL/gVv+F3/IG/4k889h24
50/luOdP5bjnT+W450/luOdP5bjnT+W450/luOdP5bjnT+W450/luOdP5bjn
T+W450/luOdP5bjnT+W458/OAwfu+bN73Y6aL/U6jnveVK4/8Vf8gd/xG37F
L9g/n/Ajdk7d4zvsXnWDr7HvA17iC+x5rjN8ik/wFh/jI3yID/AXvME1bzrf
kH8jTx4fH+BDfISP8Raf4FN8hs/xBb7EV/ga3+BbfIfv8QN+xE/4Gb/gV/yG
3/EH/oo/8dh34J43/fpC/h057nlTOe55UznueVM57nlTOe55UznueVM57nlT
Oe55UznueVM57nlTOe55UznueVM57nlTOd4wP4bzpFyv69+NPfe8qRz3vKlc
f+Kv+AO/Y/98xS/YOfWEH7F71D2+w77vd4OvseepLvEFPsdn+BSf4C0+xkf4
EB/gL3iDa950viH/Rp48Pj7Ah/gIH+MtPsGn+Ayf4wt8ia/wNb7Bt/gO3+MH
/Iif8DN+wa/4Db/jD/wVf+Kx78A9b/r1hfw7ctzzpnLc86Zy3POmctzzpnLc
86Zy3POmctzzpnLc86Zy3POmctzzpnLc86Zy3POmctzzpnK8YZ70vNm97vc8
qTmAe55Urj+xf37gd+wcesUv2D3pCT9i38e7x3fY8043+Bpf4Ut8gc/xGT7F
J3iLj/ERPsQH+Ave4JonnW/Iv5Enj48P8CE+wsd4i0/wKT7D5/gCX+IrfI1v
8C2+w/f4AT/iJ/yMX/ArfsPv+AN/xZ947Dtwz5N+fSH/jhz3PKkc9zypHPc8
qRz3PKkc9zypHPc8qRz3PKkc9zypHPc8qRz3PKkc9zypHPc8qRz3PKkcb5gf
NU9qTtQ86bmB/XOjP7Fz6AO/Y/egV/yCfZ/uCT9izyPd4zt8i2/wNb7Cl/gC
n+MzfIpP8BYf4yN8iA/wF7zBu3nyl3xD/o08eXx8gA/xET7GW3yCT/EZPscX
+BJf4Wt8g2/xHb7HD/gRP+Fn/IJf8Rt+xx/4K/7EY9+Ba5785fWF/DtyXPOk
c1zzpHNc86RzXPOkc1zzpHNc86RzXPOkc1zzpHNc86RzXPOkc1zzpHNc86Rz
XPOkc7xhfvxgnuA+//Ldrr72lZ3/8rzY/ak/8Vf8gd+x78u94hf8jJ/wI37A
9/gO3+IbfI2v8CW+wOf4DJ/iE7zFx/gIH+ID/AVvcO0rnW/Iv5Enj48P8CE+
wsd4i0/wKT7D5/gCX+IrfI1v8C2+w/f4AT/iJ/yMX/ArfsPv+AN/xZ947Dtw
7yuV495XKse9r1SOe1+pHPe+Ujmu+dI57n2lctz7SuW495XKce8rlePeVyrH
va9UjntfqRz3vlI57n2lcrxhXgwc+AfzZXc9WfzVzjWXyp/4K/7A7/gNv+IX
/Iyf8CN+wPf4Dt/iG3yNr/AlvsDn+Ayf4hO8xcf4CB/iA/wFb3DtK51vyL+R
J4+PD/AhPsLHeItP8Ck+w+f4Al/iK3yNb/AtvsP3+AE/4if8jF/wK37D7/gD
f8WfeOw7cO8rlePeVyrHva9UjntfqRz3vlI5rnnSOe59pXLc+0rluPeVynHv
K5Xj3lcqx72vVI57X6kc975SOe59pXLc+8rOAwdO7DwZuH9f5q93/32/r7n7
8wO/4zf8il/wM37Cj/gB3+M7fItv8DW+wpf4Ap/jM3yKT/AWH+MjfIgP8Be8
wbWfdL4h/0aePD4+wIf4CB/jLT7Bp/gMn+MLfImv8DW+wbf4Dt/jB/yIn/Az
fsGv+A2/4w/8FX/ise/AvZ9Ujns/qRz3flI57v2kctz7SeW495PKce8nlePe
TyrHvZ9Ujns/qRz3flI57v2kctz7SeW495PKce8nlePeT3YeOHDiDfNiYOdJ
Ol9+ue+6X0D8eJfXvlJ+w6/4BT/jJ/yIH/A9vsO3+AZf4yt8iS/wOT7Dp/gE
b/ExPsKH+AB/wRtc+0rnG/Jv5Mnj4wN8iI/wMd7iE3yKz/A5vsCX+Apf4xt8
i+/wPX7Aj/gJP+MX/Irf8Dv+wF/xJx77Dtz7SuW495XKce8rlePeVyrHva9U
jntfqRz3vlI57n2lctz7SuW495XKce8rlePeVyrHva9UjntfqRz3vlI57n1l
54EDJ+59pepx4MQb5onzJXDfj+Ynu/q+jm/35yt+wc/4CT/iB3yP7/AtvsHX
+Apf4gt8js/wKT7BW3yMj/AhPsBf8AbXPtP5hvwbefL4+AAf4iN8jLf4BJ/i
M3yOL/AlvsLX+Abf4jt8jx/wI37Cz/gFv+I3/I4/8Ff8ice+A/c+UznufaZy
3PtM5bj3mcpx7zOV495nKse9z1SOe5+pHPc+UznufaZy3PtM5bj3mcpx7zOV
495nKse9z1SOe5/ZeeDAiXufqXocOPGG+TFw4B/Mm1/te+C6X2f8ze6/r32n
/Iyf8CN+wPf4Dt/iG3yNr/AlvsDn+Ayf4hO8xcf4CB/iA/wFb3DtO51vyL+R
J4+PD/AhPsLHeItP8Ck+w+f4Al/iK3yNb/AtvsP3+AE/4if8jF/wK37D7/gD
f8WfeOw7cO87lePedyrHve9UjnvfqRz3vlM57n2nctz7TuW4953Kce87lePe
dyrHve9UjnvfqRz3vlM57n2nctz7TuW4952dBw6cuPedqseBE/e+U/U4cOIN
82Vg5086j+r+0D/duX8vdvfnE37ED/ge3+FbfIOv8RW+xBf4HJ/hU3yCt/gY
H+FDfIC/4A2ufajzDfk38uTx8QE+xEf4GG/xCT7FZ/gcX+BLfIWv8Q2+xXf4
Hj/gR/yEn/ELfsVv+B1/4K/4E499B+59qHLc+1DluPehynHvQ5Xj3ocqx70P
VY57H6oc9z5UOe59qHLc+1DluPehynHvQ5Xj3ocqx70PVY57H6oc9z6088CB
E/c+VPU4cOLeh6oeB07c+1DV48CJnUcD1+fvxM92/33tS+VH/IDv8R2+xTf4
Gl/hS3yBz/EZPsUneIuP8RE+xAf4C97g2pc635B/I08eHx/gQ3yEj/EWn+BT
fIbP8QW+xFf4Gt/gW3yH7/EDfsRP+Bm/4Ff8ht/xB/6KP/HYd+DelyrHvS9V
jntfqhz3vlQ57n2pctz7UuW496XKce9LlePelyrHvS9Vjntfqhz3vlQ57n2p
ctz7UuW496XKce9LOw8cOHHvS1WPAyfufanqceDEvS9VPQ6ceMP8Gdj51J8P
9/e7+tqfyg/4Ht/hW3yDr/EVvsQX+Byf4VN8grf4GB/hQ3yAv+ANrv2p8w35
N/Lk8fEBPsRH+Bhv8Qk+xWf4HF/gS3yFr/ENvsV3+B4/4Ef8hJ/xC37Fb/gd
f+Cv+BOPfQfu/aly3PtT5bj3p8px70+V496fKse9P1WOe3+qHPf+VDnu/aly
3PtT5bj3p8px70+V496fKse9P1WOe3+qHPf+tPPAgRP3/lT1OHDi3p+qHgdO
3PtT1ePAiTfMm4ED/2A+7T6PNH6+c+1T5Qd8j+/wLb7B1/gKX+ILfI7P8Ck+
wVt8jI/wIT7AX/AG1z7V+Yb8G3ny+PgAH+IjfIy3+ASf4jN8ji/wJb7C1/gG
3+I7fI8f8CN+ws/4Bb/iN/yOP/BX/InHvgP3PlU57n2qctz7VOW496nKce9T
lePepyrHvU9Vjnufqhz3PlU57n2qctz7VOW496nKce9TlePepyrHvU9Vjnuf
2nngwIl7n6p6HDhx71NVjwMn7n2q6nHgxL1PVT0OnLjn1fc71/uB5Uf8gO/x
Hb7FN/gaX+FLfIHP8Rk+xSd4i4/xET7EB/gL3uCaX51vyL+RJ4+PD/AhPsLH
eItP8Ck+w+f4Al/iK3yNb/AtvsP3+AE/4if8jF/wK37D7/gDf8WfeOw7cM+v
ynHPr8pxz6/Kcc+vynHPr8pxz6/Kcc+vynHPr8pxz6/Kcc+vynHPr8pxz6/K
cc+vynHPr8pxz6/Kcc+vnQcOnLjnV9XjwIl7flU9Dpy451fV48CJe35VPQ5c
82v8Ylf/Mvb9jJ/wI37A9/gO3+IbfI2v8CW+wOf4DJ/iE7zFx/gIH+ID/AVv
8G6e/SXfkH8jTx4fH+BDfISP8Raf4FN8hs/xBb7EV/ga3+BbfIfv8QN+xE/4
Gb/gV/yG3/EH/oo/8dh34JpnneOaZ53jmmed45pnneOaZ53jmmed45pnneOa
Z53jmmed45pnneOaZ53jmmed45pnneOaZ53jmmed45pn5YEDJ6551vU4cOKa
Z12PAyeuedb1OHDiDfNp4H7/8Je7/75+36r8il/wM37Cj/gB3+M7fItv8DW+
wpf4Ap/jM3yKT/AWH+MjfIgP8Be8wXV+rPMN+Tfy5PHxAT7ER/gYb/EJPsVn
+Bxf4Et8ha/xDb7Fd/geP+BH/ISf8Qt+xW/4HX/gr/gTj30H7vNjleM+P1Y5
7vNjleM+P1Y57vNjleM+P1Y57vNjleM+P1Y57vNjleM+P1Y57vNjleM+P1Y5
7vNjleM+P1Y57vNjleM+P7bzwIET9/mxqseBE/f5sarHgRP3+bGqx4FrvmX/
fIx9f+B3/IZf8Qt+xk/4ET/ge3yHb/ENvsZX+BJf4HN8hk/xCd7iY3yED/EB
/oI3eDff/pJvyL+RJ4+PD/AhPsLHeItP8Ck+w+f4Al/iK3yNb/AtvsP3+AE/
4if8jF/wK37D7/gDf8WfeOw7cM23znHNt85xzbfOcc23znHNt85xzbfOcc23
znHNt85xzbfOcc23znHNt85xzbfOcc23znHNt85xzbfOcc238sCBE9d863oc
OHHNt67Hgfv9yF/t6uvzL3bu+5pXrj/xV/yB3/EbfsUv+Bk/4Uf8gO/xHb7F
N/gaX+FLfIHP8Rk+xSd4i4/xET7EB/gL3uA639b5hvwbefL4+AAf4iN8jLf4
BJ/iM3yOL/AlvsLX+Abf4jt8jx/wI37Cz/gFv+I3/I4/8Ff8ice+A/f5tspx
n2+rHPf5tspxn2+rHPf5tspxn2+rHPf5tspxn2+rHPf5tspxn2+rHPf5tspx
n2+rHPf5tspxn2+rHPf5tspxn2/beeDAift8W9XjwP3+5K93ed2HducNju/I
cX3eU+e4P9ejcv2Jv+IP/I7f8Ct+wc/4CT/iB3yP7/AtvsHX+Apf4gt8js/w
KT7BW3yMj/AhPsBf8AbX+bjON+TfyJPHxwf4EB/hY7zFJ/gUn+FzfIEv8RW+
xjf4Ft/he/yAH/ETfsYv+BW/4Xf8gb/iTzz2HbjPx/XrC/l35LjPx/XrG/mP
yHGfj6sc9/m4ynGfj6sc9/m4ynGfj6sc9/m4ynGfj6sc9/m4ynGfj6sc9/m4
ynGfj6sc9/m4nQcO3O9X/mZXX/et3Tl+tO8N7vuuV45rvnWO+/NxK8f9eVOV
60/8FX/gd/yGX/ELfsZP+BE/4Ht8h2/xDb7GV/gSX+BzfIZP8Qne4mN8hA/x
Af6CN7jOx3W+If9Gnjw+PsCH+Agf4y0+waf4DJ/jC3yJr/A1vsG3+A7f4wf8
iJ/wM37Br/gNv+MP/BV/4rHvwH0+rl9fyL8jx30+rl/fyH9Ejvt8XOW4z8dV
jvt8XOW4z8dVjvt8XOW4z8dVjvt8XOW4z8dVjvt8XOW4z8dVjvv9yv77jz1v
cN/Xtv99yf+aHNd86xz354ww3zr/jhzXfOsc9+cuMt/an/gr/sDv+A2/4hf8
jJ/wI37A9/gO3+IbfI2v8CW+wOf4DJ/iE7zFx/gIH+ID/AVvcJ2PY779Jf9G
njw+PsCH+Agf4y0+waf4DJ/jC3yJr/A1vsG3+A7f4wf8iJ/wM37Br/gNv+MP
/BV/4rHvwH0+jvn2l9cfctzn45hvf3n9I8d9Po759pfXX3Lc5+OYb53/hBz3
+TjmW+d/S477fBzzLX5b+dhz/O2+N7jvG1g5jp+Q45pvneO+j3vluOZb57jm
W+e4PxerclzzrXPcn0dfOe7zcZXrT/wVf+B3/IZf8Qt+xk/4ET/ge3yHb/EN
vsZX+BJf4HN8hk/xCd7iY3yED/EB/oI3uM7Hdb4h/0aePD4+wIf4CB/jLT7B
p/gMn+MLfImv8DW+wbf4Dt/jB/yIn/AzfsGv+A2/4w/8FX/ise/AfT6uX1/I
vyPHfT6uX9/If0SO+3xcv76S/5gc9/m4fn0n/wk57vcn/2Hnvxt77vsoVY7j
p+S45lnnuO+LWzmuedY5rnnWOe7PKakc1zzrHNc86xz3+bbKcZ9vqxz3+bbK
cZ9vq1x/4q/4A7/jN/yKX/AzfsKP+AHf4zt8i2/wNb7Cl/gCn+MzfIpP8BYf
4yN8iA/wF7zBdb6t8w35N/Lk8fEBPsRH+Bhv8Qk+xWf4HF/gS3yFr/ENvsV3
+B4/4Ef8hJ/xC37Fb/gdf+Cv+BOPfQfu8239+kL+HTnu8239+kb+I3Lc59v6
9ZX8x+Q7b363c903YucNjr8nx/F35LjvE1g5rnnWOa551jnu+7ZXjmuedY5r
nnWO+3O4Ksc1zzrHfX6tctzn1yrHfX6tctzn1yrHfX6tcv2Jv+IP/I7f8Ct+
wc/4CT/iB3yP7/AtvsHX+Apf4gt8js/wKT7BW3yMj/AhPsBf8AbX+bXON+Tf
yJPHxwf4EB/hY7zFJ/gUn+FzfIEv8RW+xjf4Ft/he/yAH/ETfsYv+BW/4Xf8
gb/iTzz2HbjPr/XrC/l35LjPr/XrG3m937hz1n0g6r/HA2/8739Ojmt+dY5r
fnWO+761zK/Of0qOa351jvtzSJhfnf+EHPf5M+ZX5z8mx33+jPnV+Y/IcZ8/
Y351/h057vNnzK/OB7n+xF/xB37Hb/gVv+Bn/IQf8QO+x3f4Ft/ga3yFL/EF
Psdn+BSf4C0+xkf4EB/gL3iD6/wZ8+sv+Tfy5PHxAT7ER/gYb/EJPsVn+Bxf
4Et8ha/xDb7Fd/geP+BH/ISf8Qt+xW/4HX/gr/gTj30H7vm1+1/8bt+JN/9p
3wMHTrz5z9TjwIk3/0g9Dpx481+ox4ETb/6Jehw48eafqceBE2/+hXocOPFm
7ntbrteV3+578w/7Hjhw4s3v9j1w4MT9fKt6HDhxP9+qHgdO3M+3qseBE/fz
repx4MT9fKt63M+3miO/2ffmt/seOHDi/v5XPQ6cuL//VY8DJ+7vf9XjwIn7
+1/1OHDi/v5Xfflk51/vO3Diut9o1+PAifv7WfU4cOL+flY9Dpy4v59VjwMn
7u9n1Zfrfe9f7Ttw4rrf0F9+T4V6nLi/H1WPAyfu70fV48CJ+/vR7/vv3PcV
2vfAgRP3/S6qHgdO3P++/XtD1OPE/e9b9bj/feu8yi/2HThx//tUPQ6cuP99
qh4HTtz/PrW3fL/vzS/2PXDgxP33q3ocOHH//aq+vNvL+n4ttafh/vqf+fqr
Hifur7/qceDE/fXXecDv9x04cX/9VY8DJ+6vv+px4MT99dd5z+/3HThxf/1V
jwMn7q+/6nHgxD/4+nfu9xm+33d9vX1eGAdOXF9v1+PAiTd8fX694deP++f5
u/2/T58Xx4ET979/1ePAifvfv+px4MT+fQYOnP79f7Pvev3u6+R+se/E/f2s
6w5w4MT9/ax6HDhx31+3f8+Yepx4w9/3B39/nLiOD7oeB+7jg7rO45f7Dpy4
ny9VjwMn7udL1ePAifv5UvU4cOKNf38c2H+vPp7q62Sox4n7+Lbqd+73hX+5
735+1nU7OHDifn5WPQ6cuJ+fVY8DJ+7nZ9XjwInr3/sv1zFRjxNv+Pf13zv8
98e1T3Q9Dpy498O6DvlX+07cPx91nRcOnLh/PqoeB07cPx9VjwMn7p+Pvk6N
epy4fz6qHgdO3Ptf1ePAif1+Db9/OHHv81WPA9f7OX7efV8XiAMn7p/XqseB
E/fPa9XjwIn757WvY6QeJ+6f16rHgRP3z2vV48CJ6/vf9Thw4g3fz4ED/+D7
/1+ox4ET9/t5fB51nwfF/XpR163iwIn79aLqceDE/XrR181SjxP360XV48CJ
+/Wi6nHgxP16UfU4cOJ+vah6HDhxv/9b9ThwYp8vw+cPTlznG/w82b7O7Df7
Hjhw4n49qnocOHG/HvV129TjxP16VPU4cOJ+Pap6HDhxvx5VPQ6cuF+Pqh4H
TtyvR1WPAyeu51fX48CJfX4NHD7/cJ3P6nrc57P4fMn+fEocOHG/HlY9Dpy4
Xw+rHgdO3K+HVY8DJ+7Xw6rHgRP362HV48CJ+/Ww6nHgxP16WPU4cOJ+Pax6
HDhxn3+tehw48Ybn48A+X9Pn79x3nX/9wefR1efZ4cCJ+/W46nHgxP16XPU4
cOJ+Pa56HDhxvx5XPQ6cuF+Pqx4HTtyvx1WPAyfu1+Oqx4ET9+tx1ePAifv1
uOpx4MT9elz1OHDiDc/nfn7z+VX9+Ve/2ffAgRP3873qceDE/Xyvehw4cT/f
qx4HTtzP96rHgRP3873qceDE/Xyvehw4cT/fqx4HTtzP96rHgRP3873qceDE
/Xyvehw48Ybnt8/3sbOff9Ofn4Pr56E/PwcHTlw/D12PAyeun4eux4ET189D
1+PAievnoetx4MT189D1OHDi+nnoehw4cf08dD0OnLh+HroeB05cPw9djwMn
rp+HrseB+/im7kf+q333+6V1P3Ps50El7uP9qseBE/fxftXjwIn7eL/qceDE
fbxf9Thw4j7er3ocOHEf71c9Dpy4j/erHgdO3Mf7VY8DJ+7j/arHgRP38X7V
7+z98/v++7/a98CBE9fzvetx4MT1fO96HDhxPd+7HgdOXM/3rseBE9fzvetx
4MT1fO96HDhxPd+7HgdOXM/3rseBE9fzvetx4MR9PMT9s/v+27/c98CBE/f5
yqrHgRP3+Y+qx4ET9/F+1ePAift4v+px4MR9vF/1OHDiPt6vehw4cR/vVz0O
nLiP96seB07cx/tVX8cv3P+275/7i30PHDhxPV+7HgdOXM/XrseBE/fnUVY9
Dpy4j8erHgdO3MfjVY8DJ+7j8arHgRP38XjV48CJ+3i86uv4ou4f9vN9B677
L5cHDvyD+y//Yt8DB07c119VPQ6cuK+nqXocOHEf/1Y9Dpy4j3+rHgdO3Me/
VY8D9/EA94Pr+8X9jBz35zNVjvvzmSrHP7jfKa7nU3ngwInr+dT1OHDiej51
PQ6cuI8veT51PU7cx5c8n7q+5i33T+r7K+H+PJPKcX+eSeXeH/Bn5Lg/z6Ry
3J9nUjnuzzOpHNfzoTxw4MR9vWrV48CJ+3is6mt+cf+Qvr/IfyTHfb/+yrH3
wwrvj/W35Ljv11857vv1V477fv2V475ff+W479dfOe779e88cM+L+v3FH+07
cN9/unLc95+uHPf9pyvHff/pynHff7py3Pefrhz3/acrx33/6cpxvx7z+579
+6C475daOe77pVaOvV9B4L5fKt+P5PuRfD+S70fy/Ui+H8n3I/l+pN+P3f+2
/H7kwBMHXnDiFW/+Z/rjgScOvODEK978V/rjgScOvODEK978L/THA08ceMGJ
V7z5X+mPB5448IITr3jz3+iPB5448IITr3jzv9EfDzxx4AUnXvHmf6c/Hnji
wAtOvOLNv9IfDzxx4AUnXvHm/6A/HnjiwAtOvOLN/0l/PPDEgReceMWb/4v+
eOCJAy848Yo3/0Z/PPDEgReceMWb/5v+eOCJAy848Yo3/w/98cATB15w4hVv
/p3+eOCJAy848Yo3v9/3Ad7iazzw93ji3+PAf8BL2d/3r/sF4D7fUfcLwIET
9/VNVY8DJ95wPwnvLzHwxIEX70+BV9zHU9UfDzxx4AUnXnEfT1V/PPDEgRec
eMV9PFX98cATB15w4hX38VT1xwNPHHjBiVfcx1PVHw88ceAFJ15xH09Vfzzw
xIEXnHjFfTxV/fHAEwdecOIV9/FU9ccDTxx4wYlX3MdT1R8PPHHgBSdecR9P
VX888MSBF5x4xX08Vf3xwBMHXnDiFffxVPXHA08ceMGJV9zHU9UfDzxx4AUn
XnEfT1V/PPDEgReceMV9PFX9cR9PeT+buh8OTtzXc1Q9Dpy4r+eoevyD+xnh
Pr6pehw4cR/fVD0OnLiPb3be4oEnDrzgxCvu45vqjweeOPCCE6+4j2+qPx54
4sALTrziPr6p/njgiQMvOPGK+/im+uOBJw684MQr7uOb6o8HnjjwghOvuI9v
qj8eeOLAC0684j6+qf544IkDLzjxivv4pvrjgScOvODEK+7jm+qPB5448IIT
r7iPb6o/HnjiwAtOvOI+vqn+eOCJAy848Yr7+Kb644EnDrzgxH18c7J7fO6f
FjhxX/9Z9Thw4r7+s+px4MR9vFD1OHDiPl6oehw4cR8vVD0OnLiPF6oeB07c
xws7b/HAEwdecOIV9/FC9ccDTxx4wYlX3McL1R8PPHHgBSdecR8vVH888MSB
F5x4xX28UP3xwBMHXnDiFffxQvXHA08ceMGJV9zHC9UfDzxx4AUnXnEfL1R/
PPDEgReceMV9vFD98cATB15w4hX38UL1xwNPHHjBiVfcxwvVHw/cxwvnu5z7
YwZO3L9vUfU4cOL+fYuqx4ET97ytehw4cc/bqseBE/e8rXocOHHP26rHgRP3
vK16HDhxz9uqx4ET97zdeYsHnjjwghOvuOdt9ccDTxx4wYlX3PO2+uOBJw68
4MQr7nlb/fHAEwdecOIV97yt/njgiQMvOPGKe95WfzzwxIEXnHjFPW+rPx54
4sALTrzinrfVHw88ceAFJ15xz9vqjweeOHDPW+9XXPc7xn29dd3vGAdO3L9v
2J8bST1O3POv6nHgxD3/qh4HTtzzr+px4MQ9/6oeB07c86/qceDEPf+qHgdO
3POv6nHgxD3/qh4HTtzzb+ctHnjiwAtOvOKef9UfDzxx4AUnXnHPv+qPB544
8IITr7jnX/XHA08ceMGJV9zzr/rjgScOvODEK+75V/3xwBMHXnDiFff8q/54
4IkDLzjxinv+VX888MQ9/253j/frfQ8cOHH//lDVY++/n7jnWdXjwIl7nlU9
Dpy451nV48CJe55VPQ6cuOdZ1ePAiXueVT0OnLjnWdXjwIl7nlU9Dpy451nV
48CJe55VPQ6cuOfZzls88MSBF5x4xT3Pqj8eeOLAC0684p5n1R8PPHHgBSde
cc+z6o8HnjjwghOvuOdZ9ccDTxx4wYlX3POs+uOBJw684MQr7nlW/fHAE/c8
8/M/6vNDcGI/32TgwIl7/lQ9Dpy450/V48CJe/5UPQ6cuOdP1ePAiXv+VD0O
nLjnT9XjwIl7/lQ9Dpy450/V48CJe/5UPQ6cuOdP1ePAiXv+VD0OnLjnz85b
PPDEgReceMU9f6o/HnjiwAtOvOKeP9UfDzxx4AUnXnHPn+qPB5448IITr7jn
T/XHA08ceMGJV9zzp/rjgScOvODEK+75U/3Lz7ucz5P6wedL4cQ9X6oeB07c
86XqceDEPV+qHgdO3POl6nHgxD1fqh4HTtzzpepx4MQ9X6oeB07c86XqceDE
PV+qHgdO3POl6nHgxD1fqh4HTtzzpepx4MQ9X3be4oEnDrzgxCvu+VL98cAT
B15w4hX3fKn+eOCJAy848Yp7vlR/PPDEgReceMU9X6o/HnjiwAtOvOKeL9Uf
Dzxx4AUnXnHPl+qPB544cL9f5+fv1ef34cCJez5VPQ6cuOdT1ePAiXs+VT0O
nLjnU9XjwIl7PlU9Dpy451PV48CJez5VPQ6cuOdT1ePAiXs+VT0OnLjnU9Xj
wIl7PlU9Dpy451PV48CJez7tvMUDTxx4wYlX3POp+uOBJw684MQr7vlU/fHA
EwdecOIV93yq/njgiQMvOPGKez5VfzzwxIEXnHjFPZ+qPx544sALTrzink/V
Hw88cWDnU+IV9/mk6l/m81j781xx4p5nVY8DJ+55VvU4cOKeZ1WPAyfueVb1
OHDinmdVjwMn7nlW9Thw4p5nVY8DJ+55VvU4cOKeZ1WPAyfueVb1OHDinmdV
jwMn7nlW9Thw4p5nO2/xwBMHXnDiFfc8q/544IkDLzjxinueVX888MSBF5x4
xT3Pqj8eeOLAC0684p5n1R8PPHHgBSdecc+z6o8HnjjwghOvuOdZ9ccDTxx4
wYlXvGF+/WCe4YkD1/WBfn53f/43Dpy4709d9Thw4r4/ddXjwIn7/tRVjwMn
7vtTVz0OnLjvT131OHDivj911ePAifv+1FWPAyfuz6Opehw4cd9/vepx4MT9
eTRVjwMn7s+jqXocOHF/Hs3OWzzwxIEXnHjFNd+6Px544sALTrzimm/dHw88
ceAFJ15xzbfujweeOPCCE6+45lv3xwNPHHjBiVdc863744EnDrzgxCuu+db9
8cATB15w4hVvmEdbPPDEgZ1viVfn37/SHw88cV///t3uv//NvgMn7v2u6nHg
xL3fVT0OnLj3u6rHgRP3flf1OHDi3u+qHgdO3Ptd1ePAiXu/q3ocOHHvd1WP
Ayfu/a7qceDEvd9VPQ6cuPe7nbd44IkDLzjxinu/q/544IkDLzjxinu/q/54
4IkDLzjxinu/q/544IkDLzjxinu/q/544IkDLzjxinu/q/544IkDLzjxinu/
q/544IkDLzjxinu/q/544IkDLzjxijfMr63zDE/s/Ftw4hX371tXfzzwxIHr
963jr3b9f7vv3hd3Hjhw4t4Xqx4HTtz7YtXjwIl7X6x6HDhx74tVjwMn7n2x
6nHgxL0vVj0OnLj3xarHgRP3vlj1OHDi3hd33uKBJw684MQr7n2x+uOBJw68
4MQr7n2x+uOBJw684MQr7n2x+uOBJw684MQr7n2x+uOBJw684MQr7n2x+uOB
Jw684MQr7n2x+uOBJw684MQr7n2x+uOBJw684MQr7n2x+uOBJw684MQr3jDf
tnjgiQP/YF7iFdf9Sbo/HnjiwAvu+5n99e7xfrfvwIl7H616HDhx76NVjwMn
7n206nHgxL2PVj0OnLj30arHgRP3Plr1OHDi3kerHgdO3Pvozls88MSBF5x4
xb2PVn888MSBF5x4xb2PVn888MSBF5x4xb2PVn888MSBF5x4xb2PVn888MSB
F5x4xb2PVn888MSBF5x4xb2PVn888MSBF5x4xb2PVn888MSBF5x4xb2PVn88
8MSBF5x4xb2PVn888MSBF5x4xRvm39Z5iCcOvGDn64r7fqHVHw88ceAF1/1C
48e7fv953wMHTtz7bNXjwIl7n616HDhx77NVjwMn7n226nHgxL3PVj0OnLj3
2Z23eOCJAy848Yp7n63+eOCJAy848Yp7n63+eOCJAy848Yp7n63+eOCJAy84
8Yp7n63+eOCJAy848Yp7n63+eOCJAy848Yp7n63+eOCJAy848Yp7n63+eOCJ
Ay848Yp7n63+eOCJAy848Yp7n63+eOCJAy848Yp7n63+eOCJAy848Yo3zMMt
HnjiwAt23q7O33+jP+77c/9k93j/uO/eV3ceOHDi3lerHgdO3Ptq1ePAiXtf
rXocOHHvqztv8cATB15w4hX3vlr98cATB15w4hX3vlr98cATB15w4hX3vlr9
8cATB15w4hX3vlr98cATB15w4hX3vlr98cATB15w4hX3vlr98cATB15w4hX3
vlr98cATB15w4hX3vlr98cATB15w4hX3vlr98cATB15w4hX3vlr98cATB15w
4hX3vlr98cATB15w4hX351tUf+z8nDjwghOvuD6/K/5m53/a98CBE/c+WvU4
cOLeR6seB07c++jOWzzwxIEXnHjFvY9WfzzwxIEXnHjFvY9WfzzwxIEXnHjF
vY9WfzzwxIEXnHjFvY9WfzzwxIEXnHjFvY9WfzzwxIEXnHjFvY9WfzzwxIEX
nHjFvY9WfzzwxIEXnHjFvY9WfzzwxIEXnHjFvY9WfzzwxIEXnHjFvY9Wfzzw
xIEXnHjFvY9WfzzwxIEXnHjFvY9WfzzwxIEXnHjFztMtHnjiwAtOvOL6PMzu
jweeuD8P86e7x/vnfQ8cOHHvx1WPAyfu/XjnLR544sALTrzi3o+rPx544sAL
Trzi3o+rPx544sALTrzi3o+rPx544sALTrzi3o+rPx544sALTrzi3o+rPx54
4sALTrzi3o+rPx544sALTrzi3o+rPx544sALTrzi3o+rPx544sALTrzi3o+r
Px544sALTrzi3o+rPx544sALTrzi3o+rPx544sALTrzi3o+rPx544sALTrzi
/nzr6o8HnjjwghOveMM83uKBJ3aeLzjx6vz/d/rjgefO8bNd/3/Zd+Le13fe
4oEnDrzgxCvufb3644EnDrzgxCvufb3644EnDrzgxCvufb3644EnDrzgxCvu
fb3644EnDrzgxCvufb3644EnDrzgxCvufb3644EnDrzgxCvufb3644EnDrzg
xCvufb3644EnDrzgxCvufb3644EnDrzgxCvufb3644EnDrzgxCvufb3644En
DrzgxCvufb3644EnDrzgxCvufb3644EnDrzgxCvufb3644EnDrzgxCveMK+3
eOAfzHe84MRrHS/8/a7f3PfAEwdecOIV9z5f/fHAEwdecOIV9z5f/fHAEwde
cOIV9z5f/fHAEwdecOIV9z5f/fHAEwdecOIV9z5f/fHAEwdecOIV9z5f/fHA
EwdecOIV9z5f/fHAEwdecOIV9z5f/fHAEwdecOIV9z5f/fHAEwdecOIV9z5f
/fHAEwdecOIV9z5f/fHAEwdecOIV9z5f/fHAEwdecOIV9z5f/fHAEwdecOIV
9z5f/fHAEwdecOIVb5y/eOCJAy84sfN+8/t9H+AtvsYDf48n/v3O8fPd4899
Dzxx4AUnXnG/v1D98cATB15w4hX3+wvVHw88ceAFJ15xv79Q/fHAEwdecOIV
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
1/FE1+PAiet4outx4MR1PNH1OHDiOp7oehw4cR1PdD0OnLiOJ7oeB07c1/tU
PQ6cuK/3qXocOHFf71P1OHDivt6nfp7wwBMHXnDiFff1PtUfDzxx4AUnXnFf
71P98cATB15w4hX39T7VHw88ceAFJ15xX+9T/fHAEwdecOIV9/U+1R8PPHHg
BSdecV/vU/3xwBMHXnDiFff1PtUfDzxx4AUnXnFf71P98cATB15w4j7f9Nvd
4/9y34ETb35FPQ6cePNr6nHgxDXvux4HTlzzvutx4MQ177seB05c877rceDE
Ne+7HgdOXPO+63HgxDXvux4HTtzXl1Q9Dpy4ry+pehw4cV9fUvU4cOK+vqTq
ceDEfX3Jzls88MSBF5x4xX19SfXHA08ceMGJV9zXl1R/PPDEgReceMV9fUn1
xwNPHHjBiVfc15dUfzzwxIEXnHjFfX1J9ccDTxx4wYlX3NeXVH888MSBF5y4
z4/8w67++30n3vxi3wMHTrz5JfU4cOKar12PAyeu+dr1OHDimq9djwMnrvna
9Thw4pqvXY8DJ6752vU4cOKar12PAyfu6w+qHgdO3NcfVD0OnLivP6h6HDhx
X39Q9Thw4r7+oOpx4MR9/UHV48CJ+/qDnbd44IkDLzjxivv6g+qPB5448IIT
r7ivP6j+eOCJAy848Yr7+oPqjweeOPCCE6+4rz+o/njgiQMvOPGK+/qD6l/v
n/9ul//dvgNv/p4cb35Ojjff73vgwIlr/nU9Dpy45l/X48CJa/51PQ6cuOZf
1+PAiWv+dT0OnLjmX9fjwIn7/HTV48CJ+/x01ePAifv8dNXjwIn7/HTV48CJ
+/x01ePAifv8dNXjwIn7/HTV48CJ+/x01ePAifv8dNXjwIn7/PTOWzzwxIEX
nHjFfX66+uOBJw684MQr7vPT1R8PPHHgBSdecZ+frv544IkDLzhxv59c9X+z
783fkuPNT8nx5mfkuOZZ57jmWee45lnnuOZZeeDAiWuedT0OnLjmWdfjwIlr
nnU9Dpy45lnX48CJ+/wo86zrceI+P8o863qcuM+PMs+6Hifu86PMs67Hifv8
KPOs63HiPj/KPOt6nLjPjzLPuh4nrnnW9Thw4j4/yjzrepy4z48yz7oeJ+7z
o8yzrseJ+/wo86wfD08ceMGJV9znR5ln3R9PHHjBiVfc50eZZ90fTxx4wYlX
vGG+bPHA03mEe57t/tf3/9j974848Z/wiv+M+/5ru/8d4C2+xgN/X/4y/nv+
7/ueOPCCE6+479+y8wHe4ms88Pd44t/jwH/AC/4jTvwnvOI/4w3/3gd4i6/9
/uD+/h3t+v/bvvv64Z23eOCJAy848Yr7fkXVHw88ceAFJ15x36+o+uOBJw68
4MQr7uf7zgd4i6/xwN/jiX+PA/8BL/iPOPGf8Ir/jDc8Pw/wFl/jgfv5fvLf
3dfj7Rx4wYlX3Pc323mLB5448IITr7jvb1b98cATB15w4hX360X1xwNPHHjB
iVfcrxfVHw88ceAFJ15xv15UfzzwxIEXnHjF/Xqx8wHe4ms88Pd44t/jwH/A
C/4jTvwnvOI/4w0/3wd4i6/xwP16cb77+v9134lX3Ncn77zFA08ceMGJV9zX
J1d/PPDEgReceMX9elj98cATB15w4hX362H1xwNPHHjBiVfcr4fVHw88ceAF
J15xvx5WfzzwxIEXnHjF/XpY/fHAEwdecOIV9+vhzgd4i6/xwN/jiX+PA/8B
L/iPOPGf8Ir/jDe8fh38f1zdB3gVxRYA4EhTeqjSuRTpJaH3TAoQEkqS29Kz
CSU9uXSkuRSVThAQBMQVFEFRIkVAEI406QRpUsQVpIMEASkC7+3dOWf5cu7H
9/J+996dLbMzszNndpltzH7MgtkqD9vg/qUWtcYMzDqzNX8EbWMWzAqzyqwx
A7PObJXPlD6zYFaYVWaNGZh1Zqt8pvSZBbPCrDJrzMCsM1vlM6XPLJgVZpVZ
YwZmndkqnyl9ZsGsMKvMGjMw68xW+UzpMwtmhVll1piBWWe2ymdKn1kwK8wq
s8YMzDqzVT5T+syCWWFWmTVmYNaZrfIZ7ctsY/ZjFswRzAqzh1llzmPWmPOZ
gbmAWWcuZPZh5akvs43Zj1kwW+VzO9y/YUWtMQOzzmzNL0TbmAWzwqwya8zA
rDNb9QOlzyyYFWaVWWMGZp3Zqh8ofWbBrDCrzBozMOvMVv1A6TMLZoVZZdaY
gVlntuoHSp9ZMCvMKrPGDMw6s1U/UPrMgllhVpk1ZmDWma36gdJnFswKs8qs
MQOzzmzVD5Q+s2BWmFVmjRmYdWarfqD0mQWzwqwya8zArDNb9QPal9nG7Mcs
mCOYFWYPs8qcx6wx5zMDcwGzzlzI7MPKc19mG7Mfs2C26oeO+PthRS2YFWaV
WWMGZp3Zqk8ofWbBrDCrzBozMOvMVn1C6TMLZoVZZdaYgVlntuoTSp9ZMCvM
KrPGDMw6s1WfUPrMgllhVpk1ZmDWma36hNJnFswKs8qsMQOzzmzVJ5Q+s2BW
mFVmjRmYdWarPqH0mQWzwqwya8zArDNb9QmlzyyYFWaVWWMGZp3Zqk8ofWbB
rDCrzBozMOvMVn2C9mW2MfsxC+YIZoXZw6wy5zFrzPnMwFzArDMXMlv1Ce0/
rw+Y/ZgFs1WfdMHtH1bUwKwzW/UB2sYsmBVmlVljBmad2aoPKH1mwawwq8wa
MzDrzFZ9QOkzC2aFWWXWmIFZZ7bqA0qfWTArzCqzxgzMOrNVH1D6zIJZYVaZ
NWZg1pmt+oDSZxbMCrPKrDEDs85s1QeUPrNgVphVZo0ZmHVmqz6g9JkFs8Ks
MmvMwKwzW/UBpc8smBVmlVljBmad2aoP0L7MNmY/ZsEcwawwe5hV5jxmjTmf
GZgLmHXmQmYfVn77MtuY/ZgFs1UfdMffpxa1YFaYVWaNGZh1Zqs8p/SZBbPC
rDJrzMCsM1vlOaXPLJgVZpVZYwZmndkqzyl9ZsGsMKvMGjMw68xWeU7pMwtm
hVll1piBWWe2ynNKn1kwK8wqs8YMzDqzVZ5T+syCWWFWmTVmYNaZrfKc0mcW
zAqzyqwxA7PObJXnlD6zYFaYVWaNGZh1Zqs8R/sy25j9mAVzBLPC7GFWmfOY
NeZ8ZmAuYNaZC5l9WPnry8tjZj9mwWyV571w+1OLGph1Zqs8RtuYBbPCrDJr
zMCsM1vlMaXPLJgVZpVZYwZmndkqjyl9ZsGsMKvMGjMw68xWeUzpMwtmhVll
1piBWWe2ymNKn1kwK8wqs8YMzDqzVR5T+syCWWFWmTVmYNaZrfKY0mcWzAqz
yqwxA7PObJXHlD6zYFaYVWaNGZh1Zqs8Rvsy25j9mAVzBLPC7GFWmfOYNeZ8
ZmAuYNaZC5l9WPnpy2xj9mMWzFQeqwL3L62oNWZg1pmt9+ugbcyCWWFWmTVm
YNaZrffrUPrMgllhVpk1ZmDWma3361D6zIJZYVaZNWZg1pmt9+tQ+syCWWFW
mTVmYNaZrffrUPrMgllhVpk1ZmDWma3361D6zIJZYVaZNWZg1pmpfLTSZxbM
CrPKrDEDs85M5SPZl9nG7McsmCOYFWYPs8qcx6wx5zMDcwGzzlzI7MPKM19m
G7Mfs2C22qtBuP3pRQ3MOrPVXkPbmAWzwqwya8zArDNb7TVKn1kwK8wqs8YM
zDqz1V6j9JkFs8KsMmvMwKwzW+01Sp9ZMCvMKrPGDMw6s9Veo/SZBbPCrDJr
zMCsM1vtNUqfWTArzCqzxgzMOrPVXkP7MtuY/ZgFcwSzwuxhVpnzmDXmfGZg
LmDWmQuZfVj54ctsY/ZjFsxWey0Yty+jqHVmqz2CtjELZoVZZdaYgVlnttoj
lD6zYFaYVWaNGZh1Zqs9QukzC2aFWWXWmIFZZ7baI5Q+s2BWmFVmjRmYdWar
PULpMwtmhVll1piBWWe22iNoX2Ybsx+zYI5gVpg9zCpzHrPGnM8MzAXMOnMh
sw+7Xn2Zbcx+zILZao/0xu3LLGqd2ap/0TZmwawwq8waMzDrzFb9S+kzC2aF
WWXWmIFZZ7bqX0qfWTArzCqzxgzMOrNV/1L6zIJZYVaZNWZg1pmt+hfty2xj
9mMWzBHMCrOHWWXOY9aY85mBuYBZZy5k9mHXiy+zjdmPWTBb9W8fXJ5V1Aqz
yqwxA7PObNVfaBuzYFaYVWaNGZh1Zqv+ovSZBbPCrDJrzMCsM1v1F6XPLJgV
ZpVZYwZmndmqv9C+zDZmP2bBHMGsMHuYVeY8Zo05nxmYC5h15kJmH5bffZlt
zH78+mC26q9QXH92UduYBbPCrDJrzMCsM1v1A6XPLJgVZpVZYwZmndmqHyh9
ZsGsMKvMGjMw68xW/YD2ZbYx+zEL5ghmhdnDrDLnMWvM+czAXMCsMxcy+7D8
6MtsY/ZjFsxW/dAP9y+nqDVmYNaZrfIPbWMWzAqzyqwxA7PObJV/aF9mG7Mf
s2COYFaYPcwqcx6zxpzPDMwFzDpzIbMPO5++zDZmP2bBbJV/4dLW9YxWmTVm
YNaZresZ7ctsY/ZjFswRzAqzh1llzmPWmPOZgbmAWWcuZPZhx9eX2cbsxyyY
reu5P6afW9TW9YH2ZbYx+zEL5ghmhdnDrDLnMWvM+czAXMCsMxcy+7Dj48ts
Y/ZjFszW9TGw6P6SVeY8Zo05nxmYC5h15kJmH7Z9vsw2Zj9mwWzlr0FF10/2
ZbYx+zELZmv9EWx5RNHlIrJo+mRfZhuzH7Ngts5nlLR1fNGFzD7s+77MNmY/
ZsFM6QMt9xR1BLPC7GFWmfOYNeZ8ZmAuYNaZC5l92P74MtuY/fj+M1v5w47r
zy1qG7NgVphVZo0ZmHVmqzxF+zLbmP2YBXMEs8LsYVaZ85g15nxmYC5g1pkL
mX3Y+fBltjH7MQtm6/p24Pqzi9rGLJgVZpVZYwZmnZnut6z0mQWzwqwya8zA
rDNT/rbSZxbMCrPKrDEDs85M+Zvsy2xj9mMWzBHMCrOHWWXOY9aY85mBuYBZ
Zy5k9mH50ZfZxuzHLJit+sWJ25dR1DqzNR6OtjELZoVZZdaYgVlntvrjKX1m
wawwq8waMzDrzFZ/C6XPLJgVZpVZYwZmndnqb6H0mQWzwqwya8zArDNb/S2U
PrNgVphVZo0ZmHVm6/4M7ctsY/ZjFswRzAqzh1llzmPWmPOZgbmAWWcuZLba
d7T/zDZmP2bBbLXvKH32PlaKR7Te/8osmBVmlVljBmadmeJ/rPSZBbPCrDJr
zPx97jozlXdW+syCWWFWmTVmYNaZqbyz0mcWzAqzyqwxA7POTOWdlT6zYFaY
VWaNGZh1ZirvrPSZBbPCrDJrzMCsM1N5Z6XPLJgVZpVZYwZmnZnKO7Ivs43Z
j1kwRzArzB5mlTmPWWPOZwbmAmaduZDZul9j5Z21/8x+zILZul9j79+03v+Z
WtQ2ZsGsMKvMGjMw68w0P8dKn78Pm1lhVpk1ZmDm79u24s8pfWbBrDCrzBoz
MOvMVvw5pc8smBVmlVljBmad2Yr3ovSZBbPCrDJrzMCsM1vxXpQ+s2BWmFVm
jRmYdWZrvJzSZxbMCrPKrDEDs85sjZdT+syCWWFWmTVmYNaZrf4bSp9ZMCvM
KrPGDMw6s9V/g/ZltjH7MQvmCGaF2cOsMucxa8z5zMBcwKwzFzL7sPLZl9nG
7McsmK3+G/a+S+t9m8wKs8qsMQOzzkzvk7bSZxbMCrPKrDEDM3+fNNVnVvrM
gllhVpk1ZmDWmak+s9JnFswKs8qsMQOzzkz1mZU+s2BWmFVmjRmYdWaqz6z0
mQWzwqwya8zArDNTfWalzyyYFWaVWWMGZp2Z6jMrfWbBrDCrzBozMOvMVn8t
pc8smBVmlVljBmad2eqvpfSZBbPCrDJrzMCsM1v9tZQ+s2BWmFVmjRmYdWar
vxbty2xj9mMWzBHMCrOHWWXOY9aY85mBuYBZZy5k9mH1jy+vj5j9mAWz1V8b
jemz923S+6Wt93syC2aFWWXWmIFZZ/Zh75Pm75cWzAqzyqwxA7POTPWtlT6z
YFaYVWaNGZh1Zuv5aZQ+s2BWmFVmjRmYdWbr+Q6UPrNgVphVZo0ZmHVm6/kO
lD6zYFaYVWaNGZh1Zmu+IKXPLJgVZpVZYwZmndkaH6H0mQWzwqwya8zArDNb
4yOUPrNgVphVZo0ZmHVma3yE0mcWzAqzyqwxA7PObI2PUPrMgllhVpk1ZmDW
ma3xEUqfWTArzCqzxgzMOrM1PoL2ZbYx+zEL5ghmhdnDrDLnMWvM+czAXMCs
Mxcy+7D60ZfZxuzHLJit8RHafva+UGDm77um+th6PymzYFaYVWaNGZh1ZqqP
rfSZBbPCrDJrzMCsM1N9bKXPLJgVZpVZYwZmnZnqYyt9ZsGsMKvMGjMw68xU
H1vpMwtmhVll1piBWWe2xu9YfWylz6wwq8waMzDrzNb4HauPrfSZFWaVWWMG
Zp3ZGr9j9bGVPrPCrDJrzMCsM1vjd6w+ttJnVphVZo0ZmHVma/yO1cdW+swK
s8qsMQOzzmyN37H62EqfWWFWmTVmYNaZrfE7Vh9b6TMrzCqzxgzMOrM1fsfq
Y2t7mP2YBXMEs8LsYVaZ85g15nxmYC5g1pkLmX1Y/enLbGP2YxbMRn3cbExK
0zEpxXH9baBJhnvVmHeKiUnljv+iT2wDrVp7Py8D5HI/+Xufp9KqH1yvunPF
1CUPcbk//DbzU+PfzYDrcbuuxe3yx+VXcXk7qNr9+yrdv6+G6TWGKltaRu6o
XA3Tawzh5qcKLm+C6VVGN4VuJdt+pV/zRTcDc/ObVhBHt048snVic1xeDpe3
gA7tvR/cP9WF6ysmneeCo+bnhdw+oOW4f7oLRp3s/XbCqJO4/W74qHE/49+e
gBMPexj/3PDrF/0WNhnwo1wu3DDrwuK1CTNtmH4NXJ9NOM1PTXQ9XF4HXUd8
87X3Uw/Mw1OlNi63wbJPvB88XsKJ30dHOMHcvfZ4vFRajsdLc8Ixc//weAEt
ryBd6IR+5g6VxvRcMMt7+n5rgi7cLfenibgx2NOr1I2Hu9d86f28g8t9cH3k
EvDp1CX2whGN0W/BSjNDNBJt/vin9R//lIeBPx9pPq5rI1zuK3+v4vESDna8
HOA9+L3fron754B3zA2uIczjv9MBxsFf1iG9Bu6fA8LM/9AQbcfz0Yq2B/+2
wvWXRLek/cG/LXD54wC5/c3peATI40nHx47bj/a14/nC4yHsRY+PYoc5bX68
uWo2bp9qx/zUEPeH1ueH66+K36Ptj4Ii218tCtfXDNOLwvU1k+ubGIXHA5er
tBzfp6VG4vo6CDru8r+3R1M+JdcRMr/Q+1vw9/R9PaLo+gCt9hBFjgPZhstF
IC7HfKEG4fWA2wNBRbfPJ5iuF1Hk9wqlHyyPzxlyCF1/+P0QXA/mGzUE11ed
pY+/p/St/aH10f73RlfC79F8byqn+uDy8oK2x1x/C/w9bY8g98XvlRC0frk9
uJzWD3T+cP1naHtChQvzr/wezS8sxHKsHy6/FlAkPRvmLxGG39d30/rM9DNw
Oa1PpfzYT6a/mJbT/Kenu4usT6f1D6D9K/p9m73ocgWtR9D2y/VpND8E98da
TtcPzU/A46+QsV4QZCwPaH3G/hiVkVEjUfw7lUv2ovnNRsvrULpW/jLrtwe0
fspfNN8Czw9tj07nm74fBbL4p/jkFsLcnkoOMe2hf5f605qLLZuNzyNKH69r
ndxUOApHlEk8Tm4it+d7u+gQOs3411i0GNfVqCFpOZbTETRfgK5He9Hrx9pf
ym/2ovm3kOZz0P7g+VZjpYH2B8s1jdwWv0duI8zysyZ5kPy9L8VjD5L13UOa
H4HLaf9hENZ3tL24/fk0PyEChnk/a2h+QoQ83sspPqqjPN4LnGLPsxor5v/c
QR7vUbQcyzWF4rnay+M9kJa3l8fb3ylqfRFo/Gsnj3dTWk7vzcL9UQdAkeMB
aOt4DITkWRPPlh9G4/k9RI0Pko1/LjEm4dzohHPdxQ9Z5zcODafl3UXQWw2m
+wa5xLdbzsZmfttNtJu84/RCf1reTZjHr5FLhHg/07uKiDdHR7xZjZZ3FVFP
rn1f7Q2X2Nvv9yW/uLqIcd7PU9r+LmJtpY8n1PrTKTruGTGoUavOYr3/gnpr
L9HyzvL8fUIOl/uTR/Fl4fL8jaTjh8vpeEI4mM2tSvT7/rK+Ku0UK2+8a/zr
D+neBlcp+n1/eb1WovEheu6eG6/XAGmd9g8NLrxee+H1Qct7yfptCMVv9MXt
w+8v7ov1J30/VC4XLrweQuHiD9kXf2hNv8flNornCJXtl8r0+35yuQ9tTz+5
/ydp//rJ9A7h/j/rJ/f/AB2fMJl/L9L4XJDMvyfd4s+JRoNaCZL5dzMdnyD5
V6PxuECZf+fR7wPl8RjuFuV/tRn/AmX+TaXfYz3rS9/vDUWPN9o63n2g6PFG
59Px6SPP3wK6v8J6UI3G76MVuv+hejIa0wvG641+Hyzz33na3mCZXgGNDwbL
/LeJth+XW8cjWJYfc+j3IXK5h8ZHQ/D80+9xeR5tXyDQ9sv8EIj5mbYvEPNz
NJ7PQMzP9PsgqNN/wYkff8Z6XyTA0Y9bx/2Q9Qb+PgGevx8dWav+IazXE2DH
x9OWvwzC7xvOMTPgz1jPJ0r/W0yQR66NLqjT4ges9xPh8luh6Z2L4XLDDTa2
febTL1Tkf9rudIty8VBur5/xr4RY3WzWqmZhCSDLFx+xOCqs+ZeLEmDJ6fUX
pv2+J6Dd1fyqF18kwJWjDzYPbFdCzCgYMa3x4QSAgkpljvfYGnD+VPMQ316J
sOLdNmmpfxYTlaYH3F1TPhHSfn4U4zdpTcA48aKu73uJUL/Mhg/33HlDXDsn
nnWMSITQzXuui1Vf4v1mInzd9OrW8J50PBKhboX+P3zzT2lx4Y+anY7/GAet
3/AfNK95dfF8UInSx2bG4f3NG0LeNyRC+sqIsjUWYjsfEsEs38b5iKrez+lE
+K3eiBj/iDK4/ji4ec77H6pb3ra/zsWOZ/B+CeIgJ1H9+NL8apZrBN/YX/Bu
afE0sHCS7wvDPd/uc+L9amLo+Q4xnY7FQa3evxe7mUb3W/GwKueNUZtrVLPc
1tucr1BaeP+06RkP5u1P+WrilsEfK8bj+a0p5N8Y3L8GwvwzMwZuuD+bMLcE
rl/EQ8be6vembK1qWV43b4m/usy72mUyuaqo+8vwOr9ExmP+pueVOWV6nYIs
u/JeXf39Ot2PxcCbc76e9FGzBpYbhg08fNNG7Xg35CenHG3i19TyrZoLWi1c
ib+HGNg5YNP72y/aLFeKmHj89IiawrlrY/c+T2NgX8Oh+q2zNtHl0H93lKMx
MDK6dB3Hi4b4fTekdtT0z681sTz7n9SrPQbj+n1iQf1ifs+Tq2yWY3/KafVD
55pi8Pc/zZzSNRYguUXVrp/aRPCCU/0OVoiFQQ1P5f/eiu4TYsGhz/6m/iib
5YaewTUXlWkk1vk9mPzXZjfE9exeIqdVUzHi9193F8xwwwezTge0u95QdBu/
/qO0f90w4+mqvL16E/Flx2fnnxxxg7meCLyf/Afvx7u0luXdQSeMvvtt+VOX
cP98oqHyJGH8pyaWdz/Uft18oKFoHd517LbO0TD+h/33e6xtInz3uo9EVYiW
6wP8vUDT/alhMWbYiVL12oo03+/LVXvkAJg4dpk7yV/0Vo4kDD7mgFp3ggdP
SsPtAyd4e1Oq9mhteXn5Y9ue9qL7YReE7ynzXdijVpbl79uKDmc/PPDc44Cl
dqOCWekvEr03/qEOGPvplsazmjcXB3LG9VrW3gXla+87tvB+KzGrefa5mLIu
3D5cv3CB+uzvDht2tbLcwfHFqwX+Qmza5vn63kY7pA7/03FxaC9Rb9RPDybO
sEPwG3WX3y/VXISOnhlTdrQL0lPDNuze1kqUWvDmd6sGYP+Oiu1O6m/Q/C27
/dOrLXRZ7VKYdPnIjZ8m+luW+99W7Bv1ZNWWjQ5oklzS/c54f/HRlarzms52
wDdLN8/q9w218+z4+w6Wv44IyD/TDtcPDnj1y5OgEin+luVfej8r3s9oHSzP
ffz59702t5PHN9+Ox7eDPL7G/h//YFj8xM/aye37x47b10Fu3xFcXytRdP1D
ell+2uirZ7E/Bcr8PcoBMp8Lmb+N8zcuO+vY/q2B1vFalHqj/7+bhOWP3Es8
775qI0q+OWj50I5OmFbuwYG7of4ifFH1ZYEVndD47xndrwwMFqUmBSYVbHWC
+bdzkDi7qOPQATOd+Hvqr3BByZpX5p5f0MpyvYDlIWf0EFned3ODLPeDZXlf
2g2VL6fdfnGB7u/dUPydnSdPbw+2PP/bt2oNvN1MGP+zq8cPLtD3LoqoPqeV
aHXsWaX35rvgxr+xI2Z801CUm70g4sK4aEh9WfNFk/FNxPDFzZVeEdHQpubU
0Zvf7SPalbiT9nBXNJh/e/UWb509eX3SrGgYdbzrjRUj6XlZ0bDryeUJ93v2
thxSb9usMWsaWs6Yfm1ln+gmlt/cf6qe+42a4tqd/Omrx8dCkzpn/riRbROn
jf/6c0QszJz1fR2xt494e0nd2I7hsZA488Litb/3Ed7eucF+MfJ8+uD9vEDT
/b2CVtFGeX3e7K/tK95MzyuVnhcDRqP+SYc99LwsvH+j+//bMSD7qYQwbz9G
43K6/68WC133Odeoz+i+NxZW3Lx1KTHcZvnLRd6GA953q/EweI7/gRqDq1o2
/1r9FZR+GLa/Y+HR6vovb/al5fEQvbL915vtb4kNR/46aNsdD3t6N3402VVV
/LlwUckZC3F9Vr9eEozcHt9myRF6Hk4CLg/D/o1YvH/sJ8y//ROgwrgXf6q/
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
yAgWy1Jrr5u00wWbyi28FOYJEgdb7W289SMXzFnjc3hKJm2fC975Y821WWOD
LG9yTDtePCtYzK1ze6Njrwtmr3HuqjE5SNyq0Ff/77ZL3v89DpH9z6/c8v7w
drDsfz5ptEdbVikY6+gt7voXf1rleDQ8bffXk3ZDeovmmyKab/KNkfnV01uY
7YqoGJh4/6cnl/8TItMb4PoNtj+6BopK3s+fsRBXqcOK05MCxXAzkDUOvjda
D0d+ChRmMyIc80P7IJkftsbB8uIzXb+tCBI7Ti98cPGdeLm+7XT84uX6XtLx
ipfr60nHA5dPoniDRBw/xvxk1KeyfUT5d5iMPx6GtubXYv4qmYrt0SB5v+DC
9sUXQbI9OoLaK12EeZ2cp/mhtH2U3+h9kvT8KNreVCu+y1zvPnpeYrDI6rrt
fNt9Lss9N6989ua/Lviy/cBV669Q3KUb2j1qm13ieLDl71r++t7wWxS36YZW
Xl4Ktjy1TJ9mW+/jcnDDwqYJeyreCrb8gzdM+TEdP4yfeBhsufaB+C37nofI
8f2AaAgdO6GB3+NgOb5fJRrW3jn1+NZzKy4UPP90frb8RbDl/7blzy/7X4iY
0ql82inDxS900AYUDxFfX/z8x7oZ0WD/dfCSvRN6i+0Dun+iLYqB684b+YXn
+4gXXU6OeDkvFpb2rzYn7HYfUfNK9NtbT8bK+IcelP/jICLt1TeeJ33EtmFf
17lZJU7mzwm43Lhf8vZ+PjgTJMxuyPh4qGh+gmV+/ige1q74fc+GPsGi6473
k+Yeipfll3F8zPIrJwHzOx3PBMzvdDwTMH/T/ifi+ul9axRfgNtjPW8Tbdyv
yP6UILz/ScX45GB5/7qO8hOu30b3OyEyP7ZLk7+PC5G/H5AGcpw2QJj3XVUz
cb5WCLvfpvxC99u9xfH/qi4pFxht+Wlzb6RNNKTdbP+o5njan2jY0N+9pqW9
t+XWYXVPbUmh+TYx8FXnn24NyKX3JcbI/rHxFH8TA8/vbJ81dBr9PgYe5c95
Ffi+Ud4czPq649kYgLlDI1rMofXFyv66j3oLbfLzW181jQXvsML2Yn2FN/zi
kDMOzOZ3cqjIh2JlW0XEY3wM5b8EWb7UCZHly5cJMj84Q2R+uJQgz9f8EJkf
KifK/HAgROaHfolYXtH2JmL9RtuXhOUX7W8S5jfa3yTMX/T+PAX7R4KxfwTL
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
OT1vyW+YzI/0fCuK93gL7UD70Pu80IV4PMcNk/nxDh3fYfh8TMyPy4fJ/HiG
8usweKdd+YvHotyi58z+e8eMHARlvQNMx93iC6NZ8tKGzysTbjnePj3Csjne
/kMElDm32tMzivLvIOnDrx1yMyrDbxCVVxFwYeXztRf2v/bRen4ToL9b7Hx8
/+zu7hFg3rcYy7vNvtVqTZUIeHAu4GtPfzrfERB+ENYf/fm1v3LuqvGqn1uM
vFptwDcTI2BHqzPaQ3CLtx9sq1/CGQGzhqwIPWA9/ygCXnW8ktRo12vL9iVt
jxvvF+j6dMv7lZ9dGA/qxvsBOj9Ynt6i3zvl+q67ZXv1LafMr0fccn5DpFNe
LzspfadM73u3jF9f5pT5dbFbxq9fdcrydTat34XP/3HLeKjWLrk98W4Znz7G
JcvXGFq/C+8n6H01+Hx4mxv7u4fg/QWtn96ngs/HKjMU25eUX3E5PS/LbyiY
7bRP6HgMxfaVS8YfJwyFS+1yam6dQ/l1qHx+1AcuGY88eShs/Gjx+iHv0/Ee
Kq/fwdHy+r1sB7MfMZT2Zwikrt61KdLIT/v+KpMyImEInBiyedw1O+WHITBo
UfbmDbVovmA4vL30+4n78l5b7l+0aOANMK8wwHKcGYCOrkHPM6bnwdHzksNl
e/9tmk/YH/Y1zQs7Pvu1DxV3nzxeNVqMf7n/kG1EfzDjeIzlTzp4H0DXHwou
dPkwtCptT38wpx98+Nrt13zmc6BStLjcXXzd5FF/mFPqs26bP4gWq/5bPK3d
mv6QNEMcjaHnc/kMgH55/zZRp722bP/T8XDK+no1lf9OWR4Pp+UunL9Nz1u2
4/ztaJy/bcf527R9dpy/HY3zt+0y/w6n50XbZf510vY45PUTGC2vnxYOmX+7
UHoOWf42iJbl7yiHzM91KD2HLH9vUv4dLPPzX255f/zXYIzvpvw7BPu73Di+
MASmeh+wQvNpbUPg3uy1Z8+73aJ4r67xpXoMsZ6PZsZDT8brQ+Dz3EYPxvYR
PW97MI4/0PZjf66G3y85GMdv6PnWr98H8ajkpMCkvH6W7d55C/f64fgFHS/q
36fnsaHpeXIRg3E8hI4PLrfh95fhfNHalF8Hw/0rlfz8Q9xi2oavGg74bAis
MCdwVRPnKhzdUjzYA32mLitz8oOK4tXS1aP+u+CBxq69+ysm28QfSzu98WVo
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
7+MOD22zi/T3j00JOYLH41+HfC/IGzlF4y+M8vhf425+zxb8vXG/rdV++Ojk
13ax6ac7as4lD+z0zku6Rsc3B8znItDzN43y2nye91qKd/DI63mFXZjPubpn
5P/PS+1of94hErqdVsYOy4ETLbXhW487xFsDh+7pNAP7W5bZrfx+dmloRcc8
u/jE+HP8lQfM51YfpPFvvL/cRePdOfB917y09+dSPM1w6PD32XdLUvyLcf9p
Pj75O4fYfb7bo+X3cqD1mk1Lj69yiGcVrnSfUTFX9md9SscjV9bvH9H+5oI5
bvsh7a9R3gb8Nq7Dew6xM8w/cOzoXLg+dsu20iMdYoO3m8ko7xPbbvxh1hMa
T8+x4j/M5301yoEDoc2yd151iFkrj9/bEpIDH/9ZO1L5lcb/c6DzfXt8u30O
0TC67/In63KgbLM5tztsd4h1AxdOO3okBxzx7UrcWUvrz5Xn92M8v/65sn9g
lkM88t4G2o3tP+2Y0WkirT8XZsS7yi3y0PHMxf5bh+y/3Z4LM4Ob3ps2hI5v
Lo5vOOT96EWs/6Lp+OZie8AhzOP4MhfMYfb+tH14PW+h8eIsef2uo/FhfJ7d
ShoPzoI6PX8+WWWFUzQ5krTxxdAsyGq24fOd85yy/TwjS16fH9B4Wpa8HsfT
eG8WDDYujw9GOUXvQ98NWHTUuN+uE7p5zzCnuPTlyjl//J0lr79kGt/OxvgH
2r5seX31oe0z2m9TDp9v3cMpSizeFPfUmS2vjxY03mcsL/714NzWxnLjT/a4
bKzPaPuyQY7zO4X5OOyfssHsvtnsFO28AecNssC4+uPOf+UU2+2bPaVCsmT5
9BGtP0u+72OKUxg3Mb8rX2dhfwGN32fJ8aAYpwhYve9Es0rZ8vkqYU5h1tvt
s2V50IWOL7b36qGXZ8vrrQIdv2x5vka7xHW/D7sebZAhy18anzXuz83yNpnG
l/B+KtEl89/QDLn9US6xtsS7YXkfZsjylZ5Hatw/meVpAI33Zsjz180lRtcY
2mLlkQzr/TiyHM2Q5WczGt/NlOVlbRofy5Tnr4pLvOzYPaNSu0x5/koZvw8x
MoAjU5aPxWh7M2V595iOb6Y8n7edYuiEc2/8vjRTnr9LTtlfsyNTlk8X6Phk
yvLmGB3/TFl/jaHtyZD5O90lLhjFzbfBGbL+cdJ4W4bMv31cYn+J352z1mXI
+qM9jW9nyPzZwCX8Pn6Rcqhipiz/K9Dxz5Tn86lT9j+NyZTl703Kb5nyfB43
8pd32PT3TNj2RnDHuu3dsn8rJU3mt6Y0vpcmr7c6aC1Nrr+GW65/TRoMqv9t
kwZl3LI/62CazI9v0PhQmjxeL1zyeN1Js8Yvzb/l0+X1d52OT7rMr+dpf9Kh
RLEpwlbgkv1ZUenw/6rOGJSiKIzjk5WSwWATgyQkNh2JLCZ1v0GZcN4p6dxB
MtCrR1lelKQM2AwoJiXpbMqKQvGe7WWSiGRw3/n+/+FNr9O9ve79znfO/c73
/53zFXfmGwsh0XzWgtPxd0n7If90mmh+awf5hgPUV7pAe4/+5XT8bdC+LkTu
7hbtLL6J47GP9XtyYbIqwLWJ5vtWczr/1FPPy+n88kl/dKGyNlVZe0k0P9ft
dPzd0N+czg8n9H8X7peX5kY2E823Pjt8j6mXWfCQYuK6pdWCt6N+aMFD8nkt
+Dsxb4f7K7/Ogo9k/1rwkexfCz5S9DyEMwv9mO8HvqYgyo/dWfB4ovtVfyx4
Sep/2M+biMa/LeDbeukfPnTY8/ejHjHx59Urb9GG69n3vqrWSKvofpMPxN/N
/P9UzwtpEqOcU6rnOVM/z+LfyFfUiZnZGu9/bEpDsdT1Nf1Hf0u1Puh3YgZ/
yoWG9jTod4B6eqrr80qi6/OBNHTGBAr9E/Hsk7bzY2mI6cRx2n86RB1omPaF
nvkAPX/UgocUUz1lc7NowZ/SPha8KfsffB/1x/Is4gf2vwc/KqZUlRWHPHhD
XM/iW+VJRfnSCazfrvm8rBcMHmHG19a7yuJbnCuv+tci7mf9qzz6b1tMXMet
+9p6WKx3nMf773rwibSPB58oyh8e+1BTPyyLb5VPFD0v5grxMHkD1kemfbL1
wT/ZqqhH
      "], {{{
         EdgeForm[], 
         RGBColor[0.139681, 0.311666, 0.550652], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxdm3e4HcRx6M/VueXonHtR7xJg+r15sYkTAxKg3isgg4EkjuMkjm1Qb6gL
SYANxuUZF2wDoklCvSCBjW38Yjsvfq4I9Ya6hACDSxI7frHf/Jjf+e793h/z
7czs7GzfnZ3dfc9Hp90ytV2hUHiuvlAoFhKmB8BbFLxuAd0NuwZsrisUttS1
8noFPB90b/GlAT0DOgasD36nCBero4dxhNvqEl8i3VV9C5XdWpf8zgH31Kee
LgGb6lJ2gbInTLdI+qRhlV6g7o+2LxR+HvD3Af8Q8Iv2ydtYl3o7q7+q+z9L
hcI/Kgt/vjLb67KePaUp14bgzY2wg/V+MuiGCOsDmgIuCJgtvrYuaXTQZssC
dgavb4R9Aj4R+e0N+Hj7xD8ZsE8c3v+Ncv13Kfnw1tSl3kbzoQxzAuZZFsq3
ri5x4toHlAKeDt506XLADMNKwDN1ibe3f07bhyV505R9ti7lO5j3c5ZlluUB
Zqqz0XB1XZb9roD9Aafsq8W2MW1/POCvI+7tqOfftE99tN+hgH8L+s72GU/c
j8T/NuD/yPtlKXnIzTFttW3m1rfyCA8H3B5yb0WaOyK81z6hb34VvA+rGwD/
sXrvMM2dhuRZrBQK10T9Hgv4SPD/LuA36vh1Kemfyv+I+sB/4rj891KOyZ8Z
//fmS53eKeX4WF7fWkbCc8456LPWr6P9z7x5TXyR82qx/HmOjaOmgT5im8x1
bM9Xdr5zY4H4Mfnke8Yx8ttSlpdyXxj0fQErhTcCVgSct/zgr1v+5c6lpepZ
aXw/acrbQ7m+xtVHHnUBXytlPm+aDvz+gLfU18t2qVV+hnNoT8A/B/xXKcOP
Sf+hlPHfbCwUJgR8K+DypkLhxcbkbQnYGtAveOPlvajcFU1JH4h1c3hNjO1C
4lMDDgYcMpxmOKIm4zert29TptkXcLf8TQFDjR9u3nfHwvxKQH3AqtBRjvCJ
moQG+eDtIywJ09plHPp6Rz4bI2xpibaK8fpAwDDz2Cz0aUrZbeY5ImBYTZaN
Mk6xbuCfDNgbsEd8d8Cr0vCHWLaSZXg5dE0O+F7ALY1Jfzfg2wE3BXwn4KWA
K5uyXV8y7qqmxOFNbEzdd9leY0L/kQiPBowO/HAhafaxw7b9IfFRNa39MTLw
oTWpa5/xM0w7uDHbaUPAsaDHhdxrhYTZheTNkj4qkG6mvLE1yTuu7JxC6hti
v/ZqSt3wega+3rzeas5xzBzq4zq0oy7Hfx/nwPT2OaZnCIztP0a6ae0z7kjA
AdfYuwMKAVPECWsCprbPudTXuXah4fnmxFdKH2yTjr2QPfEVcdaq/4g5s7vN
HLrbfP9UyjwOmZZ0/xSwK+BV8Y+5v/2xlGl6W0fWhY8p83v34d+Vkt5fn/sW
+1XR+k4TDluvndGOLwRcGu06MsLtjuXLmpLPnN0R8HzAaHHSXNKU+HuaMu66
mCNvx/x4J+DKwO+L8KoIxyhfTTe2sVUv4Th1X9yUeQOj5N3keJ4U0L02yhUG
V48Ij1VyXLPu3NaS84I5Ms06tQsYEvxbWRMivKgp64Tu4UHfFuGHAq61zJT9
LwLeDPz9EV7YlHOZNNPrW/d89ucD4uyzB+Wxl2OrDK9LG2NYXavtQvic/LXu
+dgYI+vS5htRlzQy2Fdj6tJu26A9uF65jqbrYH7gm5Udq523qa7V5hxfl3Yh
4wSbk3nxCe0jbKZxyiHPOGb8vh7hueYc59hZO013qjltuUl1qauP84z4Peob
Vk7bspr/bveOoeWs1yZtxw3WZ1Rd7tc/1hZ5Iui6iH+c+VtKO2FDQ9qF8FcF
f18l7YapAf/aPm2RO0z/I/f+1bY1NtQPlPlhwF+WMyTd/za8w7jb2/D/qpw4
c2q382+DfcM+P1p8g3X8Z+u53bZhH4U/pJxpscH+2vL9yLJeW04+9DXltIv+
zfwJP1BOfKtnB9pzmzY+vIl1mR+8etdY1tcR0V6bAzY1ZN2HNGTdtkbYO9pz
S4SjA7Y1JK9f8LZH+LwAPjZgaEO2/RBlxxiH3o0BwwOGiSPXs5Rxm4WRDZnX
xIAJDWkTj1M3Z5AdDUmPb8gzyHjprebXp5R5jm1TpnGW8UMBtwX8sj5D6O81
5Po2zbmPzTXGuvYv5xj7ie1AuUYFvB0yt5v+fZHfowHvFf484AfB/6o4vB8q
B17rWlp0byEt+8o259wE+2a757avmgb5FaVsr14BXwn4H+bRo5TtSTteXUp7
jfzuDPr7AXcE/EtDyv+Z6eCTlnq8U58y22yzvqaF9+8xf/+XdUX20WiTKSH/
vnLmS3mYc79vznrfaV63m36S6zA2xcByngdfcW7scu/hrMM5ifMQZ7obA56q
y3MQIXFna3NdYu3Z67zBhhxeTpq1aaLrDG13xHb+U5Sr2JJ7FjzyGFyXZ6pJ
zofXmvMscV1Af+NYt5F93HNGf9cY1hrWkxss6yplBtRlHLLXqmuVvOutA3UZ
aDrwBtcmaNaqQbbB05Zrm+PhsPv7VMfpEfdg+gEdU+sz/RTXO8J99TkHpxlP
W97pOsHaxdzrYd+xH7G3cFZrdH+aKbBfVdSxT93ttQ2mmX/J+Ib61n4bUc4+
2a+tgn1zwJC6jC4nvV87ZoLjf7ztST1oS+RHKcu+fbySYwp6ZDnTIzNFvfu0
deCj61xt6p5iG1FG+v9w8Ie4l56ozT2F9Z+60v9D3QtWu1+OUJb9c7g0e/Vr
tUmPcm9C5nhthiME4o/Vpi50ky9nz+vLeU7lLAf9U0POd/hQfmH4UefL4HLO
GebPPzp//kEa2dHuLZSlmv5G82ANq56LB5STvq6ce8qPhQ8r9zPzvSHiB5VT
P3mdqk0bg3wIT9em/cB8PVCbY3uQY/xgbfIHOtaH2pZDhGedh0Olj9TmuK/q
eMYQmUO1GQ5y3t3onNlTm/Ouv3PsCefhDc6969uUdaNrB+U9U5t9R7+sVYY2
O1mbNshYZceIb7KcwxwT+63bDQL57AveUfUiu0UdjEHsyw8GDI51aJg2JLbk
rth3X/E892ycY54JGGB4QZzhnq5Jfod2ybs+YLW8JwP6BzxVk+dT6ErIfT7s
z881pQ3+2aa0zaGfUX6AacDR/3DEfaYpbfFV8tHV1C7lkOHctCKgh7A8oLtn
qZ7yenrO4rzVKaBjwJrGLO+agE7Wp7/1u8TykX9XZdcGNLbL/Mn7b1vyvP/h
CP+uJc+qH4nwG7FeL4s2eyzCe0J+XkDHgKMBc6WPBMyR7hqwKGBhwALDEwHz
pY8HzAw4EDBDfmfjOkmTD+07S1nCg21wyj1bnPBQwONRvnujnE9EeD7C1wOW
FPKc3t9+62h7LbINab+VTe8eJQvzAuYK4CcKWSf0NxlCH26X42Wu9Hc9399s
f+CLuC/gfvE+hr30UZwOvTdFWU5FeCbgbMAtNclfIG9+IelTwsmAewIm1mS5
oF+sSXpH1PdbATcH/lKEk2oy/pS60bfQ8GbzORew2DbaGrwtNek3GBjwXMDa
muyTNeJd2mVI3Lqa7GPwneb3QoTrI+zWLuPXKzfYOXSD43KReZ/Vh7JB2fXi
3W3XDo6rbTXp+9hekzhhP8aL/cg47tKUNDgh9JKADvI6Gr/YNPcGdHNObWps
7R94zzUmv4fx64Je5pzpZtilzfxpyyNcylm7Jv0qOwMuirI+X5O8C9tl+aFf
MH68NHz8PRNqsl+J32qd+7bLNYh27Gg/0JY3OhbmOR7Gms/z9tMg+4C59Jrt
Ob1d+tCYd5P1VZ2u5Jo52XXzZfmTHdO36MvCf1ejnwy5s5U8t5+pJD1ZmX36
sPbGmFgZ+dwX8L5YR94Iuasj/GFz1u9fm/Nsfz74721J3Xe5Pi+PNH0CVrRL
32KNdzc/bc52pF1XGk/7HGlOuwP7Y4ryU9VXo+/xJuvDXP3LyO+tyPevIjxZ
ST7xr1eyTLcJ1O9cJXUdsO740mr1iRWlp6sfW+lEJc94xNdZDsowTblp1uWo
MrPaxB0ynKHfbrZ+N2TujUTLAnoF9G6XbQTvdUPoOa5fxwutPlny328bTHG8
lF1P+tk/tCV5NRRadRCGufpuP73guHyxOdeubzZn/DHLeN78V6iPPqKvaNdT
lRxDrOvHXNtPuUcsDjjpHgE9RV8vl3dLjGdN6FDIteMC1y3ojoXclzoHdJHu
5JrfpCzr3lR1Nrh/MPbL8sjvbvPDn7y3Xa7FrE/PNed6ypoJb7/zh/T4WfCr
nGzOvLsWcu850Zy+Bc46e9SP7pJppwlTLc8+aeI+EGPxl9y1tLTunay71G+p
dWt0b6gUsn1O20a0XTfxZY6HcwGrojzLQ/bJCL8W0Cvw3oXcH9H59eY8j3H+
OdqccsivCPhK4D0j/GqES0PXGfsEvKf59JCu8uGdbZfzo87xPcN5Uuu4qzj2
6h3XyC2wbk2Op3rHYrdClqerZYLuXsj9eq7jc5502TQlxy5+Be7c8Emwt2ys
yfJu0D++UbuHvR17Ajuh7Po40zFSMY6waqfNlgf+tLZjV9uffoCeY3wHaWyw
WW30sXcMbMz95gLl2PdY31drv90jXbWJCNmTq/sx+LPuCR2kkVnj/rzQ8dPN
8q0z3XPGd3GMdTY9euYp392xtN49GR5zmvWCvaq3Y6yXsMwx0dMxsVEZ1vDl
ymxuwyPE5mCdOlHIfe+kfcnY6G4/9XBsdW8z1nqYz6aa1NtTnewDrD8rxatr
Wz/L/rz7Mfg623+9fbDOff/7zbkv/6A5ecRjC6Bvm7bHVvdk8kQfe+6/NKc9
jvwgdQ5U7zHXY/b6pa5PzOVHnY/My6v1If2hOeF9+rEA/Dz4e9q35Nmcs/wa
9TOOOgd/a/C6tGTe642b15R3atcW8x4Fv1e9Php8NdyxMMaxiyuOe2jWN/Zg
7rs4M4Fz77VbwK4gbq9x7LF9Y1JvijI0taStzVzirMX5iLvGv2nJNZA8WOt2
qxP7cJd5YXve3JL78y0tOb9P2HZdrOO2cvrI7tCP9pvm9A/+OsJfNaevkbvS
190nlrhusGY84jmmi2v1csOu7iHLXBPPmw78fu9fub/qoM5Fhh2Va3T9Yl0+
5fid71q1wny+FOl7RPjl5hwb2I303SL3KPaqkv1LPy9wLVzYJr9z5nNa/fPN
q1Jote8XtEnDHrbJdY57zoc9d15iuMO7oWGuh9htw5SH5i7moYAHm7KPbrRP
ORcPEO9vCI1dQNnYL5F5VrnV0pwBuEPeZHkmaL9yhhmrzbxDHJtnnPjz2sZj
tJM5D3DfiX00Wlt5fBvbmRCdkwxPqmu8Nvdx15vxAnHMUeyxsebDfk89ztin
N6nvRutBnVnPuO/eYr02W7cHPPNx993LdYq4nq6Lm0zT2zWRurC2sK5sbM6x
yxiE7uM62U99WzyvcJ8NzRmKeTjUeTTQMjKvmKe77bc1lvsG+4Lyr1cOHdiH
w+2XDfKGqgMZ9o6BzvtB4mvNa6By7CvM6SGmQR828wjbaWSbthphm3DvjZ/h
Cn0orBWfl77ctwcXeifIeAT/dFO2B/Ap22W5Z7YVnr17e/7uJb1SXwZ5XWVe
3GuSx+SWPN980Hh858g8753pxfpsLnbeXKov5RJ5lIv7ypXm39NyXuTc2Wod
+pn3u28CWvJO9TL1EX5O/CL1PiRNPjvtb+r7gHC/42xdc64N65vz/EH58d3e
6n0r964bHFeMr5G2/0HH2EjHIGePUdJjnGfc/W8zHnqJ52jO04s8Ty/23Mv5
l7PywoAFnr/vldfNsvez/x5q067d7b97ba9P235d1EueHdXbQXyR9PyAe+QT
zhNfYBz4GO9aRnunxH1O9e6Ld0LcMXFfyZ758zBSv84aHPTXuD+pTd4nA64O
+rFy3sVwVzfEOzVkeB+FHD5S/KO7I7wr4JXajCe8O2BXwCfU+fHalOPu4tUI
95p+em3m/ah5DdVfi78TPzr+2bmGg/T9zqtNmcPqwT96venuaZP2iH540sxR
xyHjBuvj3aufl7JNs0yvWvYptXnfskveZP0H+AA4582rtNKE9+gbgMZfMN8Q
mvP3skqeeTjDntOmPKs9Cb1UuTfVf9qzJDoWVPJsfk4/BDzO77d5Zr/WdqV9
p9rW0Ny30q70H31UH9BQm20yUN/6U8XkEfe6eSyspK9icSV9GW8aLjHf8/oO
FonDQxf+61n2yUzpGdK09apy3nk/GfD+ctJPBHSoJP6kNPgFlSz7N8o5ThmP
lUrS4IzRx4XGSvKeDXimnHfZhJ2D/3Q5oVPgT5UTyIc79Q8YB+8603FvwX33
NcZf00bfs+LXmS9lbQq9q+Vxr/uaY3B+QMdK5oV+/PfwiV9Qm/c24Ojnzh29
Zx0LE4upmzz+wjJeYxm6h841Ea4VwLl34c7nOXl328+lgHIl2+8bzjFw5twN
3i1U7xwI6cPZjg/wbtZtTZv6d6lkXVdLr7beyKwP2BDQO2TWSfeqtMp1rWQ8
dz8bLc9jlm2gaddbD+6I1on3qGS9oHtWkrdemnuoPupF5xnn1YRi4qc9V00q
Ztsy/3ijw/u/1yr51gecPZI3Prw3OiD/aKX1nSBh9U3hBPedI8qNFXhXdLiS
OHz2vRHqZF8fLs0+yTo82DMUAM65Cj8tb8yGKjPCdAA20TD5w8XJa6d5b1QP
6XdFPV8N6B/13q8e0j1WzPWY/QJ6kGco8CGmR+9my0A60o/0nMUZCx2nPDfT
vvi6uOsYVUz8Nc/0Y4vp80KWewv8CdwpjCnmPclJ03E2PyFOONp0Jzzbzzfu
mDCymHmM9n0G+9rwYt7NcFdDW2Dz8zbsYCXD6vutUfKBQ5WU3W4fEYePDF/W
7nZ5poTepd551m2u9BHpEcWkX1WWNNW1g7lL2w61XxbZHtTvsO+Gprkn0yf0
zT75+4UDtn8H933an3yuK2YZ8eXdGPgN0vDpJ/r+ujay0E8U0w+MDxf/7Vz3
m5MCvDmV9GWcd76c19+wG59osZW33Ld1vFe73vzZT952r7s34PKwyVZGeEVL
yq4IuCzwPfrM8Z03t+RbVt60nrQ8NzsmhzkOD9gm9OeAYvYPeY4y7qCAzCEB
/LAwxv6eXsl5fUQ4bPuzVowv5nimHujGr3nE+XxY+aNt1obXXB+Oic80fob0
UteiM46NAfYB4api69ycah8PMN8ni61jlzJPNI/j9g+2L/gsedW42cZPcG2D
z9r8E+/muYvv7141wDUbep62U9WG6ur+dVQavIs4svgntpTzfV3FvZc9mLjO
bWS7qIs47CFkF7r3LXD/my/OW8qF4nPN57C220H3pQXKdwtYVJvvIRYah93R
wfw7BWyMNuxo+tnuczOVm6NMNZ+5pqvamnPc/2aZFtuubPk3FbNenS0H9dsS
vPbut89oTz1dTLq9tiT4s8EryyOsaHcSNtamPdwU8FzIXWB9KAP42mLGNZp2
ahs9q4upo6Pl7SC+oZj17G7bdbNPNhez3B1tB+rbszbfsW43TbU9ng+6l/Hd
laHN19u+HdQ737bYWky5bsr2tK8Wi6OrviXf2DREeLg532DdW5vnAN5S8qam
GHRtba6Hr9qGU+V9Qn5DyJZcrwjbu57NEy/Lx96p0u21h6aqs719sFv99MEe
eTOkaXPORdjQvzDExqqedUrqolx1ylIXyldfSXl42Ng/V+6Tbfp+uv04zTLs
Ui86G8Tvso14Y7JM/dStmgdrQV0l384sVYZ3NUukF9of9EVfdS0TiO/DuCjn
21jmNu/f8EEy1xebjv6DxxusupbWfj1hSF4nDXurt5f0YutJm+61HdjzPm5d
aivZ99TpUW3UBte0enn11pF1tlacOTFTvYTMlVlt6H3qrzMN6/s47ZcOyq8r
Zh/TF2uKebfKmGRsnrGtoHm3Q5vSxtiwu3w7Rdw43/+ctt2p+wbtWmSJG+vb
pmW1rbKjfR90yjY6aXtW2xE+69wI33oNdd2lj3jPS/684eJ971B57VryHR/v
E9drI1MO/Om8Zatpac2D90knzIP+POZYOS4Qx5sz6ki78O6IPDaZN3b6z30P
9oTnFc522D+csXgXCP6UNPqH+77tZ74Fu15gT/qp79du0Pa/3jPNAOtAPr8w
3Y2eAfBJvOK8udpzBWdfaM7G1whV/0T17TXlJORtNWVb1Yb3fuuCHsKrxa+W
/7h2HeOYcUv6J01Lno+ZJz6S6/QxkJ680c34ZMwxfgd7dhlk/9GPzEXOluyd
5MW5q6s2Fe3M+Zh4Qs7PnMU7ij9Zbo1baDrOX93ECbHdvuH+XVbXAvMjHW2B
rsXqRPcSQ87SfZzjO4s5TntJz7ROF8jbUUw+Z8INntUYC53URb3wjXRWL/Zy
Z/mE1XNn1za8pcryfnCQ46Kva9jB5sSXSW9zLRvhWjZMmnucjY5j4njXyZ7E
O88RyvD+kzkzSpq0vAmGRvaAc443w8Psu83q3GSfDnb8cobl7M55GFu3pzjt
wh8uytPHMvVx/aDdeinLOO/bkjLIMq97q2Olunsoe584wBzqaTz9js23Qhze
Ec9k3OMOKyYOb4/nCmxh/qvyb/UL/q/7g/T/LOXfH+L5H/lAKf9LEv95Zf7o
X9eqDG9Bf2Ua/n5UZb5Yyj9HfzSs/kHiwpt3vl8q5b8naMIvl/JdPW9Y+XfJ
P6bfmv+nAj5dSj68z1km/guSN3883pHmf9JnzYf8Hinlm3h0f8U/UDXSU9rk
X/1/iF7+ua4spc5R+lr5t8k/THD+ZfL3lf8JB6X5t8pfTf4i8IeW/wgr/IfK
22nu8/mveUL+28bxn+Rt83rbf7Lw37WZKrnu/Mr4+/yzsty0v7E9eBd8wvcC
x83jpP8hDls+/m0csfxV//E868W5m/CY6UjPX23+lh6Xf9z/Dses+2zrjPwp
/1cQLrbux9R9j+/L+SfGv6ZfW27eGPN++bf2K/17UcCDpfRR45+u/s8Z6l+Q
/eraZxv2sp9W2Cb8MbhQXYwZ/pzyB5c/sUP9a0IZ7rM9Scs/kPtt2/vk9Ra/
3/HFvLjKMf3unWp9/nGd3JB/aPlP+4jxzQEPOX4fNO0XnQefck71s9+q4/o3
8j9lnn2lD+pnGVLM+fcHx/4XnIvwrjQPePyR5503eS+yX+ifif6PoR34t8eb
cGRpU/qSvzbwH3b+/M7wn5T7D+v0e+fYx5yjDxr3GdP8p+X/te32GXX+zjkJ
fmnAZdbjs5ab8v+3OHW6wvjLpdFzien/y3TEv8e4h4TPWIYH24yph6QvtvwP
m36f/xL4n3DQsTnTPw2H5F2m7KWWBfqlhqS/1ZD0zobUfZF5XWy5LhJ/0PQP
W4dLjH+xIcv7HnmXmcfnbI8rHXNfsD2gv92QOHKb/BPF3wzGNTYSawZjiz9M
zAPmB2OZMf1Ny32JfNJuVu4i2wrd32nIvC6X/rz1eKEhy0p9ka/+r9rhn6kd
/rXaqc4q71b/Ur0c8MGG1D9ZnPCNNmsHa+ctzqnJ6iJugvdfI/UNHnENGyEM
d53bLD3SO7NRrmsb/cOywfJ81/zBmcuUj7kxqSHnCuFNDdlmhDc3ZH/DZz25
SbkXLBv8F+XdbJpzrhG3mte3rRv1ekk5aP7d3yK9wr56237DF8r6RN1722/f
910Nf7LuFP++dbrVdubvVksp/2MRxz8u/lqxNvGPjbjq/64vy3vZfkIe2TvU
zTue95Za07Bvf1d5xic6wdFBfrebfr9/gg649h5wTh12vTnkP6GpzsOWUquO
/cZNd49Fnj78kPHfM48/s47D7XfmxEHTDLXd37AfvmMbXelYftHx/LLtcpVw
pfWD90V5/HVjXvV1Dl7uOgBN/2xzzLN+I3ef/VfdW/qYlnlzoXMHuQfkv+hY
u0S9tzheKPMV5kmZL3b+TbT8Lwg7HYff+v/G7EvyXnSMEneZa9dLjoNH7MMP
2j7fEb7tWL3UtYM0b7rX8Rf9fsvPWv+W45x4fAr4nPAz4dvB74OPGj8K/hL8
JBe0pF3doSVlVhmPHwUa/PFipsU3XvWN4jvgDFb0nNaxJc/NnVrS5ztVnwN+
iDX619fpe8MHN7SY4Vr96I/rV8f31UG/AeeNPp6DdnrW2aHPjDrtECYZP1Ga
OP6O43PeLr7dv+T4GPFfcp+yQRyf3GzrVa/fZ451xOeGvw0/JLwT8vFzjNXX
QdwY6RPewYwWyIf7lc3S1TjoTd73XGv9t+g73GwdKDN3bSMs63qBthkuvqHY
6o8caX3wL24stvpTN5nfVvOgnH9yTjHmNlsu4sbZXlvlnfSuif7/uGOAfhtm
OfDFco7hjoS/OIOK+cZ5v28AD/hWD5p3ys8oO7CYOP49dAySh9zTyjyjbmju
PrDBBpvPIc9WjKNZ0ge9X9rjHdNu7wbuFt/jvcZu7wtetUycxaYZP1X6oGXn
DS/l2mcdKNde0+E/fMryMZ+etJz4ovF9Un7mE3kRd0z/2iz9ZeAzDOvkc4cy
zbkzQ7poeMS4/up9QnjcOVRU74w2ermrKDqHkZ1uHHcpqyxXnX6FtfYt5cfv
jd90kDi8Rn14a+XRF1WacIj1R+f1pnnGfl2tTMU1iLxZX8Y51sYaMvbwcTN3
udth/OOX+aW+jC76aZbpM+mkzwKfy9tt4pbqz+DMVv1fyx9r/m7zLpa3KfhK
ed/yuL4keG+ZFh1vmgf0CvPoZh5dpRcr84a+BvwGvVtafeWnKq3+HWT5G/5e
y9Fd/8IKfQ0P6L9YLu8d43vod7jfEJ/DeNuK9uMOBV8T90C8z0U3deU98NfF
z2pTYVud026C97r0vZ5JOJsskUfczdpF57WNqv/w2WeWy6/Gr3BPQu8ydSDH
+9dfCryzxXYg5O0tNgq+ANoF38A7yvAm96u2E3/p/1wZZHl//DXrhs/gEW2h
FsNHlPuydhV4O/0aQI0+jy9pR8Gjr2hH3gbxXo3/Bvw7WGS/8RZnhOsu99HV
Pay6Dg4zjhAfz3DXhDrXBfYo7nZvcp0+5p3+IOcJc6RP1QfVknffI137R7jW
DzftBnlDLMNa5+IQ59iNrlcD5a82n8P6oYbKP+h5tnrHw5g94Bo7SDniWVvx
dfJ+CT8mbcK7pIXSjLtG24k4fJrsxczds9aDurInnbGdSVMWn2feJ913kWWP
ZN+qxnG3xN4+sdj63mSSdPVNGGVpalMuwgss007T0f7jLVt1f0UH++1p76mZ
U/8Pk3sMJg==
            "]], 
           PolygonBox[CompressedData["
1:eJwlkscuRFEYgP8RM7ijL3QLCTNz70IvWyVYYTCslMQD8AjKDE+gRt0qURI9
SqK8AStlwcJoIzyB7+RffMmX/5y/nXuLhka6huNEJADxkOCItFgirZCIl8On
V+QLKvBNWyTKvXfYwt3Emi3N8eB9UJIi4oN+3AUPSSKPEId3wXmyyAV041fU
OHCJHMI1Xulor2+owm9sPTuCWzzkaO4l9OADjvbywyCeAbvMsgeZ+Ds5hR6R
Aoji9cRCJhca8HVib6I7beDzkIPnwgL+DO1ukTZ4whdhlLMxWMJ91Igw6yT4
8T9iP/SKwS8+DVnczYYZfNZWNz3mzO6mPrt1mDfAa6kRo9YP1OEnxIKcdcIp
vmxr73FYwRsd3aUXmvBXU5NZ9+EFTyO2Y+mbpOMpsG1pLBW/406YHyAC9/iq
rbUnYA0/snU2M8MxXkxO2Ks7l+BBOEvWb9qJl8KHV/+ZMrza0W9pdqrB8wx4
vgEPOPp2U2Dj/+mzXe8=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[
         0.40397412454212456`, 0.6459254212454213, 0.779944391941392], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
33CuIQ20fPPQXZ7UPas2vy/qZl0TpV2zJn212esRXq8Oh7/xFHmwjyWNPnGt
9P2162FLw79tQEP6otXqE4dv3CDtAIO1G5DGtsueuI8642BtBz+xl65L++1A
cYPr2uywP1oe+EGagdKzlmA/wt4xvi7tSNicsCV9V5e2bOjAYW+CFrssdtr+
AvbXqh2W9JS6Njs4dvEB0n/YkrZd4tO0V3CWyTnkSqWMc47IGSvnqQ2BW7mU
uGcF4vtbbj/T2OOeMx85X1Z+zmtZf25SDuT5VnmmKQc2HNblYfbTXlFfj1LS
Y/9m/cf2vaJpeKxkn1wk32+s76W6tNNhP8RW10c8IXY5zhc5F68p5Tkl61IV
x5l6IfB/1eU5OOe+1TNyzsxnKity/ikeOtaVq6WnvXWlPGOGH+vg9dJ2k34D
8661X0qlLFdbSjz0G8vrBgEc63qxlHFwfJuxSin7nfr/VoZrbRPr2IHuXRiv
jI3JdWmjZ6wxjrCvYZ/vJ/4g8a8EvGg/0nfY4Ppa7irb0d0yk+rSpn+Y4d/2
8z/KdbPtRMeBBzY+6Fa1P3lXJsib/ImGh5oHzc8+A/rxj7psc8dSjjfGLmOx
Qyn1UXwc8LfgHBnfhK3FVUqJB/DBQGfl7HzRUp4rNZYST365lOOfNHrXLXVt
78Tm4u+wjqZS2mKx06Lz3Sdf9D70G3jfowxbWQ5oV0oc+YvIg/gOlseGyxn8
MqWcw/gejLkH/tiRFy8lHenFSonDLot9lm+t+KaKdWrJUuKw5y4hHemd5EP5
hUspPzJgg16qlPSPKMfuxvEnWLaUsjBH870b+UuXslxPcczP6At8/waOctgb
H5P/bvJdqJTn9NTNPuUu+5RwW/GMc7436FTKkHG5quO+l/kTHS+Mxa6lTBNf
o5Th5AXGFmON8T5FPD4BK5bSZ+BJx1N703uLW76Usj9uPjjsqdhknxBPuEIp
4+gLfHfHc3jcdvewHch7gHIgT5dSyoGcvEOsAS2lfAeBzqWcTw8yTfwmx2N9
Kft4vM+72nfNpbQtP+pzo61rWg/lmSeZF5crJc1j1otMrdZ9sLjVS0n/svng
eFd7+yyqz6SPfFcrZZo4fki8t/Pr8vyR8x90H2zxLabXDvq1SrkuISOyriWO
vCsM1wkYW0qaMaV8ttBcLo73mPfgtFK+T7xLVdyipbZ3/VTzf430/hH+Updr
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
fXarY3GqdNwBcIh1UCfzQpUfdwvMMD1eGr7XX70+++ll845Slo1tNz5C8B6g
HHwPP12ePM87fJYHONafN2S8r1rflu5Un7oq6z5zzm+OqQPqcz5h/poljnHX
uz7H3mxpgV71WR7akfL6JuasJyL8tiXXIOYb5h3eLea+maa5B6a6RhGyRrFG
smZy78xQy/wkUGaIMsGD+W6/+oyD278+Q2ThneZsjW88Lyu12XjQ39A70CmZ
g5iLmPOYv9CnmM/QOd+TlrWKtYS16S1D1gPuQajiaHPP+qy3qp+hr3GHwwem
P7Nt3NNznvHPrIO6uFOBEN12M+Mnm+ZuiPfl+YE4dDvWavp5L/uH+29+9PmM
9pmx3qBToAc9abp9fa5HxMG97vg62vbSLu4NYZ1Hv9jd94I87h05sD7nlLmW
f0JZ4Lev9R0jPeVWUgdjHnxceZ8wDR6d4WqfB+vG4a59rIHY/rB3fd6SddKm
McrF9wfcH0T8UtPc+YOOWNUNCUlz58/3jjNw6DNfC9z3Aq5PffKnnsttH/Hv
5T1QXoxPdDvuJPpCHLTMtawZ+9gve/ucz7cMdwl9J79LbMM3AnftfG2cEP2q
ev8F392iy6AbcRZzrHFw3FdDm3c13Nn2c4cR7xdjYh9DxshejhHSPNfdfM5f
lf4vD0LuTdrJ9IO+q5Sv3p/UwzqYL16sz7lgV9uxm2W/sJ/oB9KM/0ekg4Y5
5SV59Lb/eQ6M4d7ixzvmDnLfsa9tAp62bcwDvP/PGe63wFzQU9y+4p9V9j0d
E+Cfkd/z0vZUHmR52TTveS/5MOfAi+d+kPIdYB8wL75gmV7yIP8V+/xR276n
cnDX1B6muXOqQwz/lWryHjnuxOF+G+67OTLgCOpuybtxuBeHfObxYcYJuWvo
V+Ormh5cn7oKfFauybv2qIM9JnvUKfYv45e9NPvYifUZZy8H3WTjk8xHJ+tr
/DBp/hKH7kb6mIb0L+AOI9Y17s0ZoazIgj50tN+VQzdBOah3ZeUeZP/Rj3N8
57/zffrW9O724WPGh1vPb5bHfl+145Oe5T1Cg5VjheiLFWvyvsEfW3K+hLZ9
Td4DSN4hyoVewr2Gy9dkOe4ChI7nxhzWz/7g/qWSbb864KqAtRvyTqlLAy4J
GIjvRcDMgO8DLgy4qCHvQ7vI9DkNeY/buZajzM8BP0hzsfgVzSP+k/y7BFwR
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
qyuejG35F/EzmqvsfvfsQmm+TXgt+E3xV2L/7ix/Z/5HdyuTFlO5vPWBM2N7
Zeq8l5682fydZkvfyWdKn37KL2pHZVsax818suaqhxzOB75Gm5O7Ub4854z4
IAZ+CLY0Of5It6pza7ps4i3/myP2Lr4Ifk0zraNNne3Qcdb6Y3VdS0bfb9f+
dL5NM8nM5A91tbqma/d65c6Gpiv7deH42Y5/ZxdO+GXZaPhp8ZaIt8IvMb/0
wN0KL0qfLz3EGU4l733CDSI2g+6x9OHNBdWHewW3Cy4Wftt0yGubTbZ3NOEQ
wi/MFiSLEwYXzMpkcYaca/3TtzZ9m31ncXDg4sBpwm9+2JO1jyMJPxLeJjbn
kuRwoOCJETMvBl8s/sBljO9Jnd+46huDunA9wWnr69+K3kEcHotqC/ZmL5pf
Y7Jn2TfsA3CfucBT80f5p5Z932OkH9V3+z++GBgPF86S0SQWZPH4umg0iU8R
F07un/ZdPDN01taGK7zo/mJpPDSrkzsw1v9tfN0/mvTrYXPv/lJ1+H8Ga9J5
Hy7RvxON17jxM+Fcwr1kD7JHnenZHO8b8raxni7fmAcfYePmE7xvNLHDcUiT
s//Ywxand6r0u9K4n3BF4YI6U9nS2taH4e8h9sm/k79Qf8n8mY5ny7YyHjxH
1oR1N/zfAusFNrHn8+mGK2CHqfLgAWk45IfG/Do5ea+SP5q8e77gziDxR4kN
ESfiCgPAVPDXp3CBc1nY9mTzbY0+TFb54eSf1/ab2tVnfug/15b6H5Tmm3yk
3+cw2ca+RbhtxPDy955q7Mq/hOWO1Mc9y75z3enDx3Djy8rJvahv0s5OnZv+
Fab7pT6K4RFz5ox1VWsNR5c1/bh3QZwAnD7EDbjCvHAzPDyUucLE1tjvzQc8
8iT5udoSU3W599j7rOy/sMuHxnOo39PquJKs78a85tgzhfHFLejvgMUPpksP
JtqQHhtyXd9Dtp3+iOtaOprUow44WjtsRjqHesbPasuYxUr8m90w5Bm7WIqv
8vhFKA==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlMdP1EEUgN+uCri72MtBQSBR/A0kKlWwJHbBEqodlSpqYvsbLHgTjAqI
AtbErqg0SxQrIMhBoxc9WBJgxShGY0n0mzwPX/Jl5s28NzU8b3vGNreIpMFA
qHdEmlwijXATPwx7aN8Nh/BbEENfLNzGr0E7fc+gDr8CbaJtV/E7jsbGwV08
zois9YmsgVh8C+wMFtkFW/EsiMINZOInGJPLXHlwEj/lqOfDafwBhLOAMGjB
M4yOdSAdT4B1Ps0Zj2+Eg/SVwQbcA5M8IpHgxVdAdLDWkI0Xw45grXEzPgBS
iU0BNz4dcnyaIxH/SA0Vg0TK4QNeDZ+o1Q/H8QXExBObAAvxwXCDua5DkK0d
vnlF+sHBvzJmX4BICfTjtdAnOmcN/hL8rL0XXuCvoQPvhFd4oc1B7R4osmu1
czL3F5iI50IgfUGQh79jTBq1p8N7fD5tLdR6H+bh+UZj7ZwF+CKja0mExfgS
uyd4EizFw+E3a/sDEfgYKMXLYCx+xtGzLICz+CzanlNbF8zGZ0CnV9tm4m3E
HOUuVUE7/hQqXdrWik8lZjW5V8EUPMVobbamVHwC/PJoTWF4EnR4NUcyPh72
4yUwDj/m6Nn1QhU+1+he3IM5+EqoxmtsTtxPjHBWf9m/XvwNdPOweuAtfhGy
qTULLuA/IDmQOuA7ft7Rvkw4hz+298mla3yCf4Zi5t8EffasbT7O2mXPHB9F
DQc8usej8Up7fwjZCxX4JWgVfaOX8Wb7ppm7GZrwyUbvnr0jkXYvja6t1r5Z
vJuYetbWAD14o/N/LDTgw+0eMzYUhuFDjXoIDMFHQphXY0bgy4zelWRYbu+i
0bdQBwF4CPz06JmF4jFG/w57xtPwR+SMcOsf8BAvd3St9s86gkcRU0iuIoi2
d8vRvXJDF77e6F9QCjn4P/XFubA=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.6277016471306472, 0.7846520647130648, 0.8300992857142857], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
            "]], 
           PolygonBox[CompressedData["
1:eJwtlntMlWUYwN8UrSl88oUgOWegtXne7zuHIUotE9Qalkig5tRcSwEvgIGZ
lwNZs5tmaqVCrZmxQtAuZqbdZoh2VUS5pLOy5qyVI6S4mt2w37OnP37b77y3
7709z3sSc0tmFvczxuyACJjtGRPnGjMM5uBZEIMPhXvwSwHaDjDmFbiIf22N
ecsxphK2+8ac5/eveCtcwCfSpyvamG5Iw89Sdoi6vbCH9gmUvU5dFYzBEz31
XRDA20LGLOHbmbCS3/M8nVs8zMeXyxxlbpCL50MyPhYW42V84xG+VQwn+fZ6
ynKpy4Nn8Ajq76RuDLxE/ROULXS1zVP4EsoK8NVRjIe3M598fi+CZjzd07X1
wCT8Idp007YHyvBy2oynbSqU4tmU3Y5PkDnjVZTl4DOgHp/s6Vi9MAUvhnGu
jrHC0z2QvZguc8KPhHTt2fA5XsmYaawlHd7AZ9Am1tUznYXXUfa2o2cmZ7fX
attJsA9/DSzuQZXVPZG9CcDz+DbGWCXfhnJ8gpxxJGuC2/CB7GeQtiH4kfqX
pd7ROe3GF1ndy1WQjz8na3J1zBfwE5QtpG0uHMCnwi7GroIMPAinBzN38PFP
Q7p3cuZy9vMpcxg7Cu7DDzKf07JWaMIrfL17sgdb8Upf61rgFN7NeItdvXO9
+A+MMZO6WfCT3AVf55YH3/I7kt93OHqHUvCHrZ59L6zF9xAjV/E+2I0/TVk0
bV1Yh5+DZpkbVOA7rO61nMFOvBg66dsFa/ANVvteDxvxv2EoHguG9W/ld4yj
ZdvxbOZ0Lz4bkvEHKeuI0jFX44/RZ4Grd34dvtnT2JA73sr642lj2Ourg4g7
PM6q90Es/hFjXmLsNriCb7I6N5nDFvwwa07GX73GmFr8fsZPcfVOL8OPUjaV
+gxowOOSWCd1YRiOX2SMa4dwr6AVPw4ltF0OzfggX+9aEvzMeLVy5x09s6Ny
dxiziSU0QhX+ZUhjRWLuGH6csgEkwAg4hi/1NHfIHAvx0YxRxPoLYRSeCTXc
xWqYJnW+zuUB+IzfiVbbFkACHvY0ViVHleETKbvR/T9mrPaRvgvgY/x9OTM8
R2JU2lodaymMlPsGFex9OQzGt/D9Wtp+AjV4E2uYgxexnkb8FxhHrh4PF/BO
+tzEXo6GDvxuq2uRGLsLPxHQs5A9qcfTKUtwdc5pkis4k82uxqzE7n6ruWOy
7D/+B31aBhJTcAX/wNe7IW/CZTzT11iSOxnEn4Rt+Hp4XGIVzjgasy34PKux
HAlz8T/BdzTHnOf7IThJrjwFQTye+ZW5eqflbldbzWXSpx1/jzndyl28Bfbj
7/CNOuoOS07APfo0ROuYKZ7GpMSmtKmn/nf69GNt/aEDb7O69imSM329o3JX
f+P3iKAx1/laJzkiCT/n6V2VHCC5YBk8ylzXQhH+oqe5VWLgWXlbKLt5iJ5Z
l5wF6yt1dY2j8DNWz17eVHlb5c2Vt1f2sIfvbfD1bZY93ijx72vuyocs/EOr
d01i5hB+ljWtwFP7G/NNQN9MeTsl5hrlvvjaV+6o3FU5Mzk7eWPD+E5fc6nk
tAZ8GGtYw16GIQZ3YRqeCXH4Qb4x3NEzOYC/G9CzSYV9eE1Ac6fEcDVeaHWv
vqesQOLD07FLIR7/wmosyRvyleRSX3OfvEHyFrUwxlxHY6QZz7L6FktMT8f7
fD27dvhHzjukb728CZ14idVcLG98WPK1r3dHYvBN/Dtf+0pO/AsfkaS5TM5s
JH6DnDlnWQQRzDfb0/9W8kbn4P/Km0ddBlzG86y+lSshFz/CnMc6mlPr8P8A
zHZ1Jg==
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.7952263846153846, 0.8482343846153846, 0.7906836666666667], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNWGmQVsUVfeBSaIT3oRWUhG2GWb/++omYipqKMW6IA7NDIpAYYxY1qRkE
B9BRYmRAxPyMEjZFwqICQhRMqrJYAgKyCMgSFdGqVKWyVsk+zAzDmHPqnKn4
49R9r5f7uu89fe/tV3T/1IbmvkmSvNUnSS6CrAtJctPAJKmFfCRNknqgBViS
JcmNaF8K2SeXJH2BUTk9J8AhjCmBLAUmAp/j/WCqviWQ7wCLgWF4rwGGAt14
3w9cAN4DzgNdnkO91wI97j8A5HMa0+3nAEwB9rmNfXutozPVXK4jYswMyEZg
JvC+29m/C1gO7Aa+hT1/BXu8GfIQvw1cAA7wu0CX2w5zf8AfMK67f5Is8viD
wGrP6fb7D4B7gQz4IcYNhv6mTPre97h78P5VtE+DfAQYiucWyN9j/DUDkmQD
ZHtO7bfj+dtB428JWlMnsB+4De9D0H4r5F/xfgR4hfqBScAC27OQk023AtuA
E8BU4GHgedunxzY/DnwGbPGYZmC859CX7K8Gajy/2pJjL8Y67oYcnE+SHZCn
ge1ALTAdmJbKd+ft/53Au8BZ+3Of+bHX/twDPOc19K6XOham4svhVLykn+nv
BqDdPj4HdFju9jq5j2i+cA2V5skSc55jMu8tM6fJzdreNr+T5+Q//Rzt6xfN
q11eS4vX0+DnetuW5+Az++I3wCKvmWfprDk7y7zt3UOZ+XjAHFpjTh6yPGJ+
PgGMB2YDv7CsBuYDTwPfAV5z35PAKfjpcvoJMp/Kd5X8HlDOdaG9ws9XAPN8
1qnrGfNsgXXVAr80ngI2At/1uPnGm547GfgV8KyxwHydC7TRn44ZT3qtZf4+
19GA9zlAveXrwO8sOfcN2ieVj8jrTW6b63EbvT7uZXNO/Ru8bvYVzBFypcL2
GJtqL/d4PxOsr9H7mWjbTvG+uL+rgvx0NeRayMftH+7lS94P/bPO7W3ewxyj
wW3Pmfs8pzVBMbk6iAtdjgMfAR9a1zjHmvGQ3whq/yZkJd6P4jkPeWUmX1wF
GYCPuW/IVyE/yCmWrM9pPHX3fIFrjHUH/c54scZ2Zt/L5uJR84x6j1lusO61
XuvoIL8MyHTOV/jclwXx4WxUTGQMbM501nnmee7uxJhzeB4TdB64nm77lX6s
+wI/nrKNGDO/FhRjVjnOMA5U5BRrDrhtNVAI4sq1QXFzv/s/917JrZWOV+8Z
XPtvgZPA8Jzi5Qq3se/6THasgxyR07hTqeLjaT+3+8wzp14R5PO3gZei9FwW
NI8x/B3PPeVnxpMtjilbHVe2ORYtdYx7AXg0VaxqcRtzNOPwmVQxe7n7H0sV
m190TFuONbRCPhPVvtP6juJ9NDkTpW+713PM7ezf6tjH9b1ku9DnTcC4VPH9
upxiOedU+wwy3lalik3B9mesZcxlLcJ6oY993OvzUdZDfTu9p2Wel3hOwTq+
D9zntlFuYx9zIWsN+r7gfuZ16iBfyBvmjm6PyxtsO28btnqv79p+7bbLNtt8
me230xxZaR496vZZ1kMdu22vDj+vNidXWf8L9lNbVP54MKpvn/VuMx8W+xtd
5uQ084X59FxULO6I+uYef+tfUXv/d9TY6dY1y9/lPuZGrfsS1ipRsa0sKs+9
bb//KMqfd0VxjbluZE59C70Ojn3e79vN2x225QrbYpfXxXMyF/npHOqxvvju
5UAnnt8IWstjtskW613ote6w3un+Jm3QYtuw/k0x/zz0vBmU/5hzLuTF7aVe
1zI/M0dvdg5gPGWepo/Kc8oZzKesichN5sfh5miR4ztzHPMbc/Qwj+nNezV+
H+rnase2WnO90fmhwX3M+0OA4pzs2ug25pYrg2JOvedy/Gz3k9/fy4nHzG/l
5nip98O8NtncJscHBeWygUF6hniNzIfMqZusg3bo9Bmv8jlnnKPvucY97u8w
F86k/68H293W6jNAX/I75BO/VWdf0YeMLYy1x+2TGfYL4+JJn7kTPgMn7buZ
5i/ryRpz4JTXR9+cNk+4Jub6id4b7TrBtm207Yvtz2K/027kZpn9zW/S9pNs
10qPPWP+l1jvWe+71G0l/tZI66cOrrHZtmR9UudvsK/KfMu7v+Ax5GGl+2iH
4ebaVPcz1g6zD4/bBr17KlhX8Lxaz23NiQOvOjbe5/hY77UUeZ+TvW/GWcbW
e821KeZbwX29bZPNMdZa8829Mr/zeZy5xPVMMl8r3F/ud/KC/GC9TX3Peg3k
WoXHTbB9e+u2ifZbb9283mPmmddfDsonHyF2lWWqiSogazLVQ7WQo4Lqt+sg
p2a6Vz4MWZ+pNm+AvAt9HXgeCzk7073715DjfK8bHzSO46sy3TvqzPPp5jxj
76XUgxi1EbIIa7oMbZ8UMCbTffAJtI/OVBNVZ8oHzAsPQKaZzmgOclCm+ixC
zkSMuxp3z6a8xnH8TyFP5KX/ZF61KOMza5N+QVxkW09efuFZj95jFpSnWB+y
duI9mXVacVAOYC4YE+XfcvswuK7j3bfJXOd3RkbVzBczd+T1zDp6hOtg1nel
zjslkNcE1aLDg+L6Ituuw/cZnokyj+e8H0fxpQJyVl538GbIRbDLDbDn4kw2
oq3KITuj6vwuyIGZckBPVD3NPNAf8uu+k98AuSeqfn0L8sagOvgmyH9GnYlP
IYcGnYVhvOsHnYkhrEOBQVjP65B3RNVF5ZDFUXe3T+H3/0adwX9Afuy6i/VX
l9fZDnkkqi7aC1kSdI8phRxA7oFLmyD/Yz3U9xev+c+Q86Ji8EOQdwfV0lVB
NR+/dRhysf+N8B/JMnObHP9bEK82B8XaWsfbObBvO8a3Qa6J4slq1rmuXX4O
+ceoer8/5q6M4tOCqBqUuWF+FPj8dNR86lkVZWuun/v4k9v5nWrfoejX+6PO
1wys4e/+98J/MD+JurePjcq5vLswJ1eYbyP8/4ec5h2PdwXWoLxvkHf8B8N7
UJvjB+85r1kP70LXm+fke79U54vnjPUm4yLrys2OP6wteC895vmtjrv8xjrH
LMarW6Ni/yVRY9g/GPpvj4rj/SBvicoFx/OqCzif97HbomLqpVHnm3mR9dJa
f+txj/vA7+v8TcbBFVE15s+ibLTBe73Z/9b4/2tE1D6PFXQmXrEejjtqXWut
90O3r3csbnJc4hmo9H2vKOhevcY+GON4cmeU/Q/bLwNdq9Ae/wMyZRjW
            "]], 
           PolygonBox[CompressedData["
1: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
9FuOahbVLv8Dqmo6uQ==
            "]], 
           
           PolygonBox[{{11923, 4409, 11088, 11089, 11090}, {11182, 3608, 
            10871, 10863, 10864}}]}]}, {
         EdgeForm[], 
         RGBColor[0.8613995164835165, 0.8083592197802199, 0.6798428791208793], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNnHm8ltMWx48hU8LpDJ35dIrwvu/zHIXM3MxDotI8j1QyzyFl5iKzQqZo
ksJ1ufe6FCIaNJwGolIyJMTNWHR/X+t3PvyxPut59rOHtfde897vW9P//A7n
bZ+Xlzdgp7y8HYT7lufl9RN8Kzi6aV7eUYLXq/PyDhWeJjhEMFVwsKB106gz
U9+PEZ7ib2U1eXmzVPa3plH+WnX0c6RgfpqXt1DvU8GCOj0vFRyhb/+tjjrT
VL5Yz88JTxa8r+cpYMESPU9Pg5YKjfOs8E3CNwpKa2Lsm2uiDFwuuEUwV+1O
EsyrDtqh9SDBXvp2tWBPwYEumyyorIkxnhNcrufdBA0Fb6v98SqbLfxv4RME
v6QxBvTsX5uXdxrz1PeJpveM6phnG5X/s2msy1OCCYKCmujnePd1nJ//JXhG
UKTvTwsvUV8nCtel8f040wCtk5oG7ZNN/xTvz1Q/M+6bqnts01jXdtVB103q
q6vwk2msz6n6forrLBKcLhitb52ErxeeoW+HN429Yk9Oq469ZL60ZW3bui3l
1FlAv9XBJ/DCPwSPq6/OKrshDdpYjzdcl3U7RZDTOlZp7onwDcIl3uOWeq8R
blUbe82eT/EeXeZ9yhc0FlxbE32wl+zjdTWx3oV+n940vpeZT242P/HM2m1X
G/u1r/DIbPRd6vGfV/kLgmqPQV+M+ZT3tNQ0sye/pzHvFmrbTGUv6vk3le2o
91f0vF9trG3TmugP+tj3UR6H8fh2TU3wK/Nr4v5Zm4lN4724Jnim2O0bu+6T
7gN6Gf+DNPZraxrAM3t4jWVhL68d7UcKrheMdv8jLCvUu87fme8e/naV4ArB
7oIr6aM25pTWBo03uL9RpnG021C3kec+yn3nmw7oWl+cl/eZoGuTvLydakM+
kJttov8l4bzakE/GhhcGZUMm3tT3Z9PgyQXCk9Lgs3nCowRn6fkx4UuzsU4b
09h7dBu8UFsba3+A8Hh966j61wk/Ieii5xvTmP9Ir9exls1XrDvQIejOxxpr
DwrUh3CuSHqkMC/vHUFGz/cK9i+KOo8LmqleA811R8FDRVH2hKC5ypsJzxBM
FzwrmCqoEgxVX7/r+zDhOZrLP1T2kuAhlT1YEGM/p/dpgqaCO9XvHYK9BfsJ
7hbsK5ir9vMELfXcWnCwYGFh4IME70O3+q9VH5uF3/IcoJ928wWt9Px39/+L
YB/BTJW38FhvFkb9MYK7iqI8FTwoSAT3mB7q7qNxXhS8IGici3l/rXHLhScL
JgmeFpQInhGcq76HC+oE+zaOdWjhtWKdqt1uCvugNSkVnui2+3icvV1G3xnV
ma3xUj1/n43yMn/b12vMGKz7toIYv6ZxrDXr/KraZIS/ygYd//B8agtiLw4Q
PkdttgoPKYz9rDStaUHQTd0d9e0+4fsFzc0DzTx3aN9P5RWe12T3O810sEez
vU/7eL1Zd2jN83qVWldNsR1Bt2BXJtq+ILvvVYd9OLnpn7qG7yc1Dds0x7YR
G3mC+f8w69m3qkMukI93qqP+CW77bnX0ia6bYfuyLI2y5WnYh5dsP66ynkDf
/M329CWPMcP6+HjrBnTEljRoXpGGfD9lPd3M+hBd3ND66grrW+R9hm0V34/2
8zEe62XP4xXL+r/8vId1I3oQGXhE8LDgY+msswXnCJrr/bXCkDvWfTvBefCM
3l8VblYU79sLzjfsABbvLyoMOV8suDgX9Ubmgtfp61o97yadMV59NBR+ozBk
elZhyPvef5HFWZbHRta9zP9lr2cb2/kZXtcjbeue93rwjD/3uca4XHCF4GvB
tYJvBEM1zyGCn4rDX5xmXXplLuY5WnhPfXtSz08JDjN+0joEHTRQ0MB6Hn1/
i200PtYRVdJDggWCy9J47iV8OT6lnnsbU35kVfDlieY7yo8SLBIc7j7mC1oL
3hO8K5gnOMzlcwWHuow2RwsWu5z6hwgG4McKL60K3wUf5mT8LXi+OsZFJtq4
bL59JvwleP945MVwYnXI2an2r/Ch/lsVz6e633n2ZRfYV6J8BL6m6vVPwwdb
6PYnW77o87Wq+EY5tEJzm6rw32fZh3/Z+3+s9/oo8/8b9udn2ZcjJpj5l7kd
63kwFuuNv/mWfc42rjPbccAL5ql3vD7UP6Yq6Gdt8YvxefEFiA3OFLRnfNNM
vR5p7F3PNPzrM+1jn27/k3kSd7zuMY9An6h+F2y44Dg9H5yGLzyrKvo43e1e
55t5YY739VjBQWnIxXTrtTmugy97gfj9fMHuieyKYIOevxCfn6LnASXyK/S+
XvhTQWeVNRUsU9nHqvO3XOh4dPa7aejVd4Sbq84HqrO38LGCTmq7i/DwbPj3
vYUfMU0PCw/Lhv8/RLiN6p2l+jsJl+TClhwtXO6xGLOboIHk7MJc6JHzrG/e
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
6nm8Pp/9f6UB1f4=
            "]], 
           PolygonBox[CompressedData["
1:eJwlmHm8T2Uexw9RE4O4cX9cd6sov7NcZEvNNC22S8p+bRXVqHAJKWkTlZCa
limyXLt2hZTsNC1cuxqSyFZSSqmxtLw/8/nj/fq9f+c85znP+n2e5+T3HdSx
uGwQBB3KBEE5fi8Lg2BlThCsgGb4e1EQ9MgMgp5wGl+dBMGcvCCYDbdwvwFc
StqGUB//G2mmZATBVOiBVyd9XnYQ5ENZ/A+u9SKv3lAmDoLBsD8VBF9BZ/wp
2FMzCL6AeXgh6X8gr17nB0FHfAl0z3SZTuKd4Rfun4CGeCXeUcK7mlKeDLwd
ZWqRGwTXQlv8FHnO5v4sOIlnFgTB0PwgGALjuf955LqqjL/hX8Cn+GeQT/rR
6SCoXS0IsuAR/O/cT3h3AWThVUjzDWm/hjQ+KHbd9kEnvCvvWEFZlkNnvCVc
jV8FLfB5lLkU3wjz8RjWUZe1UAN/BTZxbzOU4r31n3ub4R68EJbjhdzviI+B
rng3mIHXhneo+xJogH9DmSrjleBr/DqutSJtS2iIN4Krye8a6IQ31328NVye
uE/UNz2hfeQ+Vd/eCGfhxYnr9gEMwy+hvd9l7LwH5fFV6r8a9B/sw88jTWPy
bgRV8O/IY0LtIHgSzuAP6Z3k1Qmm4ZVjt/VhqISfhvG1/cw+/FwYwL3+sJr8
z4ntd8J+/t9Pm68jr7UwhPwGce0s6lIOuuGDubaGe6thEH6Ya4N4thgqkldr
2ETfbobb8AdIczl1aw5T8L6wjbpsh/uVF++bVZUxCDPwr8nvSKbHTMjzk/l/
pjrloz1exm+IPLZ/hgS/HF7K8BwrwgdAN8q6Ah7Ax0A+z4+HcRq7aefVH+bx
fw/vnMnYnQFl8D3c/4m8jsMafBWc5NlT8AzpJ/B/OmmnwTh8bOS8Jwi8GYQ8
G0F15R95rvwXLqA+i3jHbJ6dBfvwOlzbxb3PoS6+m/Q7Mj3H8tSXvGN7pq/l
8r8B9KNt/wnt8B9owyrM1cqwFa/K87m8OwcOkf8M/j9MXR+CpXgaHs9wjFCs
uIg8dma6DCpLY67V414ajvD8CXibsi6Emtx7EAbStsUwFB8CZ+PnQG+8OPLY
7wG7KPsnsBxfBpvV9pHvdYdF/G/C/0m8azJ0wa+MHCunKcbhJ6lTC8ZOS9iG
/ztyX5yGFyP3sfpa79hKfk0jl1198CNlX0udDtRibMMa/AruxxmOUSl8YuSx
MABe1fhQTMoKgoOwC59LnlmkrQWz8RVpj40fYVnafa6+1xh5Dt+Qdt2K4CP8
3bTTKma/hl/MHH+HuiyBsnjzyGNFZaqh2E6ZY9o6gQ/werHn8iFYw/1Dkefa
QKjAvVOKvxku4/f4MZ5ZwLNvwfmkfZb/dzE2BsO/NL/gDe69CdW4Pw32KtbA
Jq1VkdtiILyOv036XNLmQAWNBd4xjnc9AQs0V0K/S2MkU33H/+nM5RJYjp+n
MYjPhFX4Z6Q5QN4HYadiXeixtQhqqS/hZ+79BF/iCxVf5LAef4Z3llTzHJyI
n0l77urac/g5pMnOcJvsJe+SyHX7Crbgu9POS3Uu5X9Z0mRX8xo2hns7uLa/
hsuosj4No2p4Dr2v9iFNTY0deBr/LnRbqs0zuL+Y//l4HlTBz6aPOjNXu8DV
+PTQbaGYV4JPC91WaqOV+GG4hGfrwfvKO3JfFMNbeMXIc1t13M/9crFji+bw
hfjMtMeqyjgNXxc6ts5RH+Bj045dU2EUXp5nOqVcxqu0Vod+dxqW4Xdy7WP2
Hp/ADLx+7NhzG7TFW0A3vAhaxkbeHVrhF2s+pZzmWvwY7+yY8juv5P9dmp8p
73m64H+J3VZ65hr8KGUIKUsEq/HC0HuXa6CNxnbitUprUhE+FTrkek18ED8f
cljLc+EP8nuDZ1LkNQfewV+EibTNBfxfgu8O3TaKoYqlg/jfhLnaGAaGTqO0
6uNJ+C/kWSHbeyjtpbTGa61XzM7Gf4cmOV7Dq1KWb/lfJdt7jCPa28Xea/wV
Dqt8ac+tsfAKPpdrG2n7dsSv9/Fl2pPg7WE5vjD0WNMcrRz6mu5dDytix0jF
Sq2hWkt3c+0+9gIj4HN8FfQh7c3wKv597L3FRDiGL448dzQntilWJd57rYEQ
7w4b8FLogfeCjTnegw3H74Ut+Fa4Gb+CMq7K8Z66OX4D7/iSvt4DA/CqcHvK
a9x1eDrxu1ZDPfylxHuJy2AyvjN2Xe6F6uTXOPHe7FrojA/TfNDaBSPxN0PH
Ms35s/HfYtf1KfgKzwndFxUhGz8UO2/1mfpuYuy9+G54Mvac1NxUjFKsasi1
O1KuQ3t8u8ZzltcUrS3PxG7rm2Al/kLovbZi9POKHawJd+PDIBd/gzS3kLYv
rMZ/o04Lqfsi+B1PuHYr77oF2mjshR6rjaA/fkdovxT64Ud5ZiZelfz/h59V
4LVIe9By+GjSVOReBRil8RQ5Fh+HXxX7CnxvONTBJ5NmCvNnKrwbeg+jvYzm
+D8Um3hHG/IuhJ34bJiHz4WP8RegGd4U7sOPh177CuBD/HH1R77L9Cg+lzTz
85zHenxl5L2y1oy9kWOOYk+p2kRjmWcq5TuPJ/CH0j6raEw8gE9KPJZUhhfx
vVwryvSZ6tfIc0hzaSOs1/xIvNdSnkfwOlrfsn3GugivHXrsKCZkaf3jmW8z
vaeN8JK057b2YPMVn7l2sJb3KKX4K7HHxo3wMj4UejLWesAQfCy0xT+C6drP
a/9BXuO154y8pmptVR1O6PylPQ73noRGeECfLc7zHqQMPjjy3r689mT4yMh7
Ne2ZR2g/E7vuGsM7Yo8ZjZ3z4Bf83NBl0RpRorpE3pvojHEA78C1vSnP8YGK
bzyzldi8DTbhTRLP1RbQNPGY0tjSHLgQ/zb0WqQ1YAV+s+IHz66EXvjrseeG
Ythr6p/Qa4X2UGvxZxOfLXUG0VnkzcTv3g4L8PKkaUXZW8MY1S/2WXgm/IqH
lCGbsuRAhE/Rml3Ve5yl2l8mnlsakxqb10PrXJ8Z2yc+c+rs2QY6KDYqHua6
DV7HR0OXXJ9JS/C7IveF9tQ98VcTn231zGuKf6HnmsrwHh4kXtv0TaEM/p+0
9546Ay1N+4yps6bOdEPx7Yn30q1gB94jdFvqDF6E3504liuG98RvTHyWVgy/
Cc+Cxdk+M9fHb0hcN9X5UpU/9LeQWTAS75K4b1vq+wl+MTTI8RleZ/kRodMq
Jt2jvU/iWK81oi5+InZfaI7V5f6HiWOHvrl8gGcXOFbqm0UWPiTtWK81fgS+
IfG3A30jeBk/lbjureFTvB7P1M53H6fxnxOPbZ2pjuO38/6tKY+R0fjAxGdf
jcE+lKdp6G9D+sbQBH8+cSzTnmGo9vIFHju5UA3vRx5bUs5TeT8Gbci7EB7H
Z8MGvBTm6Gwee++1HmbGvqZ72hNob1DA+xZlu09q4XULvDZojv/B/6e1vtb0
N6T5+CWazymf0W/VXi72WV1lUtmm80znXI/JR/B2ib996JtRW/zutGOr8uir
tS723FEdHo29p9LeSmfcA/ijib+1FMFjmg+xv/0oJhSr/LH3klrDCvGHE3/L
UBlGKTZHPhvqjN8V75N4L6FvCCNVHp7pzbt7wfjYbai2VIxUrMwkzdu0zUJI
NN8j790VExUb69NeefRNPjTA3wp9Ntc3gQX4ZYnHrr7xdMW/JM/TxMIzcFR1
D70X1TerVlq7CtzXyrMA/yzxWNMaeDrxNzh9i9OesBp+NO3YrTPVIbxS5Fit
mF4/8hlUZ1Ht2bR3m6A1vqbrPBx/IvbY0JiZpfYM/e1RcyzSXjdx3TVGauKV
Qu8ltYdcSvphsdtOa8w4vHLib03//4aptJG/teibyAHK9yeNkFj3
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.8281201831501831, 0.6603302747252747, 0.5406902368742369], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
PGU4RPC011pHr7drEpEnkwj6corpzZumXaeY/kEHT3e+E01DFoBbgsPcpm9N
e0433r3r+g51upGqo0JQmQgZHbp7EGOhb9sqrhYZpzboMuvgOr3XJGLdg8+d
jdMd3IdXXfczruOB8iiLchb42+EGxuhZj8Ghblda6e4pj7Ea5XYR96DLalMe
cXc7LXPTnvkRXKv3bCLayBhWJyIOPtHJ47UDdArengj6faq/Pe/5OsplHVQe
c7VHIuaT9XKP7RPYKR6xnxJ6yMJU6EPII/B29vPxo8J3ixCfV/YH+nuPoL99
A36pCr8QZOOfqsKv54Kq8H392TIz35Hfe/gbet5Y69R9vGf/i+UKZApsOmep
jteT4Xu9yuloB35gW1jveDgR+4LsGaLvj/Z+/9xCyK/PFWIfljSPKG1PtwsZ
lGf8WvC5Q8cdZL0WH5i/BEOrwucJ2RQZFXn5cttk8B/+w/nwJ8APe0pV+Dnc
aj8C9jvY62BPkTzkXe886M2UgQ9dE+tc6EqjrC/t6f1h9onxS/jVY41NAb0a
P+wlltWR+yj/T7frSfQHwcV1oedPrAr5DP2OPaoqy/fsGSPvH2e7MXoCtijk
dWyiv+j9FMWvToRe1NPyZSPL85tbB2A/CLse+zIJ60+nJiP/r4nYx8FHAT2s
n2VYbJzYHNFD2KvAXokMju3xfusT2JLZC+prfWEr6yvsW622zIs8i55W5vqx
MVLfFZaR0bGQqbGJ4O/S3P0b5D6y78reIb6GPyeirycnY+9ogMunnhI/I2tj
N73YY4neV+n+D03/q4tS/3rXtbnHi/189pCvc8g+MXrx7/6OToV9BR0BHQD/
HWyr7AWD8xm3lz60cJ/u8x4MY8b+3qJ02Nl/UzkDquJsBXoyOgPr7u+q8NfC
X+wm4wY4coXxHV2IvIMzogFVsS/5YCL2y8FvzndUZiIvfj34Qk0wfk00jpe4
LOjHGusMP7n+H9035qW7aUsfr/3HkMHYO4A+FaI/91jv5js0Ar0bmgI9wReI
8yGTHWa8BteyRjPRj6zX4y2GKV6r+CpWZeIb/o+chcnbtsjzdo5v4ffBXl9/
mAbhY7rKfaz3OWW8LsvEWj1A6/ZA+2YlPUbYwb5Ixp4t9POnZPgz4CMCLYQm
4u/V0/QJfQ+b2I2Ox0fkC9PflMuk7HexM1vexgcR/8t2KdNo59ngOYGuLRZd
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
Nuuc/j/pkH5jT+5svgH/IM3zXrMZ4wJjCW5+bFxmDp4z3YCu9XD/DisPWkFb
Fvr9UOP0R8ZxfD2Yt3q6QbseLA95rXd54Phir8VFHg/WEGtiecugvZyZfqws
8OJR1mrLoMN71QXdYd+SvV/wblfjHrhEHmhbidL9pbBBXXxHFoempDmPDY6r
vMq6oB9t62IMnzL9O8Lj/IogVRfraV+noT9PKn5BWeAreP6M38F76OUbgmPL
w76OX0elx5h69ywPnCVk3UJrvjLtYc+AvQB8NfDpwPcDvw7GhnRdPF7QFOgJ
uM7aYo8MYB3hgwL9fsb0o53XVXuvywVuM/2GXiaMP/TpKbcd/DuOeW8Z49va
651xhf6TlnHgeXf3a67xpV6H+NRrFJoIrp9h3MeGhS1rUT5C+D02Iexe2Dzg
+9i9kAl4RyZg3453bGXkg+9jb1lqXg/A97G9fOPv2LvQu5/Phz2LfD39bYnz
YvslPTYebKS9/UwcNux6mzfhhX6mfee73fA25AFkne7+Rpux9SCrsd6QFeDp
4D1x2IPwT/xFcHZt2IrwK+HeI/4pga0Km9UK52fd8ozN4Cj3Z7XLwMbUpTbK
5b3H/xtXQmyHZ9XG99VuH2N5nscA3+7vXRf1XOp44rCXD3FbyYsdFxsstljs
ubxjR8Yew94Rsje6C7I3MjjyNrI28cjy7E0Mz8d+EvI8usU6x/HcwOnI19Rl
XeO43xxPPnQsdAHkOGS6DR4fxqa1dRbKbOj0mzkP5bFvhs4yynGbuw7KYX8P
uyJ2+2VOh86DroPdC1voS47jW/1+6RjHEaL3oP9s4/Ea6/it/G2sw6393NC6
Un3+Bh7XUo8tvgfs6WGzHOe4snzsz4533NXuA3IyZyMm5GMvmu8Jv6dcFt/Z
g3rZffnBc90vH/sp3zuufz7GgOf382ELfC8f9ips75zLPDMfsj3fwdPXbCf7
3vyinhcSYuta4XSkgZcSBz/F1ofeWq+/YuujLmyUlP+h6yCus0Psj6RFr+Jc
Gz782OCw+2G3Q/ZErkK/edtlY5/D7gieQBvq+Xp38zhkeNrdx2t6hflVL/Ms
4tABuAPkQq9peBry0lrLTGv8juyE3InMiByKPoA+dpnLX2m5D1kUOZQ0lEE6
dIZ6+YM2Ist+Y5mEttDOZc6PzIgMCyDDUl5D6xcl7gftpS/sN6B7Yic9Ox+6
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

            "]], 
           PolygonBox[CompressedData["
1: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
2s4np2+hfOiE7wh0d7E7yxn8fzxSt5I=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.7275073492063492, 0.4460844444444444, 0.4070504603174603], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
4yTT0O+B+yHFYV9HeFi17IQ/7INoW5da0cvYnNp7R4S70/+I3y2RnfB2K9kK
08xD4PHX+P7oSPslwvYl4jfofqrHswv1w09t1aZPAgfto56rI+xqniTvONsm
+1YpjvLzJYrDjulYpTqOirp+rhKNdHYdb8XYPhDwYMABtDXqaxz82yeeH4/n
ogj3T4Sr/SI8MtE86YJENjb29UnR3/sS2bpzIrw40ZzjkggvTWSbXkZ5iey/
p7FtPWe7MMKHE/H5cREenmiudV6EDyXi/VERXmVbGpu6SZFs6n1tM15tG7Oz
7Uve741vRkc4O5FOa2wd1t+6q6nlykEBu9t+H2mbnrnBZba3O7leyqK/zFOY
V2BvYhvvUaTvKWe3IuFj1yI9X2g74iLLj0sch72P3b8POqBIaef7HTv/j7mF
5x18+zfPG/8e4ZoIXww4x20bbTyMS6TL/i9R+gsBZ9OnKtlbbSIchR5y/rUB
L1VqHtLRbWpcpOeRfm9UpDbRni7uO/jt6f63LNLci768Y+Db9QE7FKkMvr+w
SPrtXOOUPq4z7XQ1vg6qlZxD12Ivb7Wddne8jw/oXisd2KNW791qlfeugJ7x
fG8byQne+eZg50d3NqQRtm0jmxg7fmi14g5x3jvNK/DRtZ7/YSN2tOzoEGG9
7ck6p7WzDkKf9K2WLumUSL7smyjfjdZV7a1j0C9TzIPweN62OnqFedJVpvPZ
1ik9rXsPMm9j02GjQddFRaLBHsYlY8RYjfI4jza+9/E4XebxvNw6FTsC3sMu
pcxeti0ot7vLgq92LtK4M+bkbV6kePiPOdI+2Gu2s7e4v7e7z6RdGjKifbT9
lpxwfIfzY1u3Djgh4J289N26COeGHJ+DngloC+1WiYZ72JbBNjg+J5/ReTnZ
iNhY2IydbR9iJ14VZT0a4d8jvC5gQjxfG+GskI/7hs04M8Ix8f5YxP8jwr8G
PBzPZ0S4f4nSZwRMK5G9NL1Edtoc22rALNtsPHcq1TvfHeC01mnox7AFqlPR
372my+qAmoC3o+8L95INRtmrA/qVaq6D3quMPFUBi6GDEtlpPGOjHUR7Iu/8
EtnjlaZ16pnhdnQs1TNtx/7jm/meay1jPhXwbECfUtnSzK2eq5QN8kWR+oqN
ONf5sLl7Rd4+/p45bM9SPT/r96W2XZsXak7CHGmOy9g/8lYGjqcEtA3Yp1T4
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
Z87kH+jzusgi1n6R/5tqZKuBr6k+18nYXZWKj86KcHDAxEjvl8puw2ZcZnuO
b7HvkHfYdsg/9mm3Nf0cZ5mJ7GQtsMLP6AlssPv9HeV8UaPvTvS3bSyXa1K9
Q7ecA6k0DTCm5H/KcW091ow5ti12LfO1KsdzrgQ7l7neVstpnrGHuaOVcygN
5/qrXcdI8zL2xwi3gbZgH0Er+5gGsB0463teKrlxYSo63GRabJoKN6Wp5FGF
dQt2NrIFOce8mDtpH8hKJiADptZoPnOXeex44xQc7ue5NPQB7igfXPZOZSv0
j/CenPpZlqps8nPvwbEeF8riXDj0Aa1MzohWh1pfk4/7HV6gnQEvZvQOHXHG
mzI58w3dkb4oI1tkictZ6nCyn6+xDO2Zqq1DTD+rMrJ5sH361OquIu6MeiTa
fjq2T8Bl0ZeJ+PJS0W5P73mY6XPH3DexSyrZ0iTVmWTOJhPPHRO8b8mKb7CB
JtToTgzOI3MumWfK4Rzzzqlkzo+J5AvjsHuq8Sq1HgEXzBmZO3KPJnckPhmw
R6px34sxz0omUT99OCPgsRrNm5YYJ8gO/CzIFeqgrl8S2dcN+0Bvchmctx5g
HVhhmT/Ec96JtbqflLsUWdtnrwl3H443/aIXVvquS+LBLT4W1rofcBxpW6MN
A6OsryL8Gjsvnpu1lx5hDoiNjQ2NTwybmr0E61wfd2/e73KQzZ9YPn9uuYJ8
mR/l9Q5YUCsfDuUwdwQ/692uZa7nmYA57LGo1b14M9wXeHK3VHer/pyoD7SB
tjzhOwrQJ5yzx+7jrpCPuWMQnk9kEz9qfcDZGc7NvFQsG5g07GD8wqyx4Cd+
weOMr5/1H9aBjq5ReazxHF+jNSHWFFhbwDbALkDHf+i5APqLsx3HOd+9vteP
u/mq2ule2YnGC/jp4z7f4/v75vj9ENt23A94F3c1mc4+SeW7Zp2I9aIexhv2
4PMZzRv+4E/T/7u28WlbL+MBHBxRIxkEb9+Rak6O7sOfB/6ZB0BL2AYLPN+B
xr/ISg+PNz0P9ngTtymre104e864oPvudZkzU43PilRtpW93txEe2d8CXte4
XbSPtS7WvFg/3itkQot4/iLRvAXbjDH8KBXNvWmcsEdgJ8tUaLLUvLvYfEgf
mLuBh48SjdOWRDQFj+CPbGefYz4V7jaYl5+q1d2202p1Xxr3mDXcbcYz95g9
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
M4cnp5Iz/NuPMfh/7y14qA==
            "]], 
           PolygonBox[CompressedData["
1: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
amMcZb8dpuu3I/tNKBv/Hzzne88=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[
         0.5759700549450548, 0.24624308791208782`, 0.2825460256410256], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNnHe8FbUSxy+9K6LSUTxn7z3n0DYXsQAiXRGwoNieqPTem3SUIigg1YK9
oz6xoYj0XhQQRLA3rKiIhSaovPk6v/Ph/TGfbHazyWQymUxmJjmn84Cr+xfM
ycnZXzwnp5ClBZM5OQUMnkvk5DTJ5ORsSufkbDb4KeTkrLT0R0s/srSzQReD
bgbdDT416GT/dTQ4Yf++Y/m3DdobXJvx758Z9DD4XM+f6T/+/zDt9bazsh8o
f1XG2waHdgYfq0wX1XFdxutob+knqqtr2p8/VtpN7/9jeK0yWGnQy/K9Db6k
bct3MyhssNWgh0FPgzIGpxgMMLhaNACHLpbvLBp1NSik/3lfUO/es3I3GXQw
KGX5vgYlDYoZFKf9pNNqg+jVW+9LGAy0fwYZfG/Q16CfwdcGewxuNehosMzK
XW+wHNwyThP620l0g35fGFyfcToxFs0zPh5AM3vekna4Ru+2Qk+DbSpPvoWV
u1bPvNtpsANaGrxrcKPyQKuMv7vFYLfB+4JdBjcbXGrft+u/thl//75w3aN+
XZ7xd7sFt+rbVuHV0r5fkvHn7QKer9dY0udeotk3ottNVn6vnr8Fl8zJb3tF
Y2jUU//zrUPGv5cWH/RPOr98pXa+1PONVu4G9Wm7cL0i47h/oXI3iJ+vzPj3
/2T8372qo4+eGbfO4u/3RLc2qv9GtbFF/AW/rczNyRlnMN5gtcHtBncYLDV4
y2CUwfAoJ+c2g3cj/zbBYI3BRINJBusMlhi8aTBCdVHPKoPlBn8YLDOYZjDd
4B2Du5V/26C8wQaru4Kla1XvOtU92WC9QRWDLVbmbYPfVR/1nmNy5JClmbyc
nN9y/dtZ9m6GpVvV3m6DPQZlrExhg0J5/u19g3v1fZfBewZzVfY+g/sN5qkc
3+vbf0UMihrMtvxOgx0G2w1mGrxrcI/Btlxv/z7VTRtjRAvw7m992GSw0WBz
5P2qbO//Mahrdefned1zhFOWFtBhi0GOfd+s57tEy41pl2+Nbaw3pD1/sT2v
tnSNQX17vtBgVdrf3Waw32B42uXSFsmmewxmGhSxso0M1qe9vnVpf77I3g21
9EeDIQZ/m4y+1fjoFsnEs6wvKywtYlBUcrBBxnFYa7DE8u0N3jJomPF31H3c
6rnZ3nUwWKf6qHe1QfXIZe5U6+cmgyniv9Xi1W4pk78Gr6ecJ6DzQZXbaHCn
aHhM/HVceeh5rWQS60tn+/8Vg9eMf45bfpLB5LTL5sKaLwUlq7tKviODtxlc
kPF1DfqSnm/5FWmX7wUl19cmvY/0DRl4WcZlXlOtT1s0Zzto3s42yDWYYzBX
aZ7BDI1TYftvmqVnG0w3uMvgboMcez/P0rTBvaqHf4vb+1ka36RBpG+zJK/6
S7aRL5rxclMNqqpuyhZTHVMM7jSoLFwSqvcc5Weoru8Mbsn4/ydUXxWl1NFH
axprW+F8oxvyLPjauMlgo9a4jVrnClqZ8xgTS8+w/JkGw5NeT2+tfTXs+/0G
9xmk0k6LuaIN9CqQcfygWXXhAT7/GJylMtmylCmY8Tx9qKa+Fcr4N/rHGnur
5XsZ/GbPvS3ta3DQnvtl/HvHjJdh3nSxtLPBbQbDM97uXwbDmFsGf9rzYEsH
Zfy/HyzfKeNrArL/Sq0N5FnrkPnoO+g5rcRT8FZLrXGsddR3jDmbcR5jTWit
f67U2tJG62lb1dtW6yg48d9x4fh32vEGv4EGRy3fzdKuBj+nXa50z/g7+vpT
2r/1NOhhcIBxzzidfrfnP9JOL94dtucBlvbP+Hj2kk5Dfb+k/X9oBz32WX5E
xvl9pMFYgzEZnxe/pn08aJPxG20wKuN1H0k73rTB+BwSb47QmPQSL203OM2g
nMEQzfdiwmmClZ+Y9rE6M+35O9KO/3iD29NOb8pMEvBcQeX4fobKnq78UX2b
ICivfwZoLjE/0UkK6Lli2uXTJJXhXcG0y/YRaadXaYORyudGPofyItdF+iVd
Nzmi9ml7nMFYg9MMTjUYYzA67X3vIZl+UGUoe6rlyxoMSrquCm/tFPAMj30n
/MHxG/Whv/6n/4fEA2NU7wj1oZRBGYNR6gPfy6oMz78LtwP6Z6TylD8l7Tww
UvkdWq+L57lu/J3wyRE+6G9/mdypa+nflj5kaWxwxJ7fl/4+MOn0rpR22Qcg
O5gPtQ0eNJjPuNs/+ZYeD/6uTtrrK2//3yaZxfp8VdrX7ByTZfUY13zfRxQR
rZFfyO9M2uVZTYMH1AZpLYOq+d4G9Q9Ou85fJO1r8z69K6o8z4XS3v8BSgvr
n4rW3kiDCkmnBfrkiZSn6JforX+nPO0leu1VuYGiD/sc5v+wtOsVJZSSnyx6
Ied+UJuD9b2kxnuP+Ghw0vEtlnZd4yelwwQ8F0+7Lou8Y09wq/Qm9Cf0os3S
jY4Zrx83aCu9FX2hvkFjgya5rlM0MvjZylwsPW20wbnSuS6SDjpZ5dAl/rCy
LS1tket1/2Vwuer8JfJ62xj8GXn7Bwx+NWhq7y41OGTPhw2a5fo7vk3R/+Bz
xPJHDS7T92bS8cC7gfpxgcF3VuZCtfOE2vrNoLn++VP1PM68Vx/A//fIcW8u
/XaX9F5waiUcL5VOe4n0qRXSqcDhh8jxWCp9Fp27pehyUHS8U/RiHzBe+LZQ
238IR3Alz/5jpdroqHV+fdJpOE+4/WlwVHpfnOc63F+C49LlTkg3PjfP9xjo
+Oj66NXwxt+WFszzPcc70p95LmDvzrS5utieqwTXzdHRBxj0MFiN/hm5Lkld
1NNf+ns/g9Ptn9ftXSVLzzB4w54rW9rTvq3R/+wNkEHFrK2Ufatpae3gOP8j
vfagaMB+ZoP6tl59XyPddbXocMSgevB/8oLvOdh7bNe/G4UnPNA61/ngqP6n
rtp5Xm9WJz6mdk4Il80ak0PCqXjw/V3V4OPOmLPfYo93WGVXCy/eVart/f4l
dr56NHK+PiQeedggsnJJg/fseZdBbq6/+8Sea1n6saXfi8fh9dqWDjcYxvhZ
fqtBNXs+K9eftxn8Hfs+8ndLq+b6fpGyGzRefPsq9vHcH3s71DfU4Oxcr2O7
9mcVc0/u0Srl+rtvYx/TA7HvW9er7jr2/JmlMeNocvJQyu0on9u7LwyCvf80
8jKUPc/ga3v+xiDFGBrsjjwdAH8ZfGD5jKXpXO87dPlU/3xrcL69qynch+S6
zKpL/+xbPbUxVrRj/vHPPoMfDRrqez3hwb979R99YB9/G7wZOx32WVo912mD
HWCnQQKeluxDvh6XzGJv3Ep8cET8sUG8jAxiT44sYI+MjEbG3a1/jqgOePYy
8e2sXJdFyKRHJDsPiZ/4hzyy4pjk/FF9e0yy/ynJaOYG85D9OzL6gGQy+PP9
CuHUUnOpjfBgDkGrb0Rz+g7f0v/eBufo+UN7/5FBjVynEe+ri0YJlTscO88e
ib0/yNdDKtsr9ySNq4sfWRP2R76uMA+Qv3eI/6kHHoe3RmrM4N+zNSei/5tb
5KtpnmyWbBtosM6gT+R8fK7N7U5Gm0aa67epztfEX4tyfR7wf2XhwPwaHLlM
wFY0WvOJefqG+gwtoAH1Lda3kZYfFTl+zPF7DGZqrkwx+FI8NiLyshMNJon/
e6leaD/a8mMM3lcZ5siEyOcF48B4vCX6gN8pwefX8dj7M0TzZ6yVG2ewJ/L+
Dta3YrL3wDfYhbAJfaAxGq658KrlB+mfHXqHvez2yHlifOSy7A7hViR4H0oE
H4+hkl071F/6DT671TfkADJgj+i1UzRhnu/V3J2tuT3LYKq+QUPWVuQ3cgDZ
hzxjPi/TWKHv3K167hJ8pTpYG7HRsVZiw8IONk/zd6veY6NifcZONUC8hZzc
qrnEuvSpxoXxYR5v1/xiramr9RndfLbqwzbDms6axLgiE3PVf+iAvJyq/sEr
OzSvkRNFZOOj3S9UJj/XbXH04XI9X6GxnBO5PIR+yMkZ4kXGerfKIjen69tH
Gkv4a4r49U6N2w6N+4eSAchueHZy5HJ/t8Z1j/75XN/e1zjzvXSet4utkudS
eU53+LChQYM8l3fIQdZU1tGHDBpHvq4+pHdzI9dpfzJoovK8vzdyWYJMeUx1
NDN4IHJ97Fel6I88o5/NN3gwcjmOPK9hOJSQjZJxb6Tv81Un+uZRtdlUbfCu
ReR6KvpWjvR06qAu9mWf25zsYt+/sfRng5WMX+zyqW/kMqpb5O9XRK57wc+s
v99ZubXgH/v7DfoH+TQochmFPhTyXK8qF3z+V5QOhr4DTp/Z/52t7NeW9o68
zl4GpwWXCxUs7S4cwIVndMRVyoNX18j/BW/k6yzx50zRD90PGtbJcx4/LhpA
y5Iac1L08s6WnmfQJc91V+YcOm0Bva8nnuhp0EPj0sjgojy3o7POs495UrRv
aXBKnsuwUzVXLjS4QO3vEg6U4Xsz6dqx8P1DPHZQ9cCne4R/SbVdQDp2QfFu
KfWFti+JHBfocFS0ODu43TY3OI9hy0fvRB+tleflZmueIuOw76N/RsHLHhZP
Pi7+a642aIu1n/lUWrgUlQ0fGTRf/A2/Q4NuogO0OUX96qj9RCfxKPMQeYOM
RNdCvmDjwN6GzaOd/Gj407abDni7wbsG/035fvgFS29Kuj0bXyK260UGXVNu
f+5i8KrBruA+tfcsHW/lxhlUM/gkuB/ne70/y+B2g48NPjIYZnCufd+dcpsC
9vObZFf/Oritf2dwfRLdF7mMTeJT6jZ4P7gt/JvgPrjfU+4/u9q+vWmw2OAN
2dt7GEw2uMTgTvC2f16y9Jng73n3vsFUgz0GUwS8v1QpeXBtqbomGUwwaG4w
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

            "]], 
           PolygonBox[CompressedData["
1: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
fyGsRBM=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.450385, 0.157961, 0.217975], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJw1UktWwkAQHMEFGJBAQgioC3dhl76GS4/gAfQICioYgRhxqSjIIfGv1a/L
Rb2ame7p6arpw5Oz49OSc+4IKAOdvnOrxLkYnAE3gA+MgGugDuwCY555wBVw
CdwCLWDCeIP3m4xlzK2x1pS5AWuOWH8O9IAHoA1EQM48rf+E/kLeD5gz69tZ
xP0LcrbFuVdwWexctd0x7zmxvAZiO/o++C212htw0TcP7rV/MZ0+cz3q7Ypp
jMF1oKrawBXwBXDA9YB7jev9Idd6XmFfBXvriHkRiXnl0a8ZdeXMy6k1ZGxK
v8f0csA3hvS6Rm8DsXULvEjMP9U8obcB+9Z+z1UjsE7sP+b0o0v9Q+pZJqYh
Ykw9X3OGdJZ0H/FPNPcxsZnYF/OrSh829F/jH6n19w5ui/UegvfE5rEH/kmt
5jf4K7U//UztjRV7avOvNa/LP9V+Cvoeczab1K+s7+t6wTlTT3zGMvrsc7ad
2Hu/7L3F+yHv69slsX62xPyL6dO/p7r+A0nzbZI=
            "]], 
           
           PolygonBox[{{12513, 10403, 10402, 12548}, {12545, 10401, 10400, 
            12544}, {12570, 10512, 10511, 12569}, {12541, 10399, 10398, 
            12540}, {12564, 10509, 10508, 12563}, {12558, 10506, 10505, 
            12557}, {12566, 10510, 10509, 12565}, {12537, 10397, 10396, 
            12536}, {12543, 10400, 10399, 12542}, {12560, 10507, 10506, 
            12559}, {12572, 10513, 10512, 12571}, {12562, 10508, 10507, 
            12561}, {12568, 10511, 10510, 12567}, {12547, 10402, 10401, 
            12546}, {12539, 10398, 10397, 12538}}]}]}}, {{}, 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{12513, 12548, 12547, 12546, 12545, 12544, 12543, 12542, 
            12541, 12540, 12539, 12538, 12537, 12536, 12535, 10395, 12572, 
            12571, 12570, 12569, 12568, 12567, 12566, 12565, 12564, 12563, 
            12562, 12561, 12560, 12559, 12558, 12557, 12556, 10504, 12573, 
            10623}]}, "5000"], Annotation[#, 5000, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0FW0VUUAgOEBCSkBpUHh3gso3S0CSjdXuruku5QW6VJAQcCWhkU3PNAs
ULqkU+lu/M7Dd/7Za/bE2VGtu8d2ixNCyOKnSb4QGtOIN1EhjNQRDGcYQ/mK
L2nIEKowmAYMoj4DqccA6tKPz+lLHXpRm57UojuV6UZNatCF6nSiGhmjQ+iv
c+nDj8Qyh97Mpgc/0JXv+YLOzKIjM+nADNrzHe34lrZMpypTacNkWjOJVkyk
JeNpxtjI++61QqexnClMYBktWEpzljCOxXzDQsbwJ1/zB035jdH8yih+jpyd
x9nO2W68iG0sYCu/s4lf2MhPrGc+65jHWs5av0X3sZm9bGA3a9jFanayih2s
pHhMCAd1Dwci39fzYf2LI/zNUfZzjDfm7+QO4ZDxSY5zihOcjny/rCGc0Yv8
w6XI3bjMucjdzN/U81zgFun9/9t6hTtc5S7XuMd10mQL4ZXe5zU3eBC5Dw8J
+UN4pHH0X42rj/UJbxk/1Xja0T7xNREJSMx/5pLocPd4ZpzUOCHJeO75HX2h
yfWlptAV9kmpaXmXdLxHelKRgdRk5G0yMdf+afR97ln/gWYlM9nIQnaiyJE9
hNwazYfk4SPyRubIRwz5OWzfZt4/pCU9F6AUBfmYQpSmMJ9QhDLkpCwnrMul
5SjKpxTjM4pTnvH2r6BVqUg1KlGdEtSgMlWoSS1qs8S6OhrL/yYPw9Y=
            "]], 
           LineBox[CompressedData["
1:eJwVz8lXDmAUB+DXKrRvbyU7zukP6VSSKXySSso8ZkiDUKYyljlk/kyhRGQo
8zxPB6FICOueb/Gc33vv4t77DokUphQMCCFESR0ewmgyGEU6I0kjYWgIS+Vi
FjGfecxmFoUUMJ18ppFHLjlMJZspZDGZCJOYyAQyGc84xjKGJHu3yM1sooZq
NrKBctZTRinrKGEtKyimiuUso5IlrKGIhaxmAXNZxRwqmMkMVsZudccp2cBB
TrKfA0SpZx8n2Mtx9rCbY+xiJ0fZQR1HqGU7h9nGIbbGZth3Xd7nGm3c4ypX
uEsrl7nDJVq4zUWauUUTF+jgPOdop5Gz3OQMp7nBb3s/yC7e845vvOUNr/nK
K17yhRc8p5NnPOUJn3nMIz7xkAd8JDkxhMEjQvjv/Y+/DFL3yT+xO/jFQL1e
+ZMe4tQ/5He6Y382J14vaVgI/cnqj1M=
            "]]}, "4500"], Annotation[#, 4500, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV01dsllUcwOE/e4pCWzYdDDEBEcKGtkoX9RYuGLJkK4I3AmoBjQG3gogs
4QaKgxGg7J0oq2hlqSAoDqaghAKJiAo+78Xz/c45Oef9zvc2zRr9/IApVSJi
gI/KhhHHO0Ss5RhrOMpqvuFzKviMT/maT/iKVRyhlHJWUtIo4oz+wL+c5h9O
cZfv+Zvv+JY7nOQvThApEdU6RmRRlUyqEGRw3550vaet9D9tqSXOPaL9aU8R
D1NIOwpoSxvyaU0eV50reyxigvF4xjGWMYzmaUYxkmIGpkbst/914y91jn6h
03UaU3mBnfZVWJ9o/Gpy97SI2Vxnhfmwxt5X8gxKWcV+Kqwf0N85mNyPQ1zj
MOX8kdy9ScQ6v73RoxF/mqfodb1BqnGlpulNvcUu+7uat3emmzamCd1pSg+a
04KeiaYRvbQ3g+jDYPqSzRByGJqseWauPsUW517UYQznJUbwMiMZRQkzmMks
XqFzM+9JP+Q1FvARC1nEYpaw2r4NupSNfMwyylhOh+YRm/QAmzmY3ImtHGIb
h9nODtbbf1TLOcIxjtOlhT2cMi5uGXFBb3Ces+a3tVYn71Zr6k29SA3jSq2u
k1tF1NNM6lKHDGqTTrX0iCe0HW15nDbk0pr65JBFNgvsf1KLmUB/ihhPIeMo
IJ+x5NEv+f6MiPn6AfOYy/u8x7u8w9u8xXO8ySSe5Q2eYSKlnrNP97KH3exi
JzvYzja2soXNbKKMjck9MiOu6GUucZELnOc3fuUXfuYcP/EjZznDQucb+p96
iAdpwAPUpx51qUNtalEjy9+mi/dknELvZM08VdPoRU960J1udGWyc0VaSAF9
6Es+2eSRSw79OGn//4eE308=
            "]]}, "4000"], Annotation[#, 4000, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV1ElsVVUcwOF/QUVFhZaWTqDAgqFzDVNBRJbIXGiRGcGVAcoMCcqkEoIi
yFKFUkiYWoYNCXOr4LBgSpgXhIIyyqQoRAHhu4vv/c5955x3X867ee0nVZVP
S4mIci+bUiN+zo/YwBFq+JH1VNNAS+pZx0HWso/v2ct37OFbStIi/tZf+Iuf
uM9h7vIDtznEHxzgJvu5zm77f9WcgoiHmq3/aKY+0HS9p630jqbpjeS+rSLe
M87lXbJ4h9b0IoOe/GltD72l3bTavn46lr6Mpg8f0JtKyqigOy+nR4zXccxk
DDMYxXRGUpWwbpHOYiGnXZdlRGxklevU1s5Qa9jPag6w1PuP8pyz8SUO0Ug9
l2ngCo+s+02bFTpTfUV/16u8anxNm+t1fU2nZ/pdjbsYv84b5NGCfG6YK9CW
FHLb+v5axPsUM4ASBlLKIFIZzNsM4eOsiCk6lKkMYxrlDKeKEcn3oYIZVHLV
vpk6ixXM5kvmMJevmMeE7IiV+jWbWcUWVvMNjea36jbqWUMtDdSxPTkvdrCT
j3Kcix7mGEc4npyf96fmRlw0fqqNyZlwKblXm4hPPT9XkjnucZcn3OEyj+nQ
NqJpUUQTMkgheGYuXfeYb6ultKGEXHIoJpssisik/5ueL+1NLyopoycV9KA7
I+jGcLpyxr7J+gmTWMCHTGQ+ExjPPMYxl7GMYQ6jGZV4y/+ELuMLavic9XzG
UqpZwmLWsYiFrE2+h/0ndRc7OcEOtnOcOmo5xja2cpQtbGZAO2esFzjPY85x
lv+Sz+c0p/iXfda/VBzxIp15gaY0oRMpBM+s7aj/61M6tPc8uy6lhGKKSKOQ
AvLJowvLrX8OsqDigw==
            "]]}, "3500"], Annotation[#, 3500, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0nlsj3ccB/CnqDMUO4Suo6trVefGNpGwzX3NfpFFlkWMuad1RjprhCpl
xg6musaK6mxjbuaY7MQUG3OzxpA6Y4tQx2b2+v7x+n0+v+fz/uZ5fp/fkzw0
I5YeF0VRjo+8FlG0jaVsIYFN1GIj1VlHZSowKzWKspnJdLKYzDQmksl4vpbd
ykU28ycbWE8pcfwrt4iPWMB85pHLDGZzVq5OWhSVqTXUC2oV9Zx63/wGxRSx
gmUU8AF5xMsm8Cw1aUM10rhuXsZG1odn5ksKWU0+qXIDaccAWtGXi2al/MBu
dvENa9hKb5kY/UnntGtj1M3qAfaxhx38xNtmWRzR7+c3DoW9upbJTGYxj1zm
s4ijMt+FHeo/IY98vuCk68f5XL+AryhgLevYwCZKwtmwaw7ql/ErhRxmC79z
jBOc4jbn5c9xR7+Ne2znH87wgIfEtYyiiiRxVf4yDfVnzRqpf6jJaqn6lFqJ
FBrThKZ04bZzf9FZH8+LVOYlqvIyzehKN7rTg2E8dG4KQ/XNeYueDGcEIxlF
dnhW71Z8eNf1o8lhNnPI5TOqmFejUD+G5YxlBXNZSRGrKGYnNeRrskO/i2/Z
TQkHOMZRjnM67IcznOIx5x6lTH8t7JErXA574xJPmifxBIk0oNz1+9zjLnfC
HsNOzZrQmJTwXK2i6BHq8p95HbU2CdSinUxb2tCaNFJpZtaSx0mjBak8TXOa
0kmuIy/wPM/Rgfb0No/xKgN4hlfoT79wX/rSJ1T5PuEMvehJD7rTja6ky01m
Eu/6PlGdwCDGk8E43jQbwhu8ziBeYyAxPpbJooBPyWcpeSzhHRaH+8hmMI7B
jGU0IxnOjzLFlFDEL+zlZ75nmMwEppHJVKZw3ewu5dziJn9zhBtc5X25ucwh
h2xmMJ36rf2/pJBMQ5JIpB7vySxhcfitfMhCupj9D4PBB6s=
            "]]}, "3000"], Annotation[#, 3000, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0mdIlWEUB/CniJIoswLLEBtEZKYSBX1qfynKbBAREUFEtNQWZSJi02xv
kYiIsL13RLT3tD0QqZCIsGXZln7vh9/9n+ec88K9z3vbT8gZkV0vhNDIR23T
EAq6hJDPbPKYSS45zCObuWQRHxtCRYqH+eO8gXWsYgXFFFHIEl7Zi+saQpVs
LN/IhrJS/jKvpowdbGcrW1hDCQ3sxtKdJqQTQwofzKs4wiEOsIdt7KKUZHsj
6UYmqQzmrVkFFznHWU6xjxMMsjOcDLJ4oTdFHpO3uc5VznCZaWb5lKtvcp+7
0X3q5bKARRRTxAo28MjO+egO1ZsooZTdPNN/wk71Kvayhf0c5DBHuRU9G901
d9Rbucc2HnCchzzmKc/5xmv7ldSqT/KT0/zmJX+pI6SGUJ9E3tt/R5I6plkI
n9Vf+EoN3+ikXyv/8ZOBzg287wR1XfQ/co5x3iibyAvyI4lxIQyhhV48zclz
TpCtaUtLWlGm30Em057OtOO+fg+ZShrdSaFWf4DsTz/60ofe9Iq+W/MQxsux
jGE0oxjJcIaRyVAy6Gl/c1oI89nILL1spjOOqUxmEhO5ZKeMW+zgBte4wgUm
2JkR/V5ymcscPpj94Ds1fOET5VTznpX2lrGUxSykkILo3tJD6EgH2pFEIm2I
Z7mdzdG7YD1rWR3djdl/CSm28A==
            "]]}, "2500"], Annotation[#, 2500, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0LlPFGEYwOF3BRQ5EgsVGjkb8KiMBa5AJZdXpFGgklNWI4Wl/4ONnYQG
FK3k0BIQK1AJwlIo2QYKsdAohUFjJOGZ4slv3ncm++1Mde9I54NURDxmgJf1
ES+Y5DnPmGCcVfff6GtmmWGaKV5xwQ8t6lsWmGeOMft3usJHPvCeZZbIOxSR
1XXW+JScRcZ+I9npZ/3CZnJOXsQoqfyInHlIV9hyfb4g4qvusM1T83f9wTdS
hyN+6i92GTb/Ts7WPf3DX9JHIv4l30D/67HCiH19pDvcPOpjnPZ+mq91RREl
WkwRT8zlWsZJTnCcfftaraGaKiqp4BRDxRHn9CxnyJqbtYlGLpHmIg3JdUnE
Db3ONa5yhQ7aaaOVFi4z7vke7aaL29xK/neps3WQAfrpo5c7PHT/vt4jwzB3
ydkfAKE7XIA=
            "]]}, "2000"], Annotation[#, 2000, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwVz7tLlmEYwOHb0+chzdNmUgim6ZCn1MZKB7fsqxSkNPwDjP6EEGsTBzt5
rDGtRVBTl6hsa6uGyARz0CBQwyEC83qHi997Pw/ve39f1eDd9FBGRIxSwURd
xDOe8oTHPGKcYfcv9DmzzDDNFJP8cv9aXzHPHC9JW7Cmq6zwhmWWWExm9x91
nQ+85x1nMiM+6Yh+1S98TvaYu7O8zzdzZXbEfb573tEN/cEmV3MitvQn28lO
847uJt/hdCritz7QfT3gD3vmQ+3Ljfib/Db9p415/iup/Igj8z39rxuaVR+R
SQZdBRH5mkcuKXJYcF6uZZRSQjEnKaLyBHqKCh6a67WOc9RSw1mq2XN/Udtp
o5ULtNBME400cJ7ewohO7eAKl7nEW+c9epMbXCfNNbqT3UURd3SAfm5zizHn
xy3mWVY=
            "]]}, "1500"], 
         Annotation[#, 1500, "Tooltip"]& ], {}, {}}}], {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          Thickness[0.005], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxdz0kKwkAQheHGlUdwaxbiSkScglOpOKHGGMe14Nor9NH6aCr5e1EVCB+v
q+iuqr8+xbvinEt+/1/91aS0ig3R521MsItNTLGFE+zgDHs4x2Gpj3mEC5zq
uhfTH/tifUmmz63MPWvyGLf6Xb8z++zNnAfyADPsUz+ZnOt+OZv7C/1+iDnO
eyGzn1w5j3vekD0D2W/wrveQB/mITz13IIdcvm2CLp8=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          Thickness[0.005], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxdkMsKwjAQRYMrP8GtXbnqQhAEQWLVYqnYNn3YdcG1vzCflk/zkTOLNFDS
w517Zybr6e1eC2NM8v1+d3Rk9OFnaf+XH+AV3MNJYNvBG7iF08DGwVv0Bt6R
V8P7wKJ8oF75GLPYmT+jH/lyJk/7XfEzj+T4db4b9cwvBXm6X4kOyx2/6g/q
eR+pZlzH9baJ84xDp79X1nlbmH1sB+v+Pf0q/LCU+Af0Av8TPcc/ol/wK5/8
BxpiTEA=
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          Thickness[0.005], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxdkMsKwjAQRYMrP8GlduXKhSAIgoSKYvFV06eKDwTX/sJ8Wj7NR04WSaGk
hzN3ppPB821eHaVU8n1/Z/D0H9Z9dPX/kCvcc6wvcAKf4CHcwCPyFTx2rEp4
Qn0BT/GeZxHPw3rRUb8UzzxZOLY1folv8SvyZ/yaevaTDO/338A3/Nax3PF7
x/7+5BBxznxYH5nn8wZPf2vC+VLg+T9dwv7+K/qxr4WF+5GaekO+wefkW+bt
yMOS2Q+3nkjb
          "]]}, {
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          Thickness[0.005], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1:eJxV0EsKwjAQxvHgyiO4VFeuXAiCIEhQFEXxUZ/LYml9a71BjtKj5Cg9io/5
z6KFkv74OpNMasdXEJeMMfXv+1sLT5Z6+Sjb/2JfuCLO77guDq+4Ic7OuCl2
J9zCCW6Lq+oO9eouudb3yLGz9NP9+uQX8oHY6/mG+EY+Yj6dZyw2D/IJ/Z/k
U3HIfbiZONf7mYtT7s8t6PfGS/bDdlXMTUA/6j222m/N/+xnN8Xzmi3zMa/H
Offjdjihfi+uxtQfyCPqcRb5D+yAUck=
          "]]}}}, {{{{{{}, {
            GraphicsGroupBox[{{
               Directive[
                AbsoluteThickness[4], 
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]], 
               CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                 Offset[{3, 0}, {99., 67.}], 
                 Offset[{3., -3.039666196197683*^-8}, {103.0425, 67.}], 
                 Offset[{0, 0}, {105.61777549429843`, 66.99999985372341}], 
                 
                 Offset[{5., 1.1102230246251565`*^-15}, {105.61777549429843`, 
                  66.99999985372341}], 
                 
                 Offset[{10., 2.220446049250313*^-15}, {105.61777549429843`, 
                  66.99999985372341}], 
                 
                 Offset[{10., 2.220446049250313*^-15}, {105.61777549429843`, 
                  66.99999985372341}]}]}, {
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]], 
               BSplineCurveBox[{
                 Offset[{3, 0}, {99., 67.}], 
                 Offset[{3., -3.039666196197683*^-8}, {103.0425, 67.}], 
                 Offset[{0, 0}, {105.61777549429843`, 66.99999985372341}], 
                 
                 Offset[{5., 1.1102230246251565`*^-15}, {105.61777549429843`, 
                  66.99999985372341}], 
                 
                 Offset[{10., 2.220446049250313*^-15}, {105.61777549429843`, 
                  66.99999985372341}], 
                 
                 Offset[{10., 2.220446049250313*^-15}, {105.61777549429843`, 
                  66.99999985372341}]}]}, {
               FaceForm[
                Directive[
                 GrayLevel[1], 
                 Opacity[
                  NCache[
                   Rational[2, 3], 0.6666666666666666]]]], 
               EdgeForm[], 
               PolygonBox[{
                 
                 Offset[{50., 8.00000000000001}, {105.61777549429843`, 
                  66.99999985372341}], 
                 
                 Offset[{50., -7.999999999999989}, {105.61777549429843`, 
                  66.99999985372341}], 
                 
                 Offset[{10., -7.9999999999999964`}, {105.61777549429843`, 
                  66.99999985372341}], 
                 
                 Offset[{10., 8.000000000000002}, {105.61777549429843`, 
                  66.99999985372341}]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              InsetBox[
               FormBox[
                StyleBox[
                 RotationBox["\"Hor 0\"", BoxRotation -> 0.], {
                  Opacity[1]}, StripOnInput -> False], TraditionalForm], 
               
               Offset[{30., 6.661338147750939*^-15}, {105.61777549429843`, 
                66.99999985372341}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 
                  Rational[1, 2]}], 
                ImageScaled[{0.5, 0.5}]]]}], 
            GraphicsGroupBox[{{
               Directive[
                AbsoluteThickness[4], 
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]], 
               CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                 Offset[{3, 0}, {99., -34.}], 
                 
                 Offset[{2.757430451232051, 1.1817687195971156`}, {
                  103.0425, -34.}], 
                 Offset[{0, 0}, {105.61777549429843`, -27.812742596897035`}], 
                 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  105.61777549429843`, -27.812742596897035`}], 
                 
                 Offset[{10., 2.220446049250313*^-15}, {
                  105.61777549429843`, -27.812742596897035`}], 
                 
                 Offset[{10., 2.220446049250313*^-15}, {
                  105.61777549429843`, -27.812742596897035`}]}]}, {
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]], 
               BSplineCurveBox[{
                 Offset[{3, 0}, {99., -34.}], 
                 
                 Offset[{2.757430451232051, 1.1817687195971156`}, {
                  103.0425, -34.}], 
                 Offset[{0, 0}, {105.61777549429843`, -27.812742596897035`}], 
                 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  105.61777549429843`, -27.812742596897035`}], 
                 
                 Offset[{10., 2.220446049250313*^-15}, {
                  105.61777549429843`, -27.812742596897035`}], 
                 
                 Offset[{10., 2.220446049250313*^-15}, {
                  105.61777549429843`, -27.812742596897035`}]}]}, {
               FaceForm[
                Directive[
                 GrayLevel[1], 
                 Opacity[
                  NCache[
                   Rational[2, 3], 0.6666666666666666]]]], 
               EdgeForm[], 
               PolygonBox[{
                 
                 Offset[{50., 8.00000000000001}, {
                  105.61777549429843`, -27.812742596897035`}], 
                 
                 Offset[{50., -7.999999999999989}, {
                  105.61777549429843`, -27.812742596897035`}], 
                 
                 Offset[{10., -7.9999999999999964`}, {
                  105.61777549429843`, -27.812742596897035`}], 
                 
                 Offset[{10., 8.000000000000002}, {
                  105.61777549429843`, -27.812742596897035`}]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              InsetBox[
               FormBox[
                StyleBox[
                 RotationBox["\"Hor 1\"", BoxRotation -> 0.], {
                  Opacity[1]}, StripOnInput -> False], TraditionalForm], 
               
               Offset[{30., 6.661338147750939*^-15}, {
                105.61777549429843`, -27.812742596897035`}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 
                  Rational[1, 2]}], 
                ImageScaled[{0.5, 0.5}]]]}], 
            GraphicsGroupBox[{{
               Directive[
                AbsoluteThickness[4], 
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]], 
               CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                 Offset[{3, 0}, {99., -51.}], 
                 
                 Offset[{2.75743045072499, -1.1817687207802459`}, {103.0425,
                   -51.}], 
                 Offset[{0, 0}, {105.61777549429843`, -57.18725741043512}], 
                 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  105.61777549429843`, -57.18725741043512}], 
                 
                 Offset[{10., 2.220446049250313*^-15}, {
                  105.61777549429843`, -57.18725741043512}], 
                 
                 Offset[{10., 2.220446049250313*^-15}, {
                  105.61777549429843`, -57.18725741043512}]}]}, {
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]], 
               BSplineCurveBox[{
                 Offset[{3, 0}, {99., -51.}], 
                 
                 Offset[{2.75743045072499, -1.1817687207802459`}, {
                  103.0425, -51.}], 
                 Offset[{0, 0}, {105.61777549429843`, -57.18725741043512}], 
                 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  105.61777549429843`, -57.18725741043512}], 
                 
                 Offset[{10., 2.220446049250313*^-15}, {
                  105.61777549429843`, -57.18725741043512}], 
                 
                 Offset[{10., 2.220446049250313*^-15}, {
                  105.61777549429843`, -57.18725741043512}]}]}, {
               FaceForm[
                Directive[
                 GrayLevel[1], 
                 Opacity[
                  NCache[
                   Rational[2, 3], 0.6666666666666666]]]], 
               EdgeForm[], 
               PolygonBox[{
                 
                 Offset[{50., 8.00000000000001}, {
                  105.61777549429843`, -57.18725741043512}], 
                 
                 Offset[{50., -7.999999999999989}, {
                  105.61777549429843`, -57.18725741043512}], 
                 
                 Offset[{10., -7.9999999999999964`}, {
                  105.61777549429843`, -57.18725741043512}], 
                 
                 Offset[{10., 8.000000000000002}, {
                  105.61777549429843`, -57.18725741043512}]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              InsetBox[
               FormBox[
                StyleBox[
                 RotationBox["\"Hor 2\"", BoxRotation -> 0.], {
                  Opacity[1]}, StripOnInput -> False], TraditionalForm], 
               
               Offset[{30., 6.661338147750939*^-15}, {
                105.61777549429843`, -57.18725741043512}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 
                  Rational[1, 2]}], 
                ImageScaled[{0.5, 0.5}]]]}], 
            GraphicsGroupBox[{{
               Directive[
                AbsoluteThickness[4], 
                GrayLevel[1], 
                Opacity[
                 NCache[
                  Rational[2, 3], 0.6666666666666666]]], 
               CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurveBox[{
                 Offset[{3, 0}, {99., -157.}], 
                 Offset[{3., -1.5248976890272195`*^-8}, {103.0425, -157.}], 
                 Offset[{0, 0}, {105.61777549429843`, -157.000000073382}], 
                 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  105.61777549429843`, -157.000000073382}], 
                 
                 Offset[{10., 2.220446049250313*^-15}, {
                  105.61777549429843`, -157.000000073382}], 
                 
                 Offset[{10., 2.220446049250313*^-15}, {
                  105.61777549429843`, -157.000000073382}]}]}, {
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]], 
               BSplineCurveBox[{
                 Offset[{3, 0}, {99., -157.}], 
                 Offset[{3., -1.5248976890272195`*^-8}, {103.0425, -157.}], 
                 Offset[{0, 0}, {105.61777549429843`, -157.000000073382}], 
                 
                 Offset[{5., 1.1102230246251565`*^-15}, {
                  105.61777549429843`, -157.000000073382}], 
                 
                 Offset[{10., 2.220446049250313*^-15}, {
                  105.61777549429843`, -157.000000073382}], 
                 
                 Offset[{10., 2.220446049250313*^-15}, {
                  105.61777549429843`, -157.000000073382}]}]}, {
               FaceForm[
                Directive[
                 GrayLevel[1], 
                 Opacity[
                  NCache[
                   Rational[2, 3], 0.6666666666666666]]]], 
               EdgeForm[], 
               PolygonBox[{
                 
                 Offset[{50., 8.00000000000001}, {
                  105.61777549429843`, -157.000000073382}], 
                 
                 Offset[{50., -7.999999999999989}, {
                  105.61777549429843`, -157.000000073382}], 
                 
                 Offset[{10., -7.9999999999999964`}, {
                  105.61777549429843`, -157.000000073382}], 
                 
                 Offset[{10., 8.000000000000002}, {
                  105.61777549429843`, -157.000000073382}]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              InsetBox[
               FormBox[
                StyleBox[
                 RotationBox["\"Hor 3\"", BoxRotation -> 0.], {
                  Opacity[1]}, StripOnInput -> False], TraditionalForm], 
               
               Offset[{30., 6.661338147750939*^-15}, {
                105.61777549429843`, -157.000000073382}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 
                  Rational[1, 2]}], 
                ImageScaled[{0.5, 0.5}]]]}]}}}}, {}}, {}}}}, {
    Frame -> True, FrameStyle -> Directive[14, 
       GrayLevel[0]], PlotRangePadding -> {{
        Scaled[0.05], 
        Scaled[0.2]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, PlotLabel -> 
     FormBox["\"Velocity Distribution\"", TraditionalForm], 
     PlotRange -> {{0., 99.}, {-277., 67.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Vel, m/s\"", {FontFamily -> "Arial"}, Background -> 
                Automatic, StripOnInput -> False]}, {
               GraphicsBox[{
                 
                 RasterBox[{{{0.139681, 0.311666, 0.550652}}, {{
                  0.40397412454212456`, 0.6459254212454213, 
                  0.779944391941392}}, {{0.6277016471306472, 
                  0.7846520647130648, 0.8300992857142857}}, {{
                  0.7952263846153846, 0.8482343846153846, 
                  0.7906836666666667}}, {{0.8613995164835165, 
                  0.8083592197802197, 0.6798428791208792}}, {{
                  0.8281201831501831, 0.6603302747252747, 
                  0.5406902368742369}}, {{0.7275073492063493, 
                  0.4460844444444446, 0.4070504603174604}}, {{
                  0.575970054945055, 0.24624308791208796`, 
                  0.28254602564102566`}}, {{0.450385, 0.157961, 0.217975}}}, {{
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                    7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 
                    112.5}, {7.5, -112.5}}]]}, {
                  CapForm[None], {{
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -87.5}, {
                    Rational[15, 2], -87.5}}, {{-7.5, -87.5}, {
                    7.5, -87.5}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -62.5}, {
                    Rational[15, 2], -62.5}}, {{-7.5, -62.5}, {
                    7.5, -62.5}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -37.5}, {
                    Rational[15, 2], -37.5}}, {{-7.5, -37.5}, {
                    7.5, -37.5}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -12.5}, {
                    Rational[15, 2], -12.5}}, {{-7.5, -12.5}, {
                    7.5, -12.5}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 12.5}, {
                    Rational[15, 2], 12.5}}, {{-7.5, 12.5}, {7.5, 12.5}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 37.5}, {
                    Rational[15, 2], 37.5}}, {{-7.5, 37.5}, {7.5, 37.5}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 62.5}, {
                    Rational[15, 2], 62.5}}, {{-7.5, 62.5}, {7.5, 62.5}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 87.5}, {
                    Rational[15, 2], 87.5}}, {{-7.5, 87.5}, {7.5, 87.5}}]]}}}, 
                 StyleBox[{Antialiasing -> False, 
                   StyleBox[
                    LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]]}, StripOnInput -> False], 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -87.5}, 
                    Offset[{4., 0}, {7.5, -87.5}]}, {{7.5, -62.5}, 
                    Offset[{4., 0}, {7.5, -62.5}]}, {{7.5, -37.5}, 
                    Offset[{4., 0}, {7.5, -37.5}]}, {{7.5, -12.5}, 
                    Offset[{4., 0}, {7.5, -12.5}]}, {{7.5, 12.5}, 
                    Offset[{4., 0}, {7.5, 12.5}]}, {{7.5, 37.5}, 
                    Offset[{4., 0}, {7.5, 37.5}]}, {{7.5, 62.5}, 
                    Offset[{4., 0}, {7.5, 62.5}]}, {{7.5, 87.5}, 
                    Offset[{4., 0}, {7.5, 87.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["1500", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -87.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2000", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -62.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2500", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -37.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["3000", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -12.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["3500", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 12.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4000", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 37.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4500", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 62.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["5000", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 87.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                    StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                    False], {{
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}}, StripOnInput -> False]}, {
                  "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 225}, BaseStyle -> {}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{
                   InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RedBlueTones\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"RedBlueTones\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "RedBlueTones", "Gradients", {1, 0}, Blend[{{1., 
                    RGBColor[0.450385, 0.157961, 0.217975]}, {0.9, 
                    RGBColor[0.599449, 0.262748, 0.294618]}, {0.8, 
                    RGBColor[0.721701, 0.434448, 0.400225]}, {0.7, 
                    RGBColor[0.813151, 0.617722, 0.507726]}, {0.6, 
                    RGBColor[0.865768, 0.767491, 0.623596]}, {0.5, 
                    RGBColor[0.857126, 0.848339, 0.734867]}, {
                    0.3999999999999999, 
                    RGBColor[0.771923, 0.848195, 0.811697]}, {
                    0.29999999999999993`, 
                    RGBColor[0.61971, 0.781131, 0.831119]}, {
                    0.19999999999999996`, 
                    RGBColor[0.433786, 0.670834, 0.793785]}, {
                    0.09999999999999998, 
                    RGBColor[0.256859, 0.523007, 0.711644]}, {0., 
                    RGBColor[0.139681, 0.311666, 0.550652]}}, #]& ], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "[", "#1", "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"1000.`", ",", "5095.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1500.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"2000.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"2500.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"3000.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"3500.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"4000.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"4500.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"5000.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"Vel, m/s\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "225"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.882356662301865*^9, 3.8824110581461935`*^9, 
  3.882411919757539*^9, 3.88241208267991*^9, 3.882412341736309*^9, 
  3.8824199681731625`*^9, 3.8824200500596333`*^9, 3.8824241654227486`*^9, 
  3.8824354753210835`*^9, 3.882437841543808*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"8f15f69b-1fa2-420b-849f-bce12fcc3fc2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["TIME", "Subsection",
 CellChangeTimes->{{3.8810474581184554`*^9, 3.8810474587384324`*^9}, 
   3.881047491859939*^9},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"80dc5e57-61c4-4fb4-bf02-8585d0b1459f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeNH", "=", 
  RowBox[{
   RowBox[{"BuildTimeSection", "[", 
    RowBox[{"horNHsorted", ",", " ", "velModel"}], "]"}], "[", 
   RowBox[{"[", "\"\<timeNH\>\"", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.880717182825445*^9, 3.8807171883570805`*^9}, {
   3.8807173256313915`*^9, 3.8807173379024324`*^9}, 3.8807212952076635`*^9, 
   3.88103484865566*^9, {3.8810348795877695`*^9, 3.881034893025708*^9}, {
   3.8810349428846936`*^9, 3.8810349512356396`*^9}, {3.881035061389411*^9, 
   3.8810350675970488`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"50983952-d340-4c79-9970-0920597ac06c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"21", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"27", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"33", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"36", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"39", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"42", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"45", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"48", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"51", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"54", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"57", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"60", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"63", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"66", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"69", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"72", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"75", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"78", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"81", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"84", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"87", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"90", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"93", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"96", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"99", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0.08993224071350665`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0.0908531624163289`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "0.09448405901703606`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "0.09460915479601971`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "0.09800725162834448`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "0.09893983115730604`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "0.09954582909360529`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"21", ",", "0.10155433871218382`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "0.10184593094160979`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"27", ",", "0.10185410804379674`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "0.10047325884393443`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"33", ",", "0.10184183978580864`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"36", ",", "0.10059573716649255`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"39", ",", "0.09913000357399519`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"42", ",", "0.09868817250009874`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"45", ",", "0.0971214106882583`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"48", ",", "0.09767462744669225`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"51", ",", "0.09649415072348011`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"54", ",", "0.09660467360899969`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"57", ",", "0.09550082640342444`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"60", ",", "0.09484944466149062`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"63", ",", "0.09484944466149062`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"66", ",", "0.09494440962733951`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"69", ",", "0.09671777322848955`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"72", ",", "0.0971010440471071`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"75", ",", "0.09757107296940215`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"78", ",", "0.0994182092750885`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"81", ",", "0.10247665219214759`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"84", ",", "0.10270305290212639`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"87", ",", "0.10319363301182402`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"90", ",", "0.10754585329925698`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"93", ",", "0.10837436230536153`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"96", ",", "0.11035109559462161`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"99", ",", "0.11028438535619711`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0.15820845986321805`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0.1535462821120911`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "0.152855306595241`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "0.14924112846195622`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "0.1485771665424559`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "0.14578735457974556`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "0.1432040414843247`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"21", ",", "0.14357536813825122`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "0.14313514249500361`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"27", ",", "0.14299887758879268`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "0.1420520188402071`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"33", ",", "0.14489502841259133`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"36", ",", "0.14618881287050328`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"39", ",", "0.14782260884845208`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"42", ",", "0.15050803678140656`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"45", ",", "0.1528150781023254`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"48", ",", "0.1571652537851984`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"51", ",", "0.15831723770506`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"54", ",", "0.16040977801735234`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"57", ",", "0.1626007614746106`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"60", ",", "0.16328149986295554`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"63", ",", "0.1628209475649891`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"66", ",", "0.16329278246395793`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"69", ",", "0.16353747678857936`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"72", ",", "0.16057989492252067`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"75", ",", "0.15864786923362284`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"78", ",", "0.15702224382240987`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"81", ",", "0.15617928173584442`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"84", ",", "0.15139565817658326`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"87", ",", "0.14728638454807547`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"90", ",", "0.1470323293152309`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"93", ",", "0.14429479728592032`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"96", ",", "0.14197452237457525`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"99", ",", "0.1379671170031345`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0.2844268508950692`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0.2686844890812423`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "0.25669191480978115`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "0.24220764617965024`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "0.23433751910741973`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "0.22705009690913341`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "0.22054481660199093`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"21", ",", "0.21946235057264551`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "0.22096251882984264`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"27", ",", "0.2227829666798662`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "0.22380975425640798`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"33", ",", "0.23015084359971172`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"36", ",", "0.2360322697273331`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"39", ",", "0.24237135191486608`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"42", ",", "0.24935395974487606`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"45", ",", "0.25385670446669256`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"48", ",", "0.2615680340766301`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"51", ",", "0.26974323800054845`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"54", ",", "0.2761836968543173`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"57", ",", "0.2809744104710079`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"60", ",", "0.28722117941055214`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"63", ",", "0.2942324943884048`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"66", ",", "0.29958907876025426`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"69", ",", "0.2949490236119951`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"72", ",", "0.29012289600204566`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"75", ",", "0.28042931317642716`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"78", ",", "0.27090473362426354`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"81", ",", "0.2605820620272761`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"84", ",", "0.24594440124299727`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"87", ",", "0.2340595605368376`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"90", ",", "0.22583601815284815`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"93", ",", "0.2163466780821247`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"96", ",", "0.20931155810010948`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"99", ",", "0.2043710389487271`"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8823566624290032`*^9, 3.882411058485689*^9, 
  3.8824119216923923`*^9, 3.882412342033156*^9, 3.8824200561242156`*^9, 
  3.8824241711250563`*^9, 3.882435487043399*^9, 3.882437841749668*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"84499ee0-1803-4636-af96-ef967de71b55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotTimeSection", "[", "timeNH", "]"}]], "Input",
 CellChangeTimes->{{3.8807179247798862`*^9, 3.880717932410942*^9}, {
  3.8810348570321875`*^9, 3.881034864028068*^9}, {3.8810350715773168`*^9, 
  3.881035074100485*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"80f0aa5a-9549-44e5-a16b-83fcc557fb62"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJztlmtMU2cYx2tRZ5CNBUfouCxACGuEddiAYWtGn7XAisChlnJJJgO5hIGY
IW4DVgXmXCgjRC6DQQDBKA42wWyiAxnCCmRQkZsVBR1BDIQNRtShq1RhZ9l5
3qRv9nHZp75fml/+53/6nDe/D49b4geqFD6PxxNs4vH+/v33sw3MWUCxO8VC
ikUUiyn2o9ifYgnFAeZcAFQuo3I5lQdReTCVK6g8hMpDqTyMyhkqj6BYac6w
l+qrzLmX4oJIqq+m+lFUn+KCaKofQ/VjqT7F7Ek53NE4vOWHnn9oGzQ+Ubq9
KkMWQG57TraTTwfH7pCv6H2D8UcWwjddnxl4Dp0ci2D1rMPSK2pkMeRtSZu9
oUH2AyvPoh3ZG8j+8L2xQVRhd5ljCagX+fHOO5ADQPjh7dL6Du551o+p6oBi
hjwvg763pWlnejGXQ7F9qqYyAd8fBPkTSUONcsyDobSnae7hHZxfAe2RWpXv
JsxDQDBZ53fzAuahcKlGn2vfxTHrR9igx3p3FuYMXE795eTzCswjKFZCfFXI
TDDDMetHbeQjY54O+yqYNlX51N/mmPXDJzPzz/Q17EdCS+PHAzmHuflYP7on
+n9flOD3R0GYKS28Zw/HrB+ef9yfmU/nmPXjaUM331XbxfVj4EbJdfuMKxyz
fuQ5Ne80Sn/k+rFQHRi3Wi3hmD3P2Wl7vaGf+KHm25Snft1H/JiIy5D2lSK7
Q8VOkyrKEVkIxzvqays2I4tgc9l2o7BFR/x4ITC97Jga2Q9edInStCYg+8OQ
8nENqJAlcH4+vHAoHDkANCsNF3QiHfFjPWRX9VIx5jJoeyBsUl7CXA6SQmZp
agnzIDiSdXfplryP+HGiIHno0AmcVwHa6qL2Zy79xI8vt3tJu+V4H6Ew+3lQ
D6PFPAw+URywcRzDnAGx1Vre+wuYR4BrbZbj3pvISkg69prHz5izfqQJ3hq6
uoJ9FdiIivV3S/qJH9WuxsFyBvuRMOdksmFexr4a5t3OD7Q9w/mjwGktwrCS
0Ef8cJ9KuvLONN5HNNgWr5SvjuuIH42dLUchB+8nFqxTJPX+3jrix/hkp+1i
80/Ej4sXz7Xa+E4QP8KMiQddxePEj937xpZPHxwjfqwkfbXRzBslftxPTqka
WL9G/JCdSpKt2SKL4exIuNXYm8PEj7pJ31MxDsj+sGzNX81XIEtAkLvxxPM4
cgBYM4Whw03DxI9YL1+/yo/w/TIQDZ5+ndk9QvwodzDJtm7F+YIgo9ulwfDb
KPGj+NN7Pj5S/B4FzGXypwu7x4gf6nv7PXLl+P2h8Pi9A4nr58aJH0rBhsMR
E+YMvLTP7oFh/wTx42SKb2G7AVkJcQuz32Z7Xyd+yM/UzByaxftWgbG8qCG+
bIL4sbVNoi95iP8XCVZ3RkcKoseJH6V+lYkJrTh/FGR98dTLSTNK/IgX/7rQ
8uga8cP5lrNh1+Iw8WOZp8mVfneV+NFx9N26Dr2e+NGfHKg1CPXED7P52dyM
/4fc/Fj2H/Pcsv9Y9h/L/mPZfyz7D/ph2X8s+89/sf/8BYTDlEs=
    "], {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{1, 143, 144, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 
         23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 
         5, 4, 3, 2}}]]}, {}, 
      {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{35, 141, 142, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58,
          57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 
         40, 39, 38, 37, 36}}]]}, {}, 
      {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{69, 139, 140, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 
         92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 
         75, 74, 73, 72, 71, 70}}]]}, {}, 
      {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{
         PolygonBox[{{125, 138, 136, 135, 134, 133, 132, 131, 130, 129, 128, 
          127, 126}}], 
         PolygonBox[{{103, 137, 125, 124, 123, 122, 121, 120, 119, 118, 117, 
          116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 
          104}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
       LineBox[{35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
        50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 
        67, 68}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
       LineBox[{69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
        84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 
        101, 102}]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
       LineBox[{103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 
        115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 
        129, 130, 131, 132, 133, 134, 135, 136}]}}}], {{{{}, {
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{3, 0}, {99., 0.}], 
            Offset[{2.985502085967606, -0.2945798612992315}, {103.0425, 0.}], 
            Offset[{0, 0}, {105.4157070335884, -0.0011465677561842665`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {
             105.4157070335884, -0.0011465677561842665`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.4157070335884, -0.0011465677561842665`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.4157070335884, -0.0011465677561842665`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{3, 0}, {99., 0.}], 
            Offset[{2.985502085967606, -0.2945798612992315}, {103.0425, 0.}], 
            Offset[{0, 0}, {105.4157070335884, -0.0011465677561842665`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {
             105.4157070335884, -0.0011465677561842665`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.4157070335884, -0.0011465677561842665`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.4157070335884, -0.0011465677561842665`}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{31., 8.000000000000007}, {
             105.4157070335884, -0.0011465677561842665`}], 
            Offset[{31., -7.999999999999993}, {
             105.4157070335884, -0.0011465677561842665`}], 
            Offset[{10.000000000000002`, -7.999999999999997}, {
             105.4157070335884, -0.0011465677561842665`}], 
            Offset[{9.999999999999998, 8.000000000000002}, {
             105.4157070335884, -0.0011465677561842665`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"t 0\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{20.5, 4.551914400963142*^-15}, \
{105.4157070335884, -0.0011465677561842665}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{3, 0}, {99., -0.11028438535619711`}], 
            Offset[{2.867734676474967, 0.8809641453220519}, {
             103.0425, -0.11028438535619711`}], 
            Offset[{0, 0}, {105.4157070335884, -0.10671467223635463`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {
             105.4157070335884, -0.10671467223635463`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.4157070335884, -0.10671467223635463`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.4157070335884, -0.10671467223635463`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{3, 0}, {99., -0.11028438535619711`}], 
            Offset[{2.867734676474967, 0.8809641453220519}, {
             103.0425, -0.11028438535619711`}], 
            Offset[{0, 0}, {105.4157070335884, -0.10671467223635463`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {
             105.4157070335884, -0.10671467223635463`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.4157070335884, -0.10671467223635463`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.4157070335884, -0.10671467223635463`}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{31., 8.000000000000007}, {
             105.4157070335884, -0.10671467223635463`}], 
            Offset[{31., -7.999999999999993}, {
             105.4157070335884, -0.10671467223635463`}], 
            Offset[{10.000000000000002`, -7.999999999999997}, {
             105.4157070335884, -0.10671467223635463`}], 
            Offset[{9.999999999999998, 8.000000000000002}, {
             105.4157070335884, -0.10671467223635463`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"t 1\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{20.5, 4.551914400963142*^-15}, \
{105.4157070335884, -0.10671467223635463}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{3, 0}, {99., -0.1379671170031345}], 
            Offset[{2.88463412810298, -0.8239453543673649}, {
             103.0425, -0.1379671170031345}], 
            Offset[{0, 0}, {105.4157070335884, -0.14128622758596354`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {
             105.4157070335884, -0.14128622758596354`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.4157070335884, -0.14128622758596354`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.4157070335884, -0.14128622758596354`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{3, 0}, {99., -0.1379671170031345}], 
            Offset[{2.88463412810298, -0.8239453543673649}, {
             103.0425, -0.1379671170031345}], 
            Offset[{0, 0}, {105.4157070335884, -0.14128622758596354`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {
             105.4157070335884, -0.14128622758596354`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.4157070335884, -0.14128622758596354`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.4157070335884, -0.14128622758596354`}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{31., 8.000000000000007}, {
             105.4157070335884, -0.14128622758596354`}], 
            Offset[{31., -7.999999999999993}, {
             105.4157070335884, -0.14128622758596354`}], 
            Offset[{10.000000000000002`, -7.999999999999997}, {
             105.4157070335884, -0.14128622758596354`}], 
            Offset[{9.999999999999998, 8.000000000000002}, {
             105.4157070335884, -0.14128622758596354`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"t 2\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{20.5, 4.551914400963142*^-15}, \
{105.4157070335884, -0.14128622758596354}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{3, 0}, {99., -0.2043710389487271}], 
            Offset[{2.9994276187684794`, -0.058599998027727654`}, {
             103.0425, -0.2043710389487271}], 
            Offset[{0, 0}, {105.4157070335884, -0.20459806372963726`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {
             105.4157070335884, -0.20459806372963726`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.4157070335884, -0.20459806372963726`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.4157070335884, -0.20459806372963726`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{3, 0}, {99., -0.2043710389487271}], 
            Offset[{2.9994276187684794`, -0.058599998027727654`}, {
             103.0425, -0.2043710389487271}], 
            Offset[{0, 0}, {105.4157070335884, -0.20459806372963726`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {
             105.4157070335884, -0.20459806372963726`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.4157070335884, -0.20459806372963726`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.4157070335884, -0.20459806372963726`}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{31., 8.000000000000007}, {
             105.4157070335884, -0.20459806372963726`}], 
            Offset[{31., -7.999999999999993}, {
             105.4157070335884, -0.20459806372963726`}], 
            Offset[{10.000000000000002`, -7.999999999999997}, {
             105.4157070335884, -0.20459806372963726`}], 
            Offset[{9.999999999999998, 8.000000000000002}, {
             105.4157070335884, -0.20459806372963726`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"t 3\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{20.5, 4.551914400963142*^-15}, \
{105.4157070335884, -0.20459806372963726}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Directive[14, 
    GrayLevel[0]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 56.98589410903234}, {All, All}},
  ImageSize->500,
  LabelStyle->Directive[14, 
    GrayLevel[0.5]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Time Section\"", TraditionalForm],
  PlotRange->{{0, 99.}, {-0.29958907876025426`, 0}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8823566625049887`*^9, 3.88241105867748*^9, 
  3.882411921872761*^9, 3.882412342314993*^9, 3.8824200594507666`*^9, 
  3.8824241743511105`*^9, 3.8824378419241557`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"8766f210-a5df-49b9-ac52-00711c0d65ce"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["WELLS", "Subsection",
 CellChangeTimes->{{3.8810474613889575`*^9, 3.8810474817186756`*^9}},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"d251c1ff-527c-42e3-bc70-87ae5e276cd3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"datasetWells", "=", 
   RowBox[{
    RowBox[{"BuildWellSet", "[", 
     RowBox[{
     "horNHsorted", ",", "timeNH", ",", " ", "numOfWells", ",", " ", 
      "wellsLocation"}], "]"}], "[", 
    RowBox[{"[", "\"\<datasetWells\>\"", "]"}], "]"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wells", "=", 
   RowBox[{
    RowBox[{"BuildWellSet", "[", 
     RowBox[{
     "horNHsorted", " ", ",", "timeNH", ",", " ", "numOfWells", ",", "  ", 
      "wellsLocation"}], "]"}], " ", "[", 
    RowBox[{"[", "\"\<wells\>\"", "]"}], "]"}]}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"\:0434\:0430\:0442\:0430\:0441\:0435\:0442", ",", 
    RowBox[{
    "\:0432\:0435\:043b\:0441", " ", "\:0438", " ", 
     "\:043f\:043e\:0437\:0438\:0448\:043d\:0441"}], ",", " ", 
    RowBox[{
    "\:0435\:0441\:043b\:0438", " ", 
     "\:0432\:044b\:0431\:0438\:0440\:0430\:0442\:044c", " ", 
     "\:0440\:0430\:043d\:0434\:043e\:043c"}], ",", " ", 
    RowBox[{
    "\:0431\:0443\:0434\:0443\:0442", " ", "\:0441", " ", 
     "\:0440\:0430\:0437\:043d\:044b\:043c\:0438", " ", 
     RowBox[{"\:043d\:0430\:0431\:043e\:0440\:0430\:043c\:0438", "!"}], " ", 
     "\:0432", " ", "\:043f\:0440\:0438\:043d\:0446\:0438\:043f\:0435", " ", 
     "\:043d\:0435", " ", "\:0432\:0430\:0436\:043d\:043e", " ", 
     "\:0442\:043a", " ", "\:0434\:0430\:043b\:044c\:0448\:0435", " ", 
     "\:0442\:043e\:043b\:044c\:043a\:043e", " ", 
     "\:0434\:0430\:0442\:0430\:0441\:0435\:0442", " ", 
     "\:0438\:0441\:043f\:043e\:043b\:044c\:0437\:0443\:0435\:0442\:0441\:044f\
"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"positions", "=", 
  RowBox[{
   RowBox[{"BuildWellSet", "[", 
    RowBox[{
    "horNHsorted", " ", ",", "timeNH", ",", " ", "numOfWells", ",", "  ", 
     "wellsLocation"}], "]"}], " ", "[", 
   RowBox[{"[", "\"\<positions\>\"", "]"}], "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.8807959273915443`*^9, 3.880795946480015*^9}, {
   3.8807993779374075`*^9, 3.880799383193713*^9}, 3.8807995162917657`*^9, {
   3.880799723763693*^9, 3.880799724234449*^9}, {3.880799761652151*^9, 
   3.88079977623715*^9}, {3.8808112755283957`*^9, 3.880811280192412*^9}, 
   3.880813142790597*^9, {3.880813473189372*^9, 3.880813474135783*^9}, {
   3.8808136615581617`*^9, 3.8808136657591906`*^9}, {3.880813724932375*^9, 
   3.8808137760690975`*^9}, {3.8808138111628504`*^9, 3.8808138167535305`*^9}, 
   3.880813915712678*^9, {3.880813946010057*^9, 3.8808139588215237`*^9}, {
   3.8808142428250775`*^9, 3.8808142441787615`*^9}, {3.8808142923399005`*^9, 
   3.880814293222435*^9}, {3.880814398266178*^9, 3.880814399976787*^9}, 
   3.880814956553685*^9, {3.8808150314551954`*^9, 3.8808150325852375`*^9}, 
   3.8808537700231876`*^9, {3.8808774496433306`*^9, 3.880877465378858*^9}, {
   3.880900386779784*^9, 3.8809003926220303`*^9}, {3.8809004816448293`*^9, 
   3.880900484655117*^9}, {3.8809005702206974`*^9, 3.8809006033892236`*^9}, {
   3.880900915239947*^9, 3.880900927610838*^9}, {3.8809583593780665`*^9, 
   3.8809583626517324`*^9}, {3.880958417770138*^9, 3.880958431397536*^9}, 
   3.880970599295164*^9, {3.881035323353649*^9, 3.881035336903896*^9}, {
   3.8810366407361374`*^9, 3.88103667151881*^9}, {3.8810367541117744`*^9, 
   3.8810367545436373`*^9}, {3.8810369933933277`*^9, 3.881037001819374*^9}, {
   3.881037118205305*^9, 3.8810371385667562`*^9}, {3.8810380052828846`*^9, 
   3.881038005852789*^9}, {3.881038058356872*^9, 3.881038058903227*^9}, {
   3.881038116833071*^9, 3.881038119835891*^9}, {3.8810381624823303`*^9, 
   3.8810381660150237`*^9}, {3.8810383436941643`*^9, 
   3.8810383462434006`*^9}, {3.8810456280517263`*^9, 3.881045633696639*^9}, {
   3.8810462166144514`*^9, 3.8810462174639735`*^9}, {3.881046287153748*^9, 
   3.881046313393961*^9}, {3.8810463586633935`*^9, 3.8810463870833793`*^9}, {
   3.881046508798874*^9, 3.881046517641487*^9}, {3.8810468317812266`*^9, 
   3.8810468754215913`*^9}, {3.881046976220733*^9, 3.881046995450508*^9}, {
   3.881047331699188*^9, 3.881047340129242*^9}, {3.881047424438793*^9, 
   3.881047437518915*^9}, {3.8811215875463934`*^9, 3.881121591663024*^9}, {
   3.882017177477297*^9, 3.88201719079592*^9}, {3.8820719952184553`*^9, 
   3.882072006687359*^9}, {3.8820723030412707`*^9, 3.8820723211345544`*^9}, {
   3.882073529221724*^9, 3.8820735301247983`*^9}, {3.8820749632667627`*^9, 
   3.8820750535233145`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"0eb54829-783f-480c-822f-fa8376c0911d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "well" -> 1, "x" -> 0, "horizon" -> 1, "depth" -> 6., "time" -> 0.|>, <|
       "well" -> 1, "x" -> 0, "horizon" -> 2, "depth" -> -98., "time" -> 
        0.08993224071350665|>, <|
       "well" -> 1, "x" -> 0, "horizon" -> 3, "depth" -> -129., "time" -> 
        0.15820845986321805`|>, <|
       "well" -> 1, "x" -> 0, "horizon" -> 4, "depth" -> -266., "time" -> 
        0.2844268508950692|>, <|
       "well" -> 2, "x" -> 66, "horizon" -> 1, "depth" -> 23., "time" -> 
        0.|>, <|"well" -> 2, "x" -> 66, "horizon" -> 2, "depth" -> -83., 
        "time" -> 0.09494440962733951|>, <|
       "well" -> 2, "x" -> 66, "horizon" -> 3, "depth" -> -130., "time" -> 
        0.16329278246395793`|>, <|
       "well" -> 2, "x" -> 66, "horizon" -> 4, "depth" -> -276., "time" -> 
        0.29958907876025426`|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "well"} -> 1, {All, "x"} -> 
        1, {All, "horizon"} -> 1, {All, "depth"} -> 1, {All, "time"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "well" -> TypeSystem`PackageScope`AtomShape[34], "x" -> 
            TypeSystem`PackageScope`AtomShape[34], "horizon" -> 
            TypeSystem`PackageScope`AtomShape[34], "depth" -> 
            TypeSystem`PackageScope`AtomShape[60], "time" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 5, {All}]], 8, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"well", "x", "horizon", "depth", "time"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 8], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "well"} -> 1, {All, "x"} -> 
        1, {All, "horizon"} -> 1, {All, "depth"} -> 1, {All, "time"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "well" -> TypeSystem`PackageScope`AtomShape[34], "x" -> 
            TypeSystem`PackageScope`AtomShape[34], "horizon" -> 
            TypeSystem`PackageScope`AtomShape[34], "depth" -> 
            TypeSystem`PackageScope`AtomShape[60], "time" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 5, {All}]], 8, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"well", "x", "horizon", "depth", "time"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 8], "Path" -> {}, "DisplayedRowCount" -> 8, 
     "DisplayedColumnCount" -> 5, "DataRowCount" -> 8, "DataColumnCount" -> 5,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["well", 
                  Style[
                  "well", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "well"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "well"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["x", 
                  Style[
                  "x", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "x"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "x"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["horizon", 
                  Style[
                  "horizon", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "horizon"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "horizon"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["depth", 
                  Style[
                  "depth", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "depth"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "depth"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["time", 
                  Style[
                  "time", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "time"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "time"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["well"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["x"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["horizon"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["depth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["well"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["x"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["horizon"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-98.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["depth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0899322"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["well"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["x"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["horizon"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-129.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["depth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.158208"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["well"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["x"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["horizon"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-266.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["depth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.284427"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["well"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["66"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["x"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["horizon"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["23.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["depth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["well"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["66"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["x"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["horizon"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-83.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["depth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0949444"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["well"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["66"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["x"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["horizon"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-130.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["depth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.163293"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["well"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["66"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["x"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["horizon"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-276.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["depth"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.299589"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{303., {155.56083996989764`, 162.43916003010236`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{303., {155.56083996989764`, 162.43916003010236`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.88201180876404*^9, 3.882016606629188*^9, {3.8820170013108144`*^9, 
   3.8820170099629755`*^9}, {3.8820171396657333`*^9, 3.8820171520372767`*^9}, 
   3.8820172186156616`*^9, 3.8820175701262045`*^9, 3.882070258454978*^9, 
   3.8820704122609186`*^9, {3.88207173511088*^9, 3.882071738156521*^9}, 
   3.8820717739211535`*^9, 3.8820720072045155`*^9, 3.882072112358903*^9, 
   3.882072164484928*^9, 3.8820723220716896`*^9, 3.8820724104600163`*^9, 
   3.8820724584981565`*^9, 3.8820735307120185`*^9, 3.8820735916853004`*^9, 
   3.88207375815195*^9, 3.882075352132902*^9, 3.8820754617247725`*^9, 
   3.8820755677120667`*^9, 3.8823566629824286`*^9, 3.88241105956656*^9, 
   3.882411202349043*^9, 3.8824113110507936`*^9, 3.8824119220943623`*^9, 
   3.8824123425683084`*^9, 3.882420078023181*^9, 3.882424180076012*^9, 
   3.882435495618825*^9, 3.882437842062063*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"794e93af-350d-4854-8f5f-5ca1bdce29ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1", ",", "6.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "2", ",", 
     RowBox[{"-", "98.`"}], ",", "0.08993224071350665`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "3", ",", 
     RowBox[{"-", "129.`"}], ",", "0.15820845986321805`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "4", ",", 
     RowBox[{"-", "266.`"}], ",", "0.2844268508950692`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "66", ",", "1", ",", "23.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "66", ",", "2", ",", 
     RowBox[{"-", "83.`"}], ",", "0.09494440962733951`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "66", ",", "3", ",", 
     RowBox[{"-", "130.`"}], ",", "0.16329278246395793`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "66", ",", "4", ",", 
     RowBox[{"-", "276.`"}], ",", "0.29958907876025426`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.88201180876404*^9, 3.882016606629188*^9, {3.8820170013108144`*^9, 
   3.8820170099629755`*^9}, {3.8820171396657333`*^9, 3.8820171520372767`*^9}, 
   3.8820172186156616`*^9, 3.8820175701262045`*^9, 3.882070258454978*^9, 
   3.8820704122609186`*^9, {3.88207173511088*^9, 3.882071738156521*^9}, 
   3.8820717739211535`*^9, 3.8820720072045155`*^9, 3.882072112358903*^9, 
   3.882072164484928*^9, 3.8820723220716896`*^9, 3.8820724104600163`*^9, 
   3.8820724584981565`*^9, 3.8820735307120185`*^9, 3.8820735916853004`*^9, 
   3.88207375815195*^9, 3.882075352132902*^9, 3.8820754617247725`*^9, 
   3.8820755677120667`*^9, 3.8823566629824286`*^9, 3.88241105956656*^9, 
   3.882411202349043*^9, 3.8824113110507936`*^9, 3.8824119220943623`*^9, 
   3.8824123425683084`*^9, 3.882420078023181*^9, 3.882424180076012*^9, 
   3.882435495618825*^9, 3.8824378422437515`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"a9d85d70-abf8-4ade-97db-715cf77a6deb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "23"}], "}"}]], "Output",
 CellChangeTimes->{
  3.88201180876404*^9, 3.882016606629188*^9, {3.8820170013108144`*^9, 
   3.8820170099629755`*^9}, {3.8820171396657333`*^9, 3.8820171520372767`*^9}, 
   3.8820172186156616`*^9, 3.8820175701262045`*^9, 3.882070258454978*^9, 
   3.8820704122609186`*^9, {3.88207173511088*^9, 3.882071738156521*^9}, 
   3.8820717739211535`*^9, 3.8820720072045155`*^9, 3.882072112358903*^9, 
   3.882072164484928*^9, 3.8820723220716896`*^9, 3.8820724104600163`*^9, 
   3.8820724584981565`*^9, 3.8820735307120185`*^9, 3.8820735916853004`*^9, 
   3.88207375815195*^9, 3.882075352132902*^9, 3.8820754617247725`*^9, 
   3.8820755677120667`*^9, 3.8823566629824286`*^9, 3.88241105956656*^9, 
   3.882411202349043*^9, 3.8824113110507936`*^9, 3.8824119220943623`*^9, 
   3.8824123425683084`*^9, 3.882420078023181*^9, 3.882424180076012*^9, 
   3.882435495618825*^9, 3.882437842252746*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"d081a775-39ff-46d6-ae9b-6f33d36f3aca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotDepthSectionWithWells", "[", 
   RowBox[{"horNHsorted", ",", " ", "datasetWells"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.8808136165022154`*^9, 3.8808136172793736`*^9}, {
  3.8810398220749903`*^9, 3.8810398272932234`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"62137d2f-c03a-4113-ad5d-7d2f2fe0dbc4"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJztls1OFEEURltXPsIsx1kYV8YY8CfoWIwCEkRgUEANONHwo6DgG9Sj9KPU
o/SjGFPnVFK9cuWqe/PxcftW3Xs5VNfdr9fz09tN04xuNc1frZ9RyHoHvRfq
3z9EJ+gSeh99hj5AX6CP0JfoMrqKPs0a9SvoDJ3W8Rh67/ue8Vd43mvWeuus
45+jb+p942avn61enW/xT9B36GPiOz2/W78f9nrrz+v9k9569/H0F97ze/v8
gNJnwscN9KDuIxzit9Gjuu6ET9bNE49S/gE+0gF+5L74iXXi4SPs4+VjjoeP
sIdfdn+8c9czp6Cf1l4+Sv6M/VjfuUX3Y26BeuQjWR98ROovfNgfc414+UjG
5YP5FD70u/X78uF68pHYXz6sTz4S/chH6V8+dsiXjy3y5WOTfPiI6+TDQ/Oa
fP0qcZ7xAg8f8RgPH+EzfoL/iJePQzx8RHny/HAe8FF4go9Gv9Lz0/p9+Sjr
zYj794CPwrd8wH85Pz4Rh49Ef4UP+/f8OCEOH/ELcfhwfvJRPHwEvHwk8+Eh
sH45P9hfPpy/fJT5w4P9Fj7kGT78/yh8yJc8bJPveQJPPu0NHj7CNR4+uiv8
JPvFDzx8tBd4+TjHw0c8w8PHWA8frR4+xubDR4sv3xf3mxH/Tlw+rM9z95I4
fAT78fvykzh8xF/E4WPBPOSjcz7wccP8yvnxGy8f+PJ9wctHR758BNfz+8J+
8mG9hQ/6lY+O+chHd0Y+fIxPyYeH7hv5+BbvY/3G9f8rPtx/iA/3n6zD/SfH
h/tP1uH+k+PD/Ye6yB/uP9kP95+c/+/3nz+1oS9T
    "], {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{1, 143, 144, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 
         23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 
         5, 4, 3, 2}}]]}, {}, 
      {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{35, 141, 142, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58,
          57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 
         40, 39, 38, 37, 36}}]]}, {}, 
      {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{69, 139, 140, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 
         92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 
         75, 74, 73, 72, 71, 70}}]]}, {}, 
      {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[{
         PolygonBox[{{125, 138, 136, 135, 134, 133, 132, 131, 130, 129, 128, 
          127, 126}}], 
         PolygonBox[{{103, 137, 125, 124, 123, 122, 121, 120, 119, 118, 117, 
          116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 
          104}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
       LineBox[{35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
        50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 
        67, 68}]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
       LineBox[{69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
        84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 
        101, 102}]}, 
      {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
       LineBox[{103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 
        115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 
        129, 130, 131, 132, 133, 134, 135, 136}]}}}], {{{{}, {
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{3, 0}, {99., 67.}], 
            Offset[{3., -3.039666196197683*^-8}, {103.0425, 67.}], 
            Offset[{0, 0}, {105.61777549429843`, 66.99999985372341}], 
            Offset[{5., 1.1102230246251565`*^-15}, {105.61777549429843`, 
             66.99999985372341}], 
            Offset[{10., 2.220446049250313*^-15}, {105.61777549429843`, 
             66.99999985372341}], 
            Offset[{10., 2.220446049250313*^-15}, {105.61777549429843`, 
             66.99999985372341}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{3, 0}, {99., 67.}], 
            Offset[{3., -3.039666196197683*^-8}, {103.0425, 67.}], 
            Offset[{0, 0}, {105.61777549429843`, 66.99999985372341}], 
            Offset[{5., 1.1102230246251565`*^-15}, {105.61777549429843`, 
             66.99999985372341}], 
            Offset[{10., 2.220446049250313*^-15}, {105.61777549429843`, 
             66.99999985372341}], 
            Offset[{10., 2.220446049250313*^-15}, {105.61777549429843`, 
             66.99999985372341}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{50., 8.00000000000001}, {105.61777549429843`, 
             66.99999985372341}], 
            Offset[{50., -7.999999999999989}, {105.61777549429843`, 
             66.99999985372341}], 
            Offset[{10., -7.9999999999999964`}, {105.61777549429843`, 
             66.99999985372341}], 
            Offset[{10., 8.000000000000002}, {105.61777549429843`, 
             66.99999985372341}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Hor 0\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{30., 6.661338147750939*^-15}, \
{105.61777549429843, 66.99999985372341}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{3, 0}, {99., -34.}], 
            Offset[{2.757430451232051, 1.1817687195971156`}, {
             103.0425, -34.}], 
            Offset[{0, 0}, {105.61777549429843`, -27.812742596897035`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {
             105.61777549429843`, -27.812742596897035`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.61777549429843`, -27.812742596897035`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.61777549429843`, -27.812742596897035`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{3, 0}, {99., -34.}], 
            Offset[{2.757430451232051, 1.1817687195971156`}, {
             103.0425, -34.}], 
            Offset[{0, 0}, {105.61777549429843`, -27.812742596897035`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {
             105.61777549429843`, -27.812742596897035`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.61777549429843`, -27.812742596897035`}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.61777549429843`, -27.812742596897035`}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{50., 8.00000000000001}, {
             105.61777549429843`, -27.812742596897035`}], 
            Offset[{50., -7.999999999999989}, {
             105.61777549429843`, -27.812742596897035`}], 
            Offset[{10., -7.9999999999999964`}, {
             105.61777549429843`, -27.812742596897035`}], 
            Offset[{10., 8.000000000000002}, {
             105.61777549429843`, -27.812742596897035`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Hor 1\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{30., 6.661338147750939*^-15}, \
{105.61777549429843, -27.812742596897035}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{3, 0}, {99., -51.}], 
            Offset[{2.75743045072499, -1.1817687207802459`}, {
             103.0425, -51.}], 
            Offset[{0, 0}, {105.61777549429843`, -57.18725741043512}], 
            Offset[{5., 1.1102230246251565`*^-15}, {
             105.61777549429843`, -57.18725741043512}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.61777549429843`, -57.18725741043512}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.61777549429843`, -57.18725741043512}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{3, 0}, {99., -51.}], 
            Offset[{2.75743045072499, -1.1817687207802459`}, {
             103.0425, -51.}], 
            Offset[{0, 0}, {105.61777549429843`, -57.18725741043512}], 
            Offset[{5., 1.1102230246251565`*^-15}, {
             105.61777549429843`, -57.18725741043512}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.61777549429843`, -57.18725741043512}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.61777549429843`, -57.18725741043512}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{50., 8.00000000000001}, {
             105.61777549429843`, -57.18725741043512}], 
            Offset[{50., -7.999999999999989}, {
             105.61777549429843`, -57.18725741043512}], 
            Offset[{10., -7.9999999999999964`}, {
             105.61777549429843`, -57.18725741043512}], 
            Offset[{10., 8.000000000000002}, {
             105.61777549429843`, -57.18725741043512}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Hor 2\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{30., 6.661338147750939*^-15}, \
{105.61777549429843, -57.18725741043512}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}], GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{3, 0}, {99., -157.}], 
            Offset[{3., -1.5248976890272195`*^-8}, {103.0425, -157.}], 
            Offset[{0, 0}, {105.61777549429843`, -157.000000073382}], 
            Offset[{5., 1.1102230246251565`*^-15}, {
             105.61777549429843`, -157.000000073382}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.61777549429843`, -157.000000073382}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.61777549429843`, -157.000000073382}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{3, 0}, {99., -157.}], 
            Offset[{3., -1.5248976890272195`*^-8}, {103.0425, -157.}], 
            Offset[{0, 0}, {105.61777549429843`, -157.000000073382}], 
            Offset[{5., 1.1102230246251565`*^-15}, {
             105.61777549429843`, -157.000000073382}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.61777549429843`, -157.000000073382}], 
            Offset[{10., 2.220446049250313*^-15}, {
             105.61777549429843`, -157.000000073382}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{50., 8.00000000000001}, {
             105.61777549429843`, -157.000000073382}], 
            Offset[{50., -7.999999999999989}, {
             105.61777549429843`, -157.000000073382}], 
            Offset[{10., -7.9999999999999964`}, {
             105.61777549429843`, -157.000000073382}], 
            Offset[{10., 8.000000000000002}, {
             105.61777549429843`, -157.000000073382}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"Hor 3\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{30., 6.661338147750939*^-15}, \
{105.61777549429843, -157.000000073382}], NCache[
          ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
           ImageScaled[{0.5, 0.5}]]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Directive[14, 
    GrayLevel[0]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0, 66}, None},
  GridLinesStyle->Directive[
    Thickness[Large], 
    GrayLevel[0.5]],
  ImagePadding->{{All, 77.00644189039608}, {All, All}},
  ImageSize->500,
  LabelStyle->Directive[14, 
    GrayLevel[0.5]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Depth Section with wells\"", TraditionalForm],
  PlotRange->{{0, 99.}, {-276., 67.}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.882356663810472*^9, 3.8824110604327602`*^9, 
  3.8824119227352257`*^9, 3.8824123434971356`*^9, 3.882424187161336*^9, 
  3.8824354998858604`*^9, 3.882437842383757*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"42c8a064-7964-4fcf-b562-417361a3d7bb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Vint", "Subsection",
 CellChangeTimes->{{3.882070285749171*^9, 3.8820702940165935`*^9}, {
  3.882070326485198*^9, 3.8820703573779488`*^9}},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"b2749eb2-7403-4c2d-898c-fccf3bd1e572"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"listVint", " ", "=", " ", 
  RowBox[{
   RowBox[{"CheckVelocity", "[", "datasetWells", "]"}], "[", 
   RowBox[{"[", "\"\<datasetVint\>\"", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8811320563175774`*^9, 3.8811320949970655`*^9}, {
  3.881134168377954*^9, 3.881134175577605*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"54160bed-de22-4f4b-a2a5-426a0356e10f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "well" -> 1, "x" -> 1, "dh" -> -104., "dt" -> 0.08993224071350665, 
        "Vint" -> 1156.426206829522|>, <|
       "well" -> 1, "x" -> 2, "dh" -> -31., "dt" -> 0.0682762191497114, 
        "Vint" -> 454.03802943489495`|>, <|
       "well" -> 1, "x" -> 3, "dh" -> -137., "dt" -> 0.12621839103185115`, 
        "Vint" -> 1085.4202694235591`|>, <|
       "well" -> 2, "x" -> 1, "dh" -> -106., "dt" -> 0.09494440962733951, 
        "Vint" -> 1116.4427733665848`|>, <|
       "well" -> 2, "x" -> 2, "dh" -> -47., "dt" -> 0.06834837283661842, 
        "Vint" -> 687.6535321821036|>, <|
       "well" -> 2, "x" -> 3, "dh" -> -146., "dt" -> 0.13629629629629633`, 
        "Vint" -> 1071.1956521739128`|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "well"} -> 1, {All, "x"} -> 
        1, {All, "dh"} -> 1, {All, "dt"} -> 1, {All, "Vint"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "well" -> TypeSystem`PackageScope`AtomShape[34], "x" -> 
            TypeSystem`PackageScope`AtomShape[34], "dh" -> 
            TypeSystem`PackageScope`AtomShape[60], "dt" -> 
            TypeSystem`PackageScope`AtomShape[60], "Vint" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 5, {All}]], 6, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"well", "x", "dh", "dt", "Vint"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 6], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "well"} -> 1, {All, "x"} -> 
        1, {All, "dh"} -> 1, {All, "dt"} -> 1, {All, "Vint"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "well" -> TypeSystem`PackageScope`AtomShape[34], "x" -> 
            TypeSystem`PackageScope`AtomShape[34], "dh" -> 
            TypeSystem`PackageScope`AtomShape[60], "dt" -> 
            TypeSystem`PackageScope`AtomShape[60], "Vint" -> 
            TypeSystem`PackageScope`AtomShape[60]|>], 
          DirectedInfinity[1], 5, {All}]], 6, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"well", "x", "dh", "dt", "Vint"}, {
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 6], "Path" -> {}, "DisplayedRowCount" -> 6, 
     "DisplayedColumnCount" -> 5, "DataRowCount" -> 6, "DataColumnCount" -> 5,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["well", 
                  Style[
                  "well", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "well"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "well"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["x", 
                  Style[
                  "x", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "x"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "x"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["dh", 
                  Style[
                  "dh", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "dh"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "dh"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["dt", 
                  Style[
                  "dt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "dt"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "dt"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Vint", 
                  Style[
                  "Vint", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Vint"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Vint"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["well"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["x"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-104.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["dh"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0899322"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["dt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1156.43"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Vint"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["well"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["x"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-31.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["dh"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0682762"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["dt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["454.038"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Vint"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["well"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["x"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-137.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["dh"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.126218"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["dt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1085.42"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Vint"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["well"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["x"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-106.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["dh"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0949444"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["dt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1116.44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Vint"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["well"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["x"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-47.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["dh"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0683484"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["dt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["687.654"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Vint"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["well"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["x"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-146.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["dh"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.136296"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["dt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1071.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Vint"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{309., {122.56083996989764`, 129.43916003010236`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{309., {122.56083996989764`, 129.43916003010236`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.882356663935607*^9, 3.8824110606150303`*^9, 
  3.8824119228576307`*^9, 3.8824123436939187`*^9, 3.8824200825870485`*^9, 
  3.882424192219434*^9, 3.882435563280259*^9, 3.882437842453717*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"a30e2cc8-77f3-4245-bc7a-90a14b00eaaa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["HT", "Subsection",
 CellChangeTimes->{{3.8810474613889575`*^9, 3.8810474817186756`*^9}, {
  3.882070366746173*^9, 3.8820703668933253`*^9}},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"5441c87a-7fbc-448e-b976-a1a6d4d1d4f6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "t", "]"}], "\[IndentingNewLine]", 
 RowBox[{"lmSetHT", "=", 
  RowBox[{
   RowBox[{"HT", "[", 
    RowBox[{"datasetWells", ",", " ", "t"}], "]"}], "[", 
   RowBox[{"[", "\"\<lmSet\>\"", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"dataWellsHT", "=", 
  RowBox[{
   RowBox[{"HT", "[", 
    RowBox[{"datasetWells", ",", " ", "t"}], "]"}], "[", 
   RowBox[{"[", "\"\<dataWellsHT\>\"", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8819935989701085`*^9, 3.8819936510254517`*^9}, {
  3.8819937428818703`*^9, 3.8819937443023057`*^9}, {3.8819952701271343`*^9, 
  3.8819952704845266`*^9}, {3.8820172518654284`*^9, 3.882017253129938*^9}, {
  3.882423213751682*^9, 3.8824232139409094`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"9f9e15f2-1d6c-42f3-a889-4c11f1086c43"],

Cell[BoxData[
 TemplateBox[{
  "LinearModelFit", "rank", 
   "\"The rank of the design matrix \\!\\(\\*RowBox[{\\\"1\\\"}]\\) is less \
than the number of terms \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in the model. The \
model and results based upon it may contain significant numerical error.\"", 
   2, 76, 1, 17801562086585284568, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.882356664020864*^9, 3.8824110606658545`*^9, 3.8824119229045095`*^9, 
   3.8824123437408905`*^9, {3.882420095786416*^9, 3.882420098758582*^9}, 
   3.882423214382588*^9, 3.8824241968341765`*^9, 3.8824355683502665`*^9, 
   3.8824378426617675`*^9},
 CellLabel->
  "During evaluation of \
In[75]:=",ExpressionUUID->"09070583-6044-4af2-9983-6dd02cae90cc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"FittedModel", "[", 
     TagBox[
      PanelBox[
       TagBox["14.5`",
        Short[#, 2]& ],
       FrameMargins->5],
      Editable -> False], "]"}],
    InterpretTemplate[
    FittedModel[{
      "Linear", {14.5, 0.}, {{$CellContext`t}, {1, $CellContext`t}}, {0, 
       0}}, {{1., 1.}}, {{0., 6.}, {0., 23.}}, {{1., 0.}, {1., 0.}}, 
      Function[Null, 
       Internal`LocalizedBlock[{$CellContext`t}, #], {HoldAll}]]& ],
    Editable->False,
    SelectWithContents->True,
    Selectable->True], ",", 
   TagBox[
    RowBox[{"FittedModel", "[", 
     TagBox[
      PanelBox[
       TagBox[
        RowBox[{
         RowBox[{"-", "367.14168973428485`"}], "+", 
         RowBox[{"2992.716378452951`", " ", "t"}]}],
        Short[#, 2]& ],
       FrameMargins->5],
      Editable -> False], "]"}],
    InterpretTemplate[
    FittedModel[{
      "Linear", {-367.14168973428485`, 
       2992.716378452951}, {{$CellContext`t}, {1, $CellContext`t}}, {0, 
       0}}, {{1., 1.}}, {{0.08993224071350665, -98.}, {
      0.09494440962733951, -83.}}, {{1., 0.08993224071350665}, {1., 
      0.09494440962733951}}, 
      Function[Null, 
       Internal`LocalizedBlock[{$CellContext`t}, #], {HoldAll}]]& ],
    Editable->False,
    SelectWithContents->True,
    Selectable->True], ",", 
   TagBox[
    RowBox[{"FittedModel", "[", 
     TagBox[
      PanelBox[
       TagBox[
        RowBox[{
         RowBox[{"-", "97.88307995241661`"}], "-", 
         RowBox[{"196.68303499373985`", " ", "t"}]}],
        Short[#, 2]& ],
       FrameMargins->5],
      Editable -> False], "]"}],
    InterpretTemplate[
    FittedModel[{
      "Linear", {-97.88307995241661, -196.68303499373985`}, \
{{$CellContext`t}, {1, $CellContext`t}}, {0, 0}}, {{1., 1.}}, {{
      0.15820845986321805`, -129.}, {0.16329278246395793`, -130.}}, {{1., 
      0.15820845986321805`}, {1., 0.16329278246395793`}}, 
      Function[Null, 
       Internal`LocalizedBlock[{$CellContext`t}, #], {HoldAll}]]& ],
    Editable->False,
    SelectWithContents->True,
    Selectable->True], ",", 
   TagBox[
    RowBox[{"FittedModel", "[", 
     TagBox[
      PanelBox[
       TagBox[
        RowBox[{
         RowBox[{"-", "78.41091123016993`"}], "-", 
         RowBox[{"659.5336838962354`", " ", "t"}]}],
        Short[#, 2]& ],
       FrameMargins->5],
      Editable -> False], "]"}],
    InterpretTemplate[
    FittedModel[{
      "Linear", {-78.41091123016993, -659.5336838962354}, {{$CellContext`t}, {
        1, $CellContext`t}}, {0, 0}}, {{1., 1.}}, {{
      0.2844268508950692, -266.}, {0.29958907876025426`, -276.}}, {{1., 
      0.2844268508950692}, {1., 0.29958907876025426`}}, 
      Function[Null, 
       Internal`LocalizedBlock[{$CellContext`t}, #], {HoldAll}]]& ],
    Editable->False,
    SelectWithContents->True,
    Selectable->True]}], "}"}]], "Output",
 CellChangeTimes->{
  3.882356664089858*^9, 3.882411060726517*^9, 3.8824119229201317`*^9, 
   3.8824123437578783`*^9, {3.882420095811402*^9, 3.8824200987745733`*^9}, 
   3.882423214408162*^9, 3.8824241968810596`*^9, 3.8824355683971386`*^9, 
   3.882437842681756*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"e1534130-255a-4cc0-807e-6895da604eb1"],

Cell[BoxData[
 TemplateBox[{
  "LinearModelFit", "rank", 
   "\"The rank of the design matrix \\!\\(\\*RowBox[{\\\"1\\\"}]\\) is less \
than the number of terms \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in the model. The \
model and results based upon it may contain significant numerical error.\"", 
   2, 77, 2, 17801562086585284568, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.882356664020864*^9, 3.8824110606658545`*^9, 3.8824119229045095`*^9, 
   3.8824123437408905`*^9, {3.882420095786416*^9, 3.882420098758582*^9}, 
   3.882423214382588*^9, 3.8824241968341765`*^9, 3.8824355683502665`*^9, 
   3.882437842690754*^9},
 CellLabel->
  "During evaluation of \
In[75]:=",ExpressionUUID->"f1bf9298-1085-4d4b-9fde-226273aacfdb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.`", ",", "6.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.`", ",", "23.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.08993224071350665`", ",", 
       RowBox[{"-", "98.`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.09494440962733951`", ",", 
       RowBox[{"-", "83.`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.15820845986321805`", ",", 
       RowBox[{"-", "129.`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.16329278246395793`", ",", 
       RowBox[{"-", "130.`"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.2844268508950692`", ",", 
       RowBox[{"-", "266.`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.29958907876025426`", ",", 
       RowBox[{"-", "276.`"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.882356664089858*^9, 3.882411060726517*^9, 3.8824119229201317`*^9, 
   3.8824123437578783`*^9, {3.882420095811402*^9, 3.8824200987745733`*^9}, 
   3.882423214408162*^9, 3.8824241968810596`*^9, 3.8824355683971386`*^9, 
   3.8824378427067423`*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"9bfa9301-02fb-4e04-8d34-2cf239989aea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotHT", "[", 
  RowBox[{"dataWellsHT", ",", "lmSetHT", ",", " ", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.882008647747284*^9, 3.8820086515445375`*^9}, {
  3.8820743784045124`*^9, 3.8820743793233347`*^9}, {3.8824232110774374`*^9, 
  3.8824232112246633`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"385cab80-113c-4223-ad29-dacd811f0378"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{{0.08993224071350665, -98.}, {
        0.09494440962733951, -83.}}]}, {{}, {}}}, {{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwV0XtUjGkcB/BpzlBGutFlWV2WGAy1GvecJ5cuQ+X2zvu+GNaSpJBkXbaE
tESyu0o1UTscmRRbkn3eLtv+hol02tC4xGJ1k7YwlGpL7G//eM5zPuc8z3O+
39/jtj5y+UaxSCQKwvX/7t0uO1sziBIIop8+7+fBrmV3xEt07qi+7GL0q+c3
p4kGU5La5k02o1PrQqq90CE/XN9fF8dDe4m2MxNt+fufopx9PGQmOvltNqdE
LW8WL4rhocfdon3QEEp6pbbmqbt4KFrXqiCWlCiqwq1lW3koHz7iF+/hlCRc
+U1dyvOwJSdk540vKAk8PnW2zpeHTdP8D01wpYSPZxs6p/LQLc4IGzmeEp9W
u8o8Zx4mFViWpE6mRDv388zyoTx0Zbz9W6Og5Kk4oW1GDwcWB0N84uZgnqbC
DcObOND7DwztmIfvXRu2TXmXA+tAya/NAZR4douvtZVxIPbwKAtdQskBmex4
cy4HPjYdZlUqSkbs+iAnaRzYeTi6FKsx79TVUkk8B8fkoboJGyjZ/sK0e0wk
B2mbxgyeGI79Bpy/uryKg9faHdlDojDvtA+n0vw4+EdoObtjN857bb/miRcH
MVa3YkLjKHHt0TxJdOGgaH4NNCXgvA6E5f9sycG+YvK0PQn/Y+8dQdLLQspY
36+NJ7Fv8vMfHzWxEBy97d0CDeZLGd0jucdC9udBiURLyTrzD5lnyvF8uP6o
4QIlsq0fa09cZMFotKqUXca+b/JrXqSxoPu++qFjMSVOzzsHZ8Wz4CbKW/FT
KSV7/oi4dzWSBY8bPRdS9JQUW8fWK1azkJjwyGtXFfaLUVy092fhyNi/JjXW
UiKv/1K6TMHCSHFQX/0DSiTns3TdLiysqGj0WvmUkqXfBj/otmTh4R6pTmik
pHmWrobtU8Hr7VrTuTZKmIMZIreXKsjzX5XjYKLEu7TE4GtUQf/qeE/7Hnxv
fXTl/QoVvA+uHZc1gPPsV7MV+SpQ+FxiJRKBQMGbQnONCqSRvepuqUBcjU4B
ZQkqOBwbVhtlK5Cu1h2Rt6NUkHbLz2GPk0ByIzYa561RwTsbmr7GRSBaqchs
pBI9c3FCjbtAbE5XVwROx/vZQf435QJRZ04uaXNTATRGf6f0EsjYJFjQYKUC
X3f5s/xZApGn96fP/MjA2pzlozQ+Ahlhd0fW18rAaEmWwdpfINvj6pQODxg4
3GV2Vo5eyBWa9PcZMDWH7lOibTxPpG9FGyo9px9CX2pQthiMDIQfMei60R0L
9Qei6xgQpB3HngUIJGRoIb17h4HltnOW5S/CfBnJ7knVDJSbaSdXoWVRETXT
0ePeS6Qt6F6lMrrxNgP/1tVed14skIx+iX4WWpu6XnESfX9trPrVLQZeOx5z
3BsokKXuESm+lQywFm87T6FdPwXMfmdgAHpX3C1Cmx6OaziDTn08+mgH+nhi
45SuGwzMPn2l75sggVS1r6w+d52B80kOj2LRGYYZUcFoq9iYqxp0WJa9U5+e
gQa17xYj2mLJvY3L0IuC8gJM6PrxBZYDwEDxXGv3YcECOS9KvpqLdp6y02wi
eufj8FUMOtH58TM/9MKiADMR+j923GXZ
          "]]},
        Annotation[#, "Charting`Private`Tag$12557#1"]& ]}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.08982782052780222, -82.16666666666684},
    DisplayFunction->Identity,
    Frame->True,
    FrameLabel->{
      FormBox["\"t, s\"", TraditionalForm], 
      FormBox["\"h, m\"", TraditionalForm]},
    FrameStyle->Directive[14, 
      GrayLevel[0]],
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{{0.08993224071350665, 0.09494440962733951}, {-98., -83.}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->500,
    LabelStyle->Directive[14, 
      GrayLevel[0.5]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"Horizon 1. h = f(t)\"", TraditionalForm],
    PlotRange->{{0.08982782052780222, 0.09494440962733951}, {-98., -83.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{{0.15820845986321805`, -129.}, {
        0.16329278246395793`, -130.}}]}, {{}, {}}}, {{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwV0nswFVgcwHGP1A153Eweu3c3e9m82cTGTT+pFCWyXsOk49okaxMq6c12
RxZJZOxqyWVMTwqbZqNO9bNqE5vLoKTyiGtJorS2tD9/nDnz+euc7/x+ptI4
/21qKioqPnRmbwfRbW7jjqCY1FRRWcy4acjOdhfyu1HJT2pkYe5nw55k48HY
uRrkCcHehRHk8K5mbU3ytUmrqNPk4fpTxgZkSVOe1gxZNc3E0YLseSA6qGUV
gr2xVZQfOaxLdyR+NUKGm1fTWXLj5I7Uj54I86c1v/Q1ZXxgrG1iozeCwb09
/ePkbO+yhgwfhFuiQ/tyvmJ8/5wjavqbERwG5+WuFDNuWBRjEhqAYHtHsvg5
+W1+xG/KYITXehOO2WaMs7G6o9FhCP6Dnosk5owfXGIJF8MRPFpW//CE/Pjm
2ehlUoQpK/RM/5pxpZPljynbEFwLRvOslzAu017UWh+N8HlW9dW/yFIPHbl7
LMLdtx8CkiwYHw829EmLQ3gfNxZjZMn47SbrSINEhDdbts1rJItKyrpO7kXI
VCQlJFgxbh1oZ/0oGaEq1NFPaE090XcHgw8hFAcm1NwiHwjbcUR+FMFIGpoR
YcN4/WWTVMdjCMG9DUN6toxnbnUYqE5DcB5+aFBP1h4PEr//GaFE/Uj1FjvG
m18cb0o9QfM8Wd2pZc/4qqoHfo9yEHLsc3ZVzLo3wUn3NMJYoFaHjwPjqfHm
stwCBOFrAU6T9zwfqnxSSH2FleIz3zB+vqJ2bUwxgsuNrvkbljK+o3tYMiRH
8JWevfmO/ERpt8CqnHpN9F7mOzJ+IuiwV9V5hNB16nlrltG+yHvYzCUEP1lx
zUvywKbSTpcrCAPenaUyJ8aNQhNv3KhGcD+WZ7zUmfGPawKSVWsRLFr+VVWQ
xdnu8qw/ENqzenelfMv4f9fdyp/WI+iG7/Y3W874Vo9iTdFtBOXvcjUkz7HW
fixHhPSUAJd4F9q3ifRjI40I18Ire4Wu9B+Thb8efIBwrjJLeIdsJFfR+9BM
8z4u0N8pYfyV4BODVoSQBJtUnRWMz20RiO63I7j9rUiuI7fsFtcs6kKoALP+
cDfGzffLL37XjcCd9UUz5LoeG52OZwj5JSndF1YyriG+t+GLPoRpUaHORmA8
qM1izIZcKWM9m8jlsvRTEvL3o+YVm8nrh7y7QsjNdVd8gsmZlx9G5ZJLwv7M
lJKFyxUpgn6Edb+MayaTF/v01L4h5xmsn1dOjp9ZGaY6gOB1cEHHOfKdyuIZ
XfJMX2v5RXKkMGKtLXl79RbPq7Pvd/S1bie7+ifK6si2UuVoN/lFdpG6gnx4
oXfOP+T8qUhFO7kZLyybJntvtSztJO9aEnvA8CVCjV2NRw+5ZuSVwJ+c9vB+
ipKsUeR7iZFXOGVvHpnt973iG0cePxNgOkaeuhqfn0kOjX3GJ2f7I1tdCsm6
bWUnp8gFBo5Pz5NREsOmycqG3KPXyftK7R0+kl2TJsWNZDutt58+kf8Hjmtl
bQ==
          "]]},
        Annotation[#, "Charting`Private`Tag$12909#1"]& ]}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.15810253647570321`, -128.94444444444474`},
    DisplayFunction->Identity,
    Frame->True,
    FrameLabel->{
      FormBox["\"t, s\"", TraditionalForm], 
      FormBox["\"h, m\"", TraditionalForm]},
    FrameStyle->Directive[14, 
      GrayLevel[0]],
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{{0.15820845986321805`, 0.16329278246395793`}, {-129., -130.}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->500,
    LabelStyle->Directive[14, 
      GrayLevel[0.5]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"Horizon 2. h = f(t)\"", TraditionalForm],
    PlotRange->{{0.15810253647570321`, 0.16329278246395793`}, {-130., -129.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{{0.2844268508950692, -266.}, {
        0.29958907876025426`, -276.}}]}, {{}, {}}}, {{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwV0X1UzXccwPGLbOhhFJaHureUckMpXdlNH1vYWDlNrTvloTx0Ig/fn3RZ
Ih1XUceSZQ0tqywXdSXSbMqnJ5QWvr/bgxZxJQ8pIk1Ntc/++J7vef3x+Z73
+Xxt1mxdtn6oRCLxpfP/bVsxRGcym8P6mwqJ5FeGafVTnGVkixynwyZkk+cL
893Ipftksgnkf0wTC4LI1jBqviu5RmVepCU3Ft6PXUdWt9viAncOX2drBm+S
q80X8BgFB5c9fCAlk2FkaHzPSw8OH9y29E/JZuhSWeKl8OKw1aA4kZTD0Dvm
XaO9N4fsZz7qK2cYXlJdPfPhSw49qUJQQy7DlF5FtKcvBzuNQ4tHPsOKzvPp
tss4jL0lzwy5yHDt2eYSQcWhJeDasJrLDEMSj32qXcGhSrNmq8MfDC8WB5Rp
QjlEmfhbLi5muK2ofFN1GPXU60N1yDDBaNaGyxEcvHuzn90rZ9gbNTP9IONw
tjRu57vrDBvzWmorozh01LzWBlQzNJ2b7K+N5tDlnDc++i+GusQ3DW9jOdyp
67N7fIdhrqTtyNT9HGptVJ6eeoaS6oaTgwc5HKqUpAQ3MCxdvjv382QOjrnK
+JImet/TxlieykHzovz3p/cZBrft3LDrGIc/I+4nBTxiqLwUMnAxg8OYH4eH
X2hlKNQtenIkm+bNd8XpnzIcW/zwVpOWwyR9nFLZTn3vdxpV5VFPR51reCft
R5UZmVFA+83zcNvfxdB+925DcxGHb/Kn6590M5zXo8ouvUr/PWpLgcl7hmXu
bWs/KeNgop0/a8e/DE8dMwpecIODut3myt0Bhs1+NqekNRyy4v32vBki4N7a
rpdr73LQrhvdGjhcwOiTmLC0ngM7bpUQN0JAnipdLvubw3fquW7pxgL+5Ocq
D37IYeLRttg+MwHzV3v7ej7hkGH8aKTUXECF+wgW/4JDf8Wm2QnjBDRfdatV
/YqDVf3C9EJLAX3OWR9e2s1hxaEZpvpJAr4psVcm93LYkZBjrZAK2Gnv5KEe
4OB/b9PmVbYCBvq3zr4+TIRRWypWVNsLOPm3GeH9I0R4pJV/O3WagB5Lojqa
TEX4Xvkg8avpAmIh22ZjIUL76CmhOmcBM7ZvXGxmKYLMq3B7k6uA91TdgYbJ
IkSOCUzpcRcwbojrOqmtCFkOB5YGzhUwdmBz+VAHEY4c/XhxjKeArVFmaZbk
CekGVSJ5SYdu40xyVlZx2M/k8c2vxgSRC85Hai6RdVeEkAtkfVXLtZfk5u1R
/asdRRg3UKRYOY9622PmFE8TIS0s3M7Li/rWWBmLZOlmbzcfslFT8YNn5NOR
1l8EkW/fHNg/Vi5C0V79ajU5LGevPoLceHz+CR05NVQjTHSivtuW5lIQsK/R
bqELObPurWwGOcSv0nIRWd5c66wkO8FHKJA/e67xVZHLJh8wqyIHDes6kEx2
THU0PCAbRtak/UL+wbiqsJscMfp0zjny8r6RK2XTRdhltbLiBrlEOOuiIA+1
8xDryHbPlxj5kJPkFobH5MSQ9oZQssWsztdd5NcNSed2kE/MqRocJP8HSzJw
kA==
          "]]},
        Annotation[#, "Charting`Private`Tag$13254#1"]& ]}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.2841109711478787, -265.444444444445},
    DisplayFunction->Identity,
    Frame->True,
    FrameLabel->{
      FormBox["\"t, s\"", TraditionalForm], 
      FormBox["\"h, m\"", TraditionalForm]},
    FrameStyle->Directive[14, 
      GrayLevel[0]],
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{{0.2844268508950692, 0.29958907876025426`}, {-266., -276.}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->500,
    LabelStyle->Directive[14, 
      GrayLevel[0.5]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"Horizon 3. h = f(t)\"", TraditionalForm],
    PlotRange->{{0.2841109711478787, 0.29958907876025426`}, {-276., -266.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.8823566641580577`*^9, 3.882411061038128*^9, 
  3.8824119231207314`*^9, 3.8824123439477835`*^9, 3.8824201035632167`*^9, 
  3.8824242019944644`*^9, 3.8824355764463696`*^9, 3.8824378429017677`*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"015894bb-4ff9-42aa-8094-43b35a584e96"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["VT", "Subsection",
 CellChangeTimes->{{3.8810474613889575`*^9, 3.8810474817186756`*^9}, {
  3.882070366746173*^9, 3.8820703668933253`*^9}, {3.882356478763571*^9, 
  3.882356480874771*^9}},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"4b1924fb-ed3c-4d1f-a08a-69444481e78a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "t", "]"}], "\[IndentingNewLine]", 
 RowBox[{"lmSetVT", "=", 
  RowBox[{
   RowBox[{"VT", "[", 
    RowBox[{
    "datasetWells", ",", "datasetVelModel", ",", "timeNH", ",", " ", "t"}], 
    "]"}], "[", 
   RowBox[{"[", "\"\<lmSetVT\>\"", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"setVT", "=", 
  RowBox[{
   RowBox[{"VT", "[", 
    RowBox[{
    "datasetWells", ",", "datasetVelModel", ",", "timeNH", ",", " ", "t"}], 
    "]"}], "[", 
   RowBox[{"[", "\"\<setVT\>\"", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"atbt", "=", 
  RowBox[{
   RowBox[{"VT", "[", 
    RowBox[{
    "datasetWells", ",", "datasetVelModel", ",", "timeNH", ",", " ", "t"}], 
    "]"}], "[", 
   RowBox[{"[", "\"\<atbt\>\"", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fitParams", "=", 
  RowBox[{
   RowBox[{"VT", "[", 
    RowBox[{
    "datasetWells", ",", "datasetVelModel", ",", "timeNH", ",", " ", "t"}], 
    "]"}], "[", 
   RowBox[{"[", "\"\<fitParams\>\"", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8824180129626307`*^9, 3.882418014297634*^9}, {
  3.8824219185135083`*^9, 3.8824219355601196`*^9}, {3.882422070181552*^9, 
  3.8824220738973317`*^9}, {3.8824221675561824`*^9, 3.882422176643319*^9}, {
  3.8824231979053483`*^9, 3.8824231982432885`*^9}, {3.8824232513021903`*^9, 
  3.8824232585946937`*^9}, {3.8824233250493345`*^9, 3.8824233364136014`*^9}, {
  3.8824234076623697`*^9, 3.8824234077452316`*^9}, {3.882424275074729*^9, 
  3.8824242793514795`*^9}, {3.8824244126952024`*^9, 3.882424415404211*^9}, {
  3.882435773263036*^9, 3.8824358175773687`*^9}, {3.88243592708421*^9, 
  3.882435936353736*^9}, {3.882436488021096*^9, 3.882436498755621*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"00eb4e5a-5012-441d-ab86-d0d17cf9e8df"],

Cell[BoxData[
 TemplateBox[{
  "LinearModelFit", "rank", 
   "\"The rank of the design matrix \\!\\(\\*RowBox[{\\\"1\\\"}]\\) is less \
than the number of terms \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in the model. The \
model and results based upon it may contain significant numerical error.\"", 
   2, 80, 3, 17801562086585284568, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8824378430805235`*^9},
 CellLabel->
  "During evaluation of \
In[79]:=",ExpressionUUID->"83ebe54a-73fe-40b0-b15b-deb3fdb16c16"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"FittedModel", "[", 
     TagBox[
      PanelBox[
       TagBox["1000.`",
        Short[#, 2]& ],
       FrameMargins->5],
      Editable -> False], "]"}],
    InterpretTemplate[
    FittedModel[{
      "Linear", {1000., 0.}, {{$CellContext`t}, {1, $CellContext`t}}, {0, 
       0}}, {{1., 1.}}, {{0., 1000}, {0., 1000}}, {{1., 0.}, {1., 0.}}, 
      Function[Null, 
       Internal`LocalizedBlock[{$CellContext`t}, #], {HoldAll}]]& ],
    Editable->False,
    SelectWithContents->True,
    Selectable->True], ",", 
   TagBox[
    RowBox[{"FittedModel", "[", 
     TagBox[
      PanelBox[
       TagBox[
        RowBox[{"1999.9999999998759`", "\[VeryThinSpace]", "+", 
         RowBox[{"1.3434837449177377`*^-9", " ", "t"}]}],
        Short[#, 2]& ],
       FrameMargins->5],
      Editable -> False], "]"}],
    InterpretTemplate[
    FittedModel[{
      "Linear", {1999.9999999998759`, 
       1.3434837449177377`*^-9}, {{$CellContext`t}, {1, $CellContext`t}}, {0, 
       0}}, {{1., 
      1.}}, {{0.08993224071350665, 2000}, {0.09494440962733951, 2000}}, {{1., 
      0.08993224071350665}, {1., 0.09494440962733951}}, 
      Function[Null, 
       Internal`LocalizedBlock[{$CellContext`t}, #], {HoldAll}]]& ],
    Editable->False,
    SelectWithContents->True,
    Selectable->True], ",", 
   TagBox[
    RowBox[{"FittedModel", "[", 
     TagBox[
      PanelBox[
       TagBox[
        RowBox[{"2999.999999999486`", "\[VeryThinSpace]", "+", 
         RowBox[{"3.195339203587372`*^-9", " ", "t"}]}],
        Short[#, 2]& ],
       FrameMargins->5],
      Editable -> False], "]"}],
    InterpretTemplate[
    FittedModel[{
      "Linear", {2999.999999999486, 
       3.195339203587372*^-9}, {{$CellContext`t}, {1, $CellContext`t}}, {0, 
       0}}, {{1., 
      1.}}, {{0.15820845986321805`, 3000}, {0.16329278246395793`, 3000}}, {{
      1., 0.15820845986321805`}, {1., 0.16329278246395793`}}, 
      Function[Null, 
       Internal`LocalizedBlock[{$CellContext`t}, #], {HoldAll}]]& ],
    Editable->False,
    SelectWithContents->True,
    Selectable->True], ",", 
   TagBox[
    RowBox[{"FittedModel", "[", 
     TagBox[
      PanelBox[
       TagBox[
        RowBox[{"3999.9999999997563`", "\[VeryThinSpace]", "+", 
         RowBox[{"8.345030526322792`*^-10", " ", "t"}]}],
        Short[#, 2]& ],
       FrameMargins->5],
      Editable -> False], "]"}],
    InterpretTemplate[
    FittedModel[{
      "Linear", {3999.9999999997563`, 
       8.345030526322792*^-10}, {{$CellContext`t}, {1, $CellContext`t}}, {0, 
       0}}, {{1., 
      1.}}, {{0.2844268508950692, 4000}, {0.29958907876025426`, 4000}}, {{1., 
      0.2844268508950692}, {1., 0.29958907876025426`}}, 
      Function[Null, 
       Internal`LocalizedBlock[{$CellContext`t}, #], {HoldAll}]]& ],
    Editable->False,
    SelectWithContents->True,
    Selectable->True]}], "}"}]], "Output",
 CellChangeTimes->{3.882437843113505*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"39fccf2e-1fd8-49a6-a6f0-f59b0c2d74b1"],

Cell[BoxData[
 TemplateBox[{
  "LinearModelFit", "rank", 
   "\"The rank of the design matrix \\!\\(\\*RowBox[{\\\"1\\\"}]\\) is less \
than the number of terms \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in the model. The \
model and results based upon it may contain significant numerical error.\"", 
   2, 81, 4, 17801562086585284568, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8824378432374325`*^9},
 CellLabel->
  "During evaluation of \
In[79]:=",ExpressionUUID->"1093ea49-1d5c-4fed-929d-c73582b5d592"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0.`", ",", "1000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0.`", ",", "1000"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "0.08993224071350665`", ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0.09494440962733951`", ",", "2000"}], "}"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "0.15820845986321805`", ",", "3000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0.16329278246395793`", ",", "3000"}], "}"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "0.2844268508950692`", ",", "4000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "0.29958907876025426`", ",", "4000"}], "}"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8824378432554417`*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"6c751e1f-67e9-42f3-9ca1-6369bd1f4725"],

Cell[BoxData[
 TemplateBox[{
  "LinearModelFit", "rank", 
   "\"The rank of the design matrix \\!\\(\\*RowBox[{\\\"1\\\"}]\\) is less \
than the number of terms \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in the model. The \
model and results based upon it may contain significant numerical error.\"", 
   2, 82, 5, 17801562086585284568, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8824378433883457`*^9},
 CellLabel->
  "During evaluation of \
In[79]:=",ExpressionUUID->"ba62877f-6648-4910-a965-37e87112fcac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"21", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"27", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"33", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"36", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"39", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"42", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"45", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"48", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"51", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"54", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"57", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"60", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"63", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"66", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"69", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"72", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"75", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"78", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"81", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"84", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"87", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"90", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"93", ",", "0.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"96", ",", "0.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "16.175615839624026`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "16.508594242216713`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "17.85447481679534`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "17.901784342560433`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "19.210842743613743`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "19.57818037900416`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "19.818744179999054`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"21", ",", "20.626567422673066`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "20.745187298861843`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"27", ",", "20.748518650930393`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "20.189751485574227`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"33", ",", "20.74352066205217`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"36", ",", "20.239004672273992`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"39", ",", "19.653515217292558`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"42", ",", "19.47871078294987`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"45", ",", "18.865136828283976`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"48", ",", "19.08066569383029`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"51", ",", "18.622242247819877`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"54", ",", "18.66492592633135`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"57", ",", "18.24081568760119`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"60", ",", "17.992834305312652`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"63", ",", "17.992834305312652`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"66", ",", "18.028881839094517`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"69", ",", "18.70865531668384`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"72", ",", "18.857225510205748`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"75", ",", "19.0402285609307`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"78", ",", "19.767960671062927`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"81", ",", "21.002928489157146`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"84", ",", "21.095834150970614`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"87", ",", "21.297851788495347`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"90", ",", "23.132221123873656`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"93", ",", "23.490004810331676`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"96", ",", "24.354728598013377`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "75.08975031736709`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "70.7293822518161`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "70.0942342634518`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "66.81874327425979`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "66.22552325381744`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "63.7618582665363`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "61.5221924927796`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"21", ",", "61.84165900855127`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "61.463007051641796`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"27", ",", "61.34603697540996`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "60.53632817017919`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"33", ",", "62.98370777650915`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"36", ",", "64.11350702591722`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"39", ",", "65.5545710607485`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"42", ",", "67.95800740784898`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"45", ",", "70.05734428673573`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"48", ",", "74.10275099258698`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"51", ",", "75.19304326417442`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"54", ",", "77.1938906512281`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"57", ",", "79.31702289687563`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"60", ",", "79.98254459299709`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"63", ",", "79.53198289838944`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"66", ",", "79.99359841497254`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"69", ",", "80.23351894363421`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"72", ",", "77.3577079604832`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"75", ",", "75.50743923760007`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"78", ",", "73.96795516556207`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"81", ",", "73.1759041310593`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"84", ",", "68.76193594463452`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"87", ",", "65.07983722019017`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"90", ",", "64.85551759204623`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"93", ",", "62.46296557180489`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"96", ",", "60.47029501090961`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "323.59453404056137`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "288.76541869159945`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "263.5629565150459`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "234.65817547173438`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "219.6562914458634`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "206.20698602596443`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "194.56006452019545`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"21", ",", "192.65489327565444`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "195.29773891068675`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"27", ",", "198.5290009709033`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "200.36322440142948`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"33", ",", "211.87764323881504`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"36", ",", "222.84492941072946`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"39", ",", "234.97548891634736`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"42", ",", "248.70958896199002`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"45", ",", "257.7729056109549`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"48", ",", "273.6713458030541`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"51", ",", "291.0456577882895`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"54", ",", "305.1097376326817`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"57", ",", "315.786477358337`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"60", ",", "329.9840236081739`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"63", ",", "346.29104301631514`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"66", ",", "359.01446444989944`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"69", ",", "347.9797061189019`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"72", ",", "336.68517913867674`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"75", ",", "314.5623987546255`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"78", ",", "293.5574988003409`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"81", ",", "271.61204420174954`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"84", ",", "241.95459401129625`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"87", ",", "219.13551151497214`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"90", ",", "204.00762838071026`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"93", ",", "187.22354046885113`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"96", ",", "175.24531341734604`"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8824378434233265`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"d7ccde32-36fa-4b1c-8871-c76ebdec0a5c"],

Cell[BoxData[
 TemplateBox[{
  "LinearModelFit", "rank", 
   "\"The rank of the design matrix \\!\\(\\*RowBox[{\\\"1\\\"}]\\) is less \
than the number of terms \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in the model. The \
model and results based upon it may contain significant numerical error.\"", 
   2, 83, 6, 17801562086585284568, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8824378435997143`*^9},
 CellLabel->
  "During evaluation of \
In[79]:=",ExpressionUUID->"35a3fe04-7392-41ac-ac5d-a9667eabc1f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1000.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1999.9999999998759`", ",", "1.3434837449177377`*^-9"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2999.999999999486`", ",", "3.195339203587372`*^-9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3999.9999999997563`", ",", "8.345030526322792`*^-10"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8824378436167097`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"c697bc3d-051e-4f9b-9724-b293c2cf9895"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotVT", "[", 
  RowBox[{"setVT", ",", "lmSetVT", ",", " ", "t"}], "]"}]], "Input",
 CellLabel->"In[84]:=",ExpressionUUID->"1a50b413-32ac-4a78-b33b-800d4996ef11"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{{0.08993224071350665, 2000.}, {0.09494440962733951, 
        2000.}}]}, {{}, {}}}, {{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxN0n1MzHEYAPDrXPRyrksvl7fyUikdVyvv9JyXnJdKXcWiYnpdMyFilSaS
wxh6UUOv65Uwq31/klYTUu1mqqPJW2VUV3pzR7lS2/c8nu3Zs8/27PnjeZ6F
B6OkoWwWi7V3Mqfq+l673CZdAoMTkwHZYrWNXq+uPoEh6kcHvrkAF72qUtP9
1AhdZWKavd6EwDB1akCV/hlz9KGCkOPPZqMj+1rjVPPQ4Ssk5+wXEBihXn77
x8/cxWgVOyNizhK0wwPu49RlBH5S860T3AVO6JGMH58yXQioqMe5S/nc1Wi9
xBBxwjp0SJejbYUrATV1rURjqNyI/v6KFRjhhjZy59zv2oZmi0RPwnYR+EWd
m30l6KYULeYrder9CPymLslO5Lv6o2eJBFblAWh5mWtn/34Co9SXhGFF9sFo
fkOdoiQMnR6+ePrSSHRfzrEs/aMExqiVQuEC1+PoHuZr7rGTBP5o7xusuKqM
RcfxXsaFJaDTi7dbFiQS0Gj7NzXVdCahM8bOy8Nl6NPl0N57GZ1i7ebUfIPA
OPVAo/91w3S0Z/Thwc2ZBCaoY9ZUVtXeRmdN6MogB21R0al3Np8AayrEk/Mj
ay/WFaKdrSKKVCXo5mbec7sydFFsg0JQTkCHOmTDWjNfgl7IKvW5VkmATV38
xUtjXI0WPVMXptSiZUlvnWPqCUzT2rdNdK8RfcH6vUOHnACH2svENCXwDXoO
22P0XSt65WeBYHYb2qe6w9m/nYAudeqtmD7ZJ7TilEER04HuO5IzkNdNYDq1
e4CmoV2JLpXsLTAfIDCD+o13f0/aMHps31lHMzU6xq/YwX8UPeQpt72jIaCn
3b/kafVrFvPPLuJ7uzkctEHUrwCVAQP61PUnHpq58NDJ8RHyo8YMGFDz8vYM
jZii019uNT9lgd6iHFf0zEUP8snNQCsGDLW21uGlLfrPq3cmNdmgk7M8JC+E
DHCp82sOfJzhiK7piD6x3ZmBmdRsjldJ7Eq0m43ww901aGkoxC/agA4qkM7N
FDPAo65uUUe1bEbP59ypM5KgpcbrvO/uYMBI+z+WbR+2eqL/AuTQllk=
          "]]},
        Annotation[#, "Charting`Private`Tag$13886#1"]& ]}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.08982782052780222, 0},
    DisplayFunction->Identity,
    Frame->True,
    FrameLabel->{
      FormBox["\"t, s\"", TraditionalForm], 
      FormBox["\"v, m\"", TraditionalForm]},
    FrameStyle->Directive[14, 
      GrayLevel[0]],
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{{0.08993224071350665, 0.09494440962733951}, {2000, 2000}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->500,
    LabelStyle->Directive[14, 
      GrayLevel[0.5]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"Horizon 1. v = f(t)\"", TraditionalForm],
    PlotRange->{{0.08982782052780222, 0.09494440962733951}, {0, 4000.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{{0.15820845986321805`, 3000.}, {0.16329278246395793`, 
        3000.}}]}, {{}, {}}}, {{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxFxwssFAAcx/GjU0SO1TBLpWPFmdlQ67X/oWzJ6cUJyavWaZVEKa9kSkrp
aU0hl5F59Ny0uGL9m0QZ04rqelHo5uIoXSRt//b/br/99rGPjtu0w1AgEMim
9u/d7BobXKQIg5NTxZVLfVMU8jYvdliXSBPvw24aic2c8EXQknu1nTp/P4Tv
5OWF9Vs169h5fqVPTskQhshZ5ZbbA9azk4VHDC03sq2LdtmGBiIMk0fzowr7
gxF0ZGcfkagihB2prc9QhCGMkPea6t6bhLNTFzlB5TZ298NrCo9ohFFytL5n
oDuG3e/ptOfoDoQf5KUlxcXzd7KPmVl1qBTsaG9zpXQ3wk/yULC1LDsOYYwc
ct7+tSye3dgqiZmTgPCLrF2iKOpIZNuVlHadPciWBLlK2g8j6Mkd6kM5F1PY
yYrHX4PTEH6T9VH57hPp7JSw2CPKDLaq2jbTPQthnJwb4dZ7Nxthgux/w0co
z2GbDcnFYycR/pD39GuTVLnsFx9PtGaeYXvdadnQfg5h8r8/7fcUXUIQ/Gtf
ufSTk394ez47M97x2IXLCAbk8cXZBUsL2Ac+9N18c4VdUVO7ZlcxgiE59u3A
ij4lwjTyws+5Djml7Df9rrOcyxCEZI9rcslgOfuMPH3tnQq2TqmO/FOFYETW
jDXMvVrD7g24/nrZLYTp5PRA02f622yb0IS6urvsidWBhw1qEWaQxXlS5ekH
CMZkkQOUetazf99fVfZOhWBCrk7buyXtETvCu3imXSNbKDHrViLCTHKYLidL
04RgSl6UHZB3r5mts51dkNqCYEY+rjYJWvmcbaMUWIy/YA8aT0ZCB8Issv7b
NBB2sqe3Gds1v0QwJw/Y5/fFvWK3JYrvWXWxHZOVlZvfIojI9WoX81fvESzI
HzL0Vckf2Ubip+vmfUawJC+QqWuHe9jLk0bETV/YfwH2+GBX
          "]]},
        Annotation[#, "Charting`Private`Tag$14270#1"]& ]}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.15810253647570321`, 0},
    DisplayFunction->Identity,
    Frame->True,
    FrameLabel->{
      FormBox["\"t, s\"", TraditionalForm], 
      FormBox["\"v, m\"", TraditionalForm]},
    FrameStyle->Directive[14, 
      GrayLevel[0]],
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{{0.15820845986321805`, 0.16329278246395793`}, {3000, 3000}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->500,
    LabelStyle->Directive[14, 
      GrayLevel[0.5]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"Horizon 2. v = f(t)\"", TraditionalForm],
    PlotRange->{{0.15810253647570321`, 0.16329278246395793`}, {0, 6000.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{{0.2844268508950692, 4000.}, {0.29958907876025426`, 
        4000.}}]}, {{}, {}}}, {{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxF0n0wE3AYB/BtLSmmpFfXNZRci15Us6J+E9Ul9OYskbz1Qm9jVk6UrrJU
dwzldI5I3SKmkCwTkjKl/HZlidIOiVGN1GqmuvvV87177nufP5+7r3XI0e17
aRQKJeDP/W2bemqx6QqMtGN/gqRcxVR3HMcGC4ITRzQc8NLH1WvZazEaIpZZ
tZkUc8Fucd9Utm4YDRPrP+10Fa8Hl/Gqbuk3gvMkOnGWB1isY8e6eGH0jZgV
Lbgo3QKuH5Rm2WwHp3s2OCh8MBohDi1or47kgUMsnftNd4GDLmTOlASAS+U+
dWeDMfpOnLr6UoZdGDiq4tEhxT6Mfvz7Z/fPCG44WERfFn7vIJgrl9KsjoB1
wsVZSXyMdMS95qJyOwFYVfS++bEQHCVwMneKwegnMWNV8g5JLPjdh5rp3vHg
4gva1qFT4NuUntQF5zD6RezbHTg7TQSmKFpzxpIw0hN3ilk3r10C1/rF33ZN
BntufvG2XAxWuVibsNIxGiW+au4lw1fA/j0x4ScywZufa0pnZmFkIHYuCzKU
ZoNf1ysj5+WCI19t6E69Dp4m72xqk2A0RpzSZt+7rRDM+BFDbyzCiPI3XCn3
vh2jankJOJSXK8i+C3aPmFy4phxsGx+vbq/AiEp8p7Jv3RYZeM0I73ptFZgy
I+fMgYcY0YjrVvaETq4Dl+4Xvr9VD87PpPu7PwG3b7XOZz7DaBxxcXLS09pm
cELzV01oC0Z04lG23+o3SnBsTo3I+zV4gSWfX6EC43Smn9VbjMYTl2kltfIO
8JWtjiz/TvA8lexBkxojI+KSPW5eLt1ggeJG4IePYPZKY35iHzi/MbzAoMFo
AvHUwKauY5/BUrpQpv4K9iycm+I9DNZW2zon6zAyJuZHSSppevCg7SLOMQNG
E4nzqkTsuVTlf/vu6FrRMA68Sn++OdhIiSYRz7nhcGDUGFxwvIV1yATM8RAO
tDHA+jHtkpNTlMiEuKacH2VtAV5yeaAjYzo4Ozpik9ks8BvesK96jhKZEhfZ
p3UkMMGnqY5hTBslYvzbE+WlhXg++JTh8COaHZjTH+ckXwj+0nqx8Li9EpkR
/wZqJ8eo
          "]]},
        Annotation[#, "Charting`Private`Tag$14615#1"]& ]}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0.2841109711478787, 0},
    DisplayFunction->Identity,
    Frame->True,
    FrameLabel->{
      FormBox["\"t, s\"", TraditionalForm], 
      FormBox["\"v, m\"", TraditionalForm]},
    FrameStyle->Directive[14, 
      GrayLevel[0]],
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{{0.2844268508950692, 0.29958907876025426`}, {4000, 4000}},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->500,
    LabelStyle->Directive[14, 
      GrayLevel[0.5]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotLabel->FormBox["\"Horizon 3. v = f(t)\"", TraditionalForm],
    PlotRange->{{0.2841109711478787, 0.29958907876025426`}, {0, 8000.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.8824378440986943`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"dc4dbbe8-4150-4af6-b5e3-ec6adff0ccd7"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1428., 761.25},
WindowMargins->{{-8.25, Automatic}, {-15, Automatic}},
Magnification:>1.2 Inherited,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"22491bb2-dc03-4f10-a4ce-53bcc26cae23"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 201, 3, 83, "Subsection",ExpressionUUID->"fdadaf8c-a3dc-49e9-be19-ff7f4a92b8ea"],
Cell[CellGroupData[{
Cell[806, 29, 4839, 101, 237, "Input",ExpressionUUID->"3c94b08d-4619-4281-829e-d71892a01c18"],
Cell[5648, 132, 913, 14, 38, "Output",ExpressionUUID->"4d30bd73-15db-4e91-93fb-395f024d7fcd"],
Cell[6564, 148, 884, 13, 38, "Output",ExpressionUUID->"d2c81e89-ae48-41c7-be8e-86dce7217670"],
Cell[7451, 163, 855, 12, 38, "Output",ExpressionUUID->"a1819178-f542-4fe6-9607-041e947e75b2"],
Cell[8309, 177, 851, 12, 38, "Output",ExpressionUUID->"46a609a9-562f-46bf-a550-d556b2690da4"],
Cell[9163, 191, 855, 12, 38, "Output",ExpressionUUID->"1a0a8058-8b48-413e-b4c2-00766cdefb82"],
Cell[10021, 205, 853, 12, 38, "Output",ExpressionUUID->"79b4e42a-7616-41cb-a8cd-d32646f337af"],
Cell[10877, 219, 930, 14, 38, "Output",ExpressionUUID->"3448b70c-5760-4e7d-a8b9-9a8a4d3e2118"],
Cell[11810, 235, 854, 12, 38, "Output",ExpressionUUID->"82e23d09-7e47-4eb6-ac91-9a10fc9c1cc3"],
Cell[12667, 249, 861, 12, 38, "Output",ExpressionUUID->"e2859229-038d-400a-a3c5-bdf44accedb6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13577, 267, 222, 4, 83, "Subsection",ExpressionUUID->"47d1b9ca-c48c-41af-8ef5-034253305029"],
Cell[CellGroupData[{
Cell[13824, 275, 637, 12, 34, "Input",ExpressionUUID->"d70a71de-02a9-4f88-9fff-a78aa8b64229"],
Cell[14464, 289, 11951, 392, 290, "Output",ExpressionUUID->"c4c7c32c-a870-460d-a04a-0ba0852b9c44"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26452, 686, 328, 5, 33, "Input",ExpressionUUID->"c3d000c2-a5ba-42f5-b7d6-2bd5c9fde940"],
Cell[26783, 693, 15786, 331, 353, "Output",ExpressionUUID->"c704d43a-6f54-498a-ac77-291d50679aa7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42618, 1030, 223, 4, 83, "Subsection",ExpressionUUID->"389baaba-66a8-47b5-9ca5-dcd19346ac5c"],
Cell[CellGroupData[{
Cell[42866, 1038, 813, 16, 57, "Input",ExpressionUUID->"9cd5fa28-b50b-4d30-b6af-8a42ca477ee8"],
Cell[43682, 1056, 815, 13, 101, "Output",ExpressionUUID->"7bec8f6a-1a34-4b15-a167-33e4a6e4d890"],
Cell[44500, 1071, 88013, 1673, 769, "Output",ExpressionUUID->"5850f417-742b-4961-9af5-d8fc7cabdd58"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132550, 2749, 464, 8, 34, "Input",ExpressionUUID->"db0fa117-b1d4-4bd8-b09e-23f3647bf823"],
Cell[133017, 2759, 275782, 4828, 451, "Output",ExpressionUUID->"8f15f69b-1fa2-420b-849f-bce12fcc3fc2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[408848, 7593, 221, 4, 83, "Subsection",ExpressionUUID->"80dc5e57-61c4-4fb4-bf02-8585d0b1459f"],
Cell[CellGroupData[{
Cell[409094, 7601, 614, 11, 33, "Input",ExpressionUUID->"50983952-d340-4c79-9970-0920597ac06c"],
Cell[409711, 7614, 11095, 287, 336, "Output",ExpressionUUID->"84499ee0-1803-4636-af96-ef967de71b55"]
}, Open  ]],
Cell[CellGroupData[{
Cell[420843, 7906, 322, 5, 33, "Input",ExpressionUUID->"80f0aa5a-9549-44e5-a16b-83fcc557fb62"],
Cell[421168, 7913, 16756, 341, 365, "Output",ExpressionUUID->"8766f210-a5df-49b9-ac52-00711c0d65ce"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[437973, 8260, 196, 3, 83, "Subsection",ExpressionUUID->"d251c1ff-527c-42e3-bc70-87ae5e276cd3"],
Cell[CellGroupData[{
Cell[438194, 8267, 4483, 79, 103, "Input",ExpressionUUID->"0eb54829-783f-480c-822f-fa8376c0911d"],
Cell[442680, 8348, 51158, 985, 340, "Output",ExpressionUUID->"794e93af-350d-4854-8f5f-5ca1bdce29ee"],
Cell[493841, 9335, 2002, 39, 62, "Output",ExpressionUUID->"a9d85d70-abf8-4ade-97db-715cf77a6deb"],
Cell[495846, 9376, 1032, 16, 38, "Output",ExpressionUUID->"d081a775-39ff-46d6-ae9b-6f33d36f3aca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[496915, 9397, 348, 6, 33, "Input",ExpressionUUID->"62137d2f-c03a-4113-ad5d-7d2f2fe0dbc4"],
Cell[497266, 9405, 15583, 328, 353, "Output",ExpressionUUID->"42c8a064-7964-4fcf-b562-417361a3d7bb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[512898, 9739, 244, 4, 83, "Subsection",ExpressionUUID->"b2749eb2-7403-4c2d-898c-fccf3bd1e572"],
Cell[CellGroupData[{
Cell[513167, 9747, 386, 7, 34, "Input",ExpressionUUID->"54160bed-de22-4f4b-a2a5-426a0356e10f"],
Cell[513556, 9756, 45238, 864, 274, "Output",ExpressionUUID->"a30e2cc8-77f3-4245-bc7a-90a14b00eaaa"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[558843, 10626, 244, 4, 83, "Subsection",ExpressionUUID->"5441c87a-7fbc-448e-b976-a1a6d4d1d4f6"],
Cell[CellGroupData[{
Cell[559112, 10634, 806, 16, 100, "Input",ExpressionUUID->"9f9e15f2-1d6c-42f3-a889-4c11f1086c43"],
Cell[559921, 10652, 750, 15, 33, "Message",ExpressionUUID->"09070583-6044-4af2-9983-6dd02cae90cc"],
Cell[560674, 10669, 3238, 92, 56, "Output",ExpressionUUID->"e1534130-255a-4cc0-807e-6895da604eb1"],
Cell[563915, 10763, 748, 15, 33, "Message",ExpressionUUID->"f1bf9298-1085-4d4b-9fde-226273aacfdb"],
Cell[564666, 10780, 1343, 38, 38, "Output",ExpressionUUID->"9bfa9301-02fb-4e04-8d34-2cf239989aea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[566046, 10823, 366, 6, 33, "Input",ExpressionUUID->"385cab80-113c-4223-ad29-dacd811f0378"],
Cell[566415, 10831, 10531, 230, 853, "Output",ExpressionUUID->"015894bb-4ff9-42aa-8094-43b35a584e96"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[576995, 11067, 293, 5, 83, "Subsection",ExpressionUUID->"4b1924fb-ed3c-4d1f-a08a-69444481e78a"],
Cell[CellGroupData[{
Cell[577313, 11076, 1774, 39, 145, "Input",ExpressionUUID->"00eb4e5a-5012-441d-ab86-d0d17cf9e8df"],
Cell[579090, 11117, 525, 11, 33, "Message",ExpressionUUID->"83ebe54a-73fe-40b0-b15b-deb3fdb16c16"],
Cell[579618, 11130, 3044, 87, 57, "Output",ExpressionUUID->"39fccf2e-1fd8-49a6-a6f0-f59b0c2d74b1"],
Cell[582665, 11219, 525, 11, 33, "Message",ExpressionUUID->"1093ea49-1d5c-4fed-929d-c73582b5d592"],
Cell[583193, 11232, 1070, 31, 62, "Output",ExpressionUUID->"6c751e1f-67e9-42f3-9ca1-6369bd1f4725"],
Cell[584266, 11265, 525, 11, 33, "Message",ExpressionUUID->"ba62877f-6648-4910-a965-37e87112fcac"],
Cell[584794, 11278, 10552, 277, 359, "Output",ExpressionUUID->"d7ccde32-36fa-4b1c-8871-c76ebdec0a5c"],
Cell[595349, 11557, 525, 11, 33, "Message",ExpressionUUID->"35a3fe04-7392-41ac-ac5d-a9667eabc1f5"],
Cell[595877, 11570, 544, 14, 43, "Output",ExpressionUUID->"c697bc3d-051e-4f9b-9724-b293c2cf9895"]
}, Open  ]],
Cell[CellGroupData[{
Cell[596458, 11589, 186, 3, 33, "Input",ExpressionUUID->"1a50b413-32ac-4a78-b33b-800d4996ef11"],
Cell[596647, 11594, 8720, 201, 870, "Output",ExpressionUUID->"dc4dbbe8-4150-4af6-b5e3-ec6adff0ccd7"]
}, Open  ]]
}, Open  ]]
}
]
*)

